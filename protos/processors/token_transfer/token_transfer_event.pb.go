// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: protos/processors/token_transfer/token_transfer_event.proto

package token_transfer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Address message with oneof for different address types
type Address struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AddressType:
	//
	//	*Address_SmartContractAddress
	//	*Address_AccountAddress
	//	*Address_LiquidityPoolHash
	//	*Address_ClaimableBalanceId
	AddressType   isAddress_AddressType `protobuf_oneof:"address_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP(), []int{0}
}

func (x *Address) GetAddressType() isAddress_AddressType {
	if x != nil {
		return x.AddressType
	}
	return nil
}

func (x *Address) GetSmartContractAddress() string {
	if x != nil {
		if x, ok := x.AddressType.(*Address_SmartContractAddress); ok {
			return x.SmartContractAddress
		}
	}
	return ""
}

func (x *Address) GetAccountAddress() string {
	if x != nil {
		if x, ok := x.AddressType.(*Address_AccountAddress); ok {
			return x.AccountAddress
		}
	}
	return ""
}

func (x *Address) GetLiquidityPoolHash() string {
	if x != nil {
		if x, ok := x.AddressType.(*Address_LiquidityPoolHash); ok {
			return x.LiquidityPoolHash
		}
	}
	return ""
}

func (x *Address) GetClaimableBalanceId() string {
	if x != nil {
		if x, ok := x.AddressType.(*Address_ClaimableBalanceId); ok {
			return x.ClaimableBalanceId
		}
	}
	return ""
}

type isAddress_AddressType interface {
	isAddress_AddressType()
}

type Address_SmartContractAddress struct {
	SmartContractAddress string `protobuf:"bytes,1,opt,name=smartContractAddress,proto3,oneof"` // Smart Contract address
}

type Address_AccountAddress struct {
	AccountAddress string `protobuf:"bytes,2,opt,name=accountAddress,proto3,oneof"` // Account address
}

type Address_LiquidityPoolHash struct {
	LiquidityPoolHash string `protobuf:"bytes,3,opt,name=liquidityPoolHash,proto3,oneof"` // Liquidity Pool hash
}

type Address_ClaimableBalanceId struct {
	ClaimableBalanceId string `protobuf:"bytes,4,opt,name=claimableBalanceId,proto3,oneof"` // Claimable Balance ID
}

func (*Address_SmartContractAddress) isAddress_AddressType() {}

func (*Address_AccountAddress) isAddress_AddressType() {}

func (*Address_LiquidityPoolHash) isAddress_AddressType() {}

func (*Address_ClaimableBalanceId) isAddress_AddressType() {}

// EventMeta message
type EventMeta struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LedgerSequence uint32                 `protobuf:"varint,1,opt,name=ledgerSequence,proto3" json:"ledgerSequence,omitempty"`
	ClosedAt       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=closedAt,proto3" json:"closedAt,omitempty"`
	// operationIndex is optional. It wont be present in fee events.
	// Additionally, operationIndex will always be 0 for smart contract transactions
	OperationIndex *uint32 `protobuf:"varint,3,opt,name=operationIndex,proto3,oneof" json:"operationIndex,omitempty"`
	TxHash         string  `protobuf:"bytes,4,opt,name=txHash,proto3" json:"txHash,omitempty"` // Stellar transaction hash
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EventMeta) Reset() {
	*x = EventMeta{}
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMeta) ProtoMessage() {}

func (x *EventMeta) ProtoReflect() protoreflect.Message {
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMeta.ProtoReflect.Descriptor instead.
func (*EventMeta) Descriptor() ([]byte, []int) {
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP(), []int{1}
}

func (x *EventMeta) GetLedgerSequence() uint32 {
	if x != nil {
		return x.LedgerSequence
	}
	return 0
}

func (x *EventMeta) GetClosedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosedAt
	}
	return nil
}

func (x *EventMeta) GetOperationIndex() uint32 {
	if x != nil && x.OperationIndex != nil {
		return *x.OperationIndex
	}
	return 0
}

func (x *EventMeta) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type Transfer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *Address               `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            *Address               `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP(), []int{2}
}

func (x *Transfer) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Transfer) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Transfer) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type Mint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	To            *Address               `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mint) Reset() {
	*x = Mint{}
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mint) ProtoMessage() {}

func (x *Mint) ProtoReflect() protoreflect.Message {
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mint.ProtoReflect.Descriptor instead.
func (*Mint) Descriptor() ([]byte, []int) {
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP(), []int{3}
}

func (x *Mint) GetTo() *Address {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *Mint) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type Burn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *Address               `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Burn) Reset() {
	*x = Burn{}
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Burn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Burn) ProtoMessage() {}

func (x *Burn) ProtoReflect() protoreflect.Message {
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Burn.ProtoReflect.Descriptor instead.
func (*Burn) Descriptor() ([]byte, []int) {
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP(), []int{4}
}

func (x *Burn) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Burn) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type Clawback struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *Address               `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Clawback) Reset() {
	*x = Clawback{}
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Clawback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clawback) ProtoMessage() {}

func (x *Clawback) ProtoReflect() protoreflect.Message {
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clawback.ProtoReflect.Descriptor instead.
func (*Clawback) Descriptor() ([]byte, []int) {
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP(), []int{5}
}

func (x *Clawback) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Clawback) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type Fee struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          *Address               `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Amount        string                 `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Fee) Reset() {
	*x = Fee{}
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP(), []int{6}
}

func (x *Fee) GetFrom() *Address {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *Fee) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

// TokenTransfer message
type TokenTransferEvent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Meta  *EventMeta             `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// Asset might not always be presen so marking it as optional, especially in events emitted by SEP-41 custom token contracts
	Asset *string `protobuf:"bytes,2,opt,name=asset,proto3,oneof" json:"asset,omitempty"`
	// Types that are valid to be assigned to Event:
	//
	//	*TokenTransferEvent_Transfer
	//	*TokenTransferEvent_Mint
	//	*TokenTransferEvent_Burn
	//	*TokenTransferEvent_Clawback
	//	*TokenTransferEvent_Fee
	Event         isTokenTransferEvent_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenTransferEvent) Reset() {
	*x = TokenTransferEvent{}
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenTransferEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenTransferEvent) ProtoMessage() {}

func (x *TokenTransferEvent) ProtoReflect() protoreflect.Message {
	mi := &file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenTransferEvent.ProtoReflect.Descriptor instead.
func (*TokenTransferEvent) Descriptor() ([]byte, []int) {
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP(), []int{7}
}

func (x *TokenTransferEvent) GetMeta() *EventMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *TokenTransferEvent) GetAsset() string {
	if x != nil && x.Asset != nil {
		return *x.Asset
	}
	return ""
}

func (x *TokenTransferEvent) GetEvent() isTokenTransferEvent_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *TokenTransferEvent) GetTransfer() *Transfer {
	if x != nil {
		if x, ok := x.Event.(*TokenTransferEvent_Transfer); ok {
			return x.Transfer
		}
	}
	return nil
}

func (x *TokenTransferEvent) GetMint() *Mint {
	if x != nil {
		if x, ok := x.Event.(*TokenTransferEvent_Mint); ok {
			return x.Mint
		}
	}
	return nil
}

func (x *TokenTransferEvent) GetBurn() *Burn {
	if x != nil {
		if x, ok := x.Event.(*TokenTransferEvent_Burn); ok {
			return x.Burn
		}
	}
	return nil
}

func (x *TokenTransferEvent) GetClawback() *Clawback {
	if x != nil {
		if x, ok := x.Event.(*TokenTransferEvent_Clawback); ok {
			return x.Clawback
		}
	}
	return nil
}

func (x *TokenTransferEvent) GetFee() *Fee {
	if x != nil {
		if x, ok := x.Event.(*TokenTransferEvent_Fee); ok {
			return x.Fee
		}
	}
	return nil
}

type isTokenTransferEvent_Event interface {
	isTokenTransferEvent_Event()
}

type TokenTransferEvent_Transfer struct {
	Transfer *Transfer `protobuf:"bytes,3,opt,name=transfer,proto3,oneof"`
}

type TokenTransferEvent_Mint struct {
	Mint *Mint `protobuf:"bytes,4,opt,name=mint,proto3,oneof"`
}

type TokenTransferEvent_Burn struct {
	Burn *Burn `protobuf:"bytes,5,opt,name=burn,proto3,oneof"`
}

type TokenTransferEvent_Clawback struct {
	Clawback *Clawback `protobuf:"bytes,6,opt,name=clawback,proto3,oneof"`
}

type TokenTransferEvent_Fee struct {
	Fee *Fee `protobuf:"bytes,7,opt,name=fee,proto3,oneof"`
}

func (*TokenTransferEvent_Transfer) isTokenTransferEvent_Event() {}

func (*TokenTransferEvent_Mint) isTokenTransferEvent_Event() {}

func (*TokenTransferEvent_Burn) isTokenTransferEvent_Event() {}

func (*TokenTransferEvent_Clawback) isTokenTransferEvent_Event() {}

func (*TokenTransferEvent_Fee) isTokenTransferEvent_Event() {}

var File_protos_processors_token_transfer_token_transfer_event_proto protoreflect.FileDescriptor

var file_protos_processors_token_transfer_token_transfer_event_proto_rawDesc = []byte{
	0x0a, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x73, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x2f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdb,
	0x01, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x14, 0x73, 0x6d,
	0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x14, 0x73, 0x6d, 0x61, 0x72,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x28, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2e, 0x0a, 0x11, 0x6c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x11, 0x6c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x50, 0x6f, 0x6f, 0x6c, 0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x12, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x12, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x61,
	0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x42, 0x0e, 0x0a, 0x0c,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0xc3, 0x01, 0x0a,
	0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0e, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x0e, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x42,
	0x11, 0x0a, 0x0f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x22, 0x78, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x02, 0x74,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x04,
	0x4d, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4b, 0x0a, 0x04, 0x42, 0x75, 0x72, 0x6e, 0x12, 0x2b, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x4f, 0x0a, 0x08, 0x43, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x2b,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xe2, 0x02, 0x0a, 0x12, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x36, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x6d, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x75, 0x72, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x48, 0x00, 0x52, 0x04, 0x62, 0x75, 0x72, 0x6e,
	0x12, 0x36, 0x0a, 0x08, 0x63, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x08,
	0x63, 0x6c, 0x61, 0x77, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x27, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x2e, 0x46, 0x65, 0x65, 0x48, 0x00, 0x52, 0x03, 0x66, 0x65,
	0x65, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x73, 0x74, 0x65, 0x6c, 0x6c, 0x61, 0x72, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x73, 0x2f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x66, 0x65, 0x72, 0x3b, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_processors_token_transfer_token_transfer_event_proto_rawDescOnce sync.Once
	file_protos_processors_token_transfer_token_transfer_event_proto_rawDescData = file_protos_processors_token_transfer_token_transfer_event_proto_rawDesc
)

func file_protos_processors_token_transfer_token_transfer_event_proto_rawDescGZIP() []byte {
	file_protos_processors_token_transfer_token_transfer_event_proto_rawDescOnce.Do(func() {
		file_protos_processors_token_transfer_token_transfer_event_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_processors_token_transfer_token_transfer_event_proto_rawDescData)
	})
	return file_protos_processors_token_transfer_token_transfer_event_proto_rawDescData
}

var file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_protos_processors_token_transfer_token_transfer_event_proto_goTypes = []any{
	(*Address)(nil),               // 0: token_transfer.Address
	(*EventMeta)(nil),             // 1: token_transfer.EventMeta
	(*Transfer)(nil),              // 2: token_transfer.Transfer
	(*Mint)(nil),                  // 3: token_transfer.Mint
	(*Burn)(nil),                  // 4: token_transfer.Burn
	(*Clawback)(nil),              // 5: token_transfer.Clawback
	(*Fee)(nil),                   // 6: token_transfer.Fee
	(*TokenTransferEvent)(nil),    // 7: token_transfer.TokenTransferEvent
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_protos_processors_token_transfer_token_transfer_event_proto_depIdxs = []int32{
	8,  // 0: token_transfer.EventMeta.closedAt:type_name -> google.protobuf.Timestamp
	0,  // 1: token_transfer.Transfer.from:type_name -> token_transfer.Address
	0,  // 2: token_transfer.Transfer.to:type_name -> token_transfer.Address
	0,  // 3: token_transfer.Mint.to:type_name -> token_transfer.Address
	0,  // 4: token_transfer.Burn.from:type_name -> token_transfer.Address
	0,  // 5: token_transfer.Clawback.from:type_name -> token_transfer.Address
	0,  // 6: token_transfer.Fee.from:type_name -> token_transfer.Address
	1,  // 7: token_transfer.TokenTransferEvent.meta:type_name -> token_transfer.EventMeta
	2,  // 8: token_transfer.TokenTransferEvent.transfer:type_name -> token_transfer.Transfer
	3,  // 9: token_transfer.TokenTransferEvent.mint:type_name -> token_transfer.Mint
	4,  // 10: token_transfer.TokenTransferEvent.burn:type_name -> token_transfer.Burn
	5,  // 11: token_transfer.TokenTransferEvent.clawback:type_name -> token_transfer.Clawback
	6,  // 12: token_transfer.TokenTransferEvent.fee:type_name -> token_transfer.Fee
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_protos_processors_token_transfer_token_transfer_event_proto_init() }
func file_protos_processors_token_transfer_token_transfer_event_proto_init() {
	if File_protos_processors_token_transfer_token_transfer_event_proto != nil {
		return
	}
	file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[0].OneofWrappers = []any{
		(*Address_SmartContractAddress)(nil),
		(*Address_AccountAddress)(nil),
		(*Address_LiquidityPoolHash)(nil),
		(*Address_ClaimableBalanceId)(nil),
	}
	file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[1].OneofWrappers = []any{}
	file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes[7].OneofWrappers = []any{
		(*TokenTransferEvent_Transfer)(nil),
		(*TokenTransferEvent_Mint)(nil),
		(*TokenTransferEvent_Burn)(nil),
		(*TokenTransferEvent_Clawback)(nil),
		(*TokenTransferEvent_Fee)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_processors_token_transfer_token_transfer_event_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_processors_token_transfer_token_transfer_event_proto_goTypes,
		DependencyIndexes: file_protos_processors_token_transfer_token_transfer_event_proto_depIdxs,
		MessageInfos:      file_protos_processors_token_transfer_token_transfer_event_proto_msgTypes,
	}.Build()
	File_protos_processors_token_transfer_token_transfer_event_proto = out.File
	file_protos_processors_token_transfer_token_transfer_event_proto_rawDesc = nil
	file_protos_processors_token_transfer_token_transfer_event_proto_goTypes = nil
	file_protos_processors_token_transfer_token_transfer_event_proto_depIdxs = nil
}
