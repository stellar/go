syntax = "proto3";

package token_transfer;
option go_package = "github.com/stellar/go/protos/processors/token_tranfer;token_transfer";

import "google/protobuf/timestamp.proto";

// Address message with oneof for different address types
message Address {
  oneof address_type {
    string smartContractAddress = 1; // Smart Contract address
    string accountAddress = 2;       // Account address
    string liquidityPoolHash = 3;   // Liquidity Pool hash
    string claimableBalanceId = 4;  // Claimable Balance ID
  }
}

// EventMeta message
message EventMeta {
  uint32 ledgerSequence = 1;
  google.protobuf.Timestamp closedAt = 2;
  /*
   * operationIndex is optional. It wont be present in fee events.
   * Additionally, operationIndex will always be 0 for smart contract transactions
  */
  optional uint32 operationIndex = 3;
  string txHash = 4;                      // Stellar transaction hash
}

message Transfer {
  Address from = 1;
  Address to = 2;
  string amount = 3;
}

message Mint {
  Address to = 1;
  string amount = 2;
}

message Burn {
  Address from = 1;
  string amount = 2;
}

message Clawback {
  Address from = 1;
  string amount = 3;
}

message Fee {
  Address from = 1;
  string amount = 2;
}

// TokenTransfer message
message TokenTransferEvent {
  EventMeta meta = 1;
  // Asset might not always be presen so marking it as optional, especially in events emitted by SEP-41 custom token contracts
  optional string asset = 2;
  oneof event {
    Transfer transfer = 3;
    Mint mint = 4;
    Burn burn = 5;
    Clawback clawback = 6;
    Fee fee = 7;
  }
}
