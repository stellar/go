name: Horizon

on:
  push:
    branches: [master]
  pull_request:

jobs:

  integration:
    name: Integration tests
    strategy:
      matrix:
        os: [ubuntu-latest]
        go: [1.17]
        pg: [9.6.5]
        ingestion-backend: [db, captive-core, captive-core-remote-storage]
        captive-core: [18.0.3-746.f3baea6.focal]
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:${{ matrix.pg }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432
    env:
      HORIZON_INTEGRATION_TESTS: "true"
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: postgres
    steps:
    - uses: actions/checkout@v2
      with:
        # For pull requests, build and test the PR head not a merge of the PR with the destination.
        ref: ${{ github.head_ref || github.ref }}
        # We need to full history for git-restore-mtime to know what modification dates to use.
        # Otherwise, the Go test cache will fail (due to the modification time of fixtures changing).
        fetch-depth: '0'

    - uses: ./.github/actions/setup-go
      with:
        go-version: ${{ matrix.go }}

    - name: Pull latest Stellar Core image
      run: docker pull stellar/stellar-core

    - if: ${{ startsWith(matrix.ingestion-backend, 'captive-core') }}
      name: Install and enable Captive Core
      run: |
        sudo wget -qO - https://apt.stellar.org/SDF.asc | APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=true sudo apt-key add -
        sudo bash -c 'echo "deb https://apt.stellar.org focal unstable" > /etc/apt/sources.list.d/SDF-unstable.list'
        sudo apt-get update && sudo apt-get install -y stellar-core=${{ matrix.captive-core }}
        echo "Using stellar core version $(stellar-core version)"
        echo 'HORIZON_INTEGRATION_ENABLE_CAPTIVE_CORE=true' >> $GITHUB_ENV
        echo 'CAPTIVE_CORE_BIN=/usr/bin/stellar-core'       >> $GITHUB_ENV

    - if: ${{ matrix.ingestion-backend == 'captive-core-remote-storage' }}
      name: Setup Captive Core Remote Storage
      run: echo 'HORIZON_INTEGRATION_ENABLE_CAPTIVE_CORE_USE_DB=true' >> $GITHUB_ENV

    - run: go test -race -timeout 25m -v ./services/horizon/internal/integration/...

  verify-range:
    name: Test (and push) verify-range image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # For pull requests, build and test the PR head not a merge of the PR with the destination.
        ref: ${{ github.head_ref || github.ref }}

    - name: Build and test the Verify Range Docker image
      run: |
        docker build -f services/horizon/docker/verify-range/Dockerfile -t stellar/horizon-verify-range services/horizon/docker/verify-range/
        # Any range should do for basic testing, this range was chosen pretty early in history so that it only takes a few mins to run
        docker run -e BRANCH=$(git rev-parse HEAD) -e FROM=10000063 -e TO=10000127 stellar/horizon-verify-range

    # Push image
    - if: github.ref == 'refs/heads/master'
      name: Login to DockerHub
      uses: docker/login-action@bb984efc561711aaa26e433c32c3521176eae55b
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - if: github.ref == 'refs/heads/master'
      name: Push to DockerHub
      # TODO(fons): Commented out until we disable the CircleCI jobs
      run: \# docker push stellar/horizon-verify-range:latest

