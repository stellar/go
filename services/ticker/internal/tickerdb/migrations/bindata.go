// Code generated by go-bindata. DO NOT EDIT.
// sources:
// migrations/20190404184050-initial.sql (821B)
// migrations/20190405112544-increase_asset_code_size.sql (366B)
// migrations/20190408115724-add_new_asset_fields.sql (1.371kB)
// migrations/20190408155841-add_issuers_table.sql (950B)
// migrations/20190409152216-add_trades_table.sql (628B)
// migrations/20190409172610-rename_assets_desc_description.sql (168B)
// migrations/20190410094830-add_assets_issuer_account_field.sql (344B)
// migrations/20190411165735-data_seed_and_indices.sql (1.522kB)
// migrations/20190425110313-add_orderbook_stats.sql (749B)
// migrations/20190426092321-add_aggregated_orderbook_view.sql (831B)

package bdata

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations20190404184050InitialSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x41\x8f\x9b\x30\x10\x85\xef\xfe\x15\x73\x64\xd5\xdd\x4a\xad\xaa\x5e\xf6\x44\x17\x2a\x45\xa5\xb0\xa5\x70\xc8\xc9\x32\x66\x14\x46\x6b\x3c\xd4\x36\x49\xe9\xaf\xaf\x20\x69\xab\xa4\x64\x95\x23\xf8\x7b\x6f\xac\xe7\x37\xe2\xe1\x01\xde\xf4\xb4\x73\x2a\x20\xd4\x83\x10\x4f\x65\x1a\x57\x29\x54\xf1\xa7\x2c\x85\x61\x6c\x0c\xe9\xb7\xca\x7b\x0c\x1e\x22\x01\x00\x40\x2d\x78\x74\xa4\x0c\xe4\x45\x05\x79\x9d\x65\xf0\x5c\x6e\xbe\xc6\xe5\x16\xbe\xa4\xdb\xfb\x85\xd1\xdc\x22\xe8\x4e\x39\xa5\x03\x3a\xd8\x2b\x37\x91\xdd\x45\xef\xde\xdf\xfd\x15\x1d\x41\xf2\x7e\x44\x07\x01\x7f\x86\x8b\x93\x30\x0d\x6b\x16\x1f\x3f\x5c\x5a\xd8\xb1\x97\x4a\x6b\x1e\x6d\xf0\x40\x36\xe0\x0e\xdd\x05\xa2\xc6\xd0\x49\x87\x3f\x46\x72\xd8\x42\xc3\x6c\x50\xd9\x75\x66\xcf\x5a\x35\x06\xaf\x41\xfd\x3c\x06\x5a\x1e\x67\x66\x70\xa8\xc9\x13\xff\x47\xcd\x71\x49\xcd\x36\x38\x36\x06\x5b\xd9\x4c\xb2\xe5\x5e\x91\xbd\x66\x6b\x75\xc7\x4e\xfe\xd1\xdd\x98\xdd\x99\xea\xe6\xb8\xc8\xcb\xbd\x32\x74\x2d\x86\xe5\x4c\x05\x62\x2b\xd1\x39\x5e\x7d\x1a\xa3\x7c\x38\x99\x04\xea\xd1\x07\xd5\x0f\x70\xa0\xd0\x2d\x9f\xf0\x8b\x2d\xae\x29\x74\x87\xfa\x05\x5f\xd1\x24\xe9\xe7\xb8\xce\x2a\xb0\x7c\x88\xfe\x5d\x5b\xdc\x3d\x0a\x11\x67\x55\x5a\x9e\x4a\x59\xe4\xd9\xf6\xbc\x99\xcb\x8c\x38\x49\xe0\xa9\xc8\xbf\x57\x65\xbc\xc9\xab\xe3\x23\xf8\x25\x4d\x79\x6c\x99\x7c\xc1\x09\xea\x7c\xf3\xad\x4e\x21\x9a\xff\xdf\x9f\xea\x37\x0f\x38\xdb\x83\x84\x0f\x56\x88\xa4\x2c\x9e\xd7\xf6\xe0\x51\xfc\x0e\x00\x00\xff\xff\x48\x16\x89\x51\x35\x03\x00\x00")

func migrations20190404184050InitialSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190404184050InitialSql,
		"migrations/20190404184050-initial.sql",
	)
}

func migrations20190404184050InitialSql() (*asset, error) {
	bytes, err := migrations20190404184050InitialSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190404184050-initial.sql", size: 821, mode: os.FileMode(0644), modTime: time.Unix(1566474118, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x48, 0xaa, 0xc8, 0x33, 0x90, 0xe0, 0xbb, 0xf3, 0xa8, 0x5c, 0xb6, 0x9b, 0x50, 0xfb, 0xcb, 0x43, 0x16, 0x5d, 0x4d, 0xbd, 0x24, 0xec, 0xda, 0x11, 0x2d, 0x5c, 0x5f, 0xe, 0x7c, 0xaf, 0xd9, 0xb3}}
	return a, nil
}

var _migrations20190405112544Increase_asset_code_sizeSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x28\x4d\xca\xc9\x4c\xd6\x4b\x2c\x2e\x4e\x2d\x29\xe6\x52\x50\x50\x50\x80\xc8\x3a\xfb\xfb\x84\xfa\xfa\x29\x24\xe7\xa7\xa4\x2a\x94\x54\x16\xa4\x2a\x24\x67\x24\x16\x25\x26\x97\xa4\x16\x29\x94\x25\x16\x55\x66\xe6\xa5\x6b\x98\x99\x68\x5a\x73\x91\x62\x58\x62\x5e\x72\x46\x7e\x51\x3c\x58\x3a\x9e\xb0\xc9\xc8\xae\x76\xc9\x2f\xcf\xa3\x96\xbb\x0d\x8d\x68\xe5\x6e\xb0\xc9\x80\x00\x00\x00\xff\xff\x5e\x84\x69\x2a\x6e\x01\x00\x00")

func migrations20190405112544Increase_asset_code_sizeSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190405112544Increase_asset_code_sizeSql,
		"migrations/20190405112544-increase_asset_code_size.sql",
	)
}

func migrations20190405112544Increase_asset_code_sizeSql() (*asset, error) {
	bytes, err := migrations20190405112544Increase_asset_code_sizeSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190405112544-increase_asset_code_size.sql", size: 366, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0x95, 0x4e, 0xf5, 0x5, 0xec, 0xe3, 0x22, 0x80, 0x7a, 0x8e, 0xdc, 0xda, 0x65, 0x26, 0x33, 0xea, 0x37, 0xb7, 0xd0, 0x59, 0x70, 0xe, 0x61, 0x6a, 0xe8, 0x44, 0x7e, 0x9, 0x1, 0x43, 0x46}}
	return a, nil
}

var _migrations20190408115724Add_new_asset_fieldsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\x4d\x8f\x9b\x30\x10\x86\xef\xfc\x8a\x51\x2e\x39\x34\xa9\x7a\xeb\x21\x27\x5a\xc8\x89\x40\x45\xe1\x6c\x19\x3c\xa5\xa3\x1a\x83\x3c\xb6\x9a\xfc\xfb\x2a\x1f\xdd\x64\xd7\x64\x13\xb4\x57\xfb\x7d\x07\x33\x7a\x9e\x68\xbd\x86\x4f\x3d\x75\x56\x3a\x84\x7a\x8c\xe2\xac\x4a\x4b\xa8\xe2\x6f\x59\x0a\xa3\x6f\x34\xb5\x9f\x25\x33\x3a\x8e\x00\x00\xca\x34\x8f\x77\x29\x7c\x2f\xb2\x7a\x97\x03\x31\x7b\xb4\x50\x15\x97\xa4\xf8\x83\x87\x4d\xf4\x60\x44\x9c\x24\xff\xfb\x8a\x78\xd4\xf2\x20\x14\xb6\xd4\x4b\xcd\x40\xc6\x61\x87\x16\xf2\xa2\x82\xbc\xce\x32\x48\xd2\x6d\x5c\x67\x15\x7c\x5d\xbd\xed\x2e\x8c\xec\x71\x01\x0e\xf7\x2e\x8c\x2f\x97\x61\x5e\x21\xb7\x33\xf2\xed\x60\x14\x39\x1a\x0c\x3f\xdf\x21\x16\xa7\x1f\x15\xd2\xb4\xbf\x07\x8b\x0a\x9a\x61\xd0\x28\x4d\xd8\xde\xc6\xd9\xcf\x34\x18\xf0\x8b\xf6\xa8\x84\xf1\x7d\x83\x16\x1a\xea\xc8\x4c\x7c\xf8\x4b\x50\xeb\xe5\x7e\x7e\x89\x58\x78\xa3\xa9\x27\xf7\xde\x3b\xab\xb2\x0e\x9f\x69\x51\x61\x3f\x1e\x97\x23\xc8\xb0\xb3\xbe\x9d\xb9\xa8\x76\xd0\x5a\x3a\xb4\x52\x0b\xa9\x94\x45\x66\xfc\x50\x5b\x30\x75\x46\x3a\x6f\xe7\x8d\xf1\xc6\x59\x9a\x53\x59\xb0\x93\xce\xf3\x7d\x8c\x36\xd1\x2b\x9f\x92\xe1\xaf\x99\x65\xd4\xd5\xa3\xa3\x55\x67\xbf\x1e\x1a\x95\x94\xc5\x8f\x7b\x4a\xad\x82\xc4\x59\x9c\x89\xf3\x93\x20\xe1\xf9\x55\x84\xf0\x2e\x00\x3e\x8c\xdc\x22\x1d\xde\x5e\xc9\x9d\x1c\xfe\x02\x68\x78\x7b\x87\xc1\xa9\xf7\x87\xac\x3d\x93\xba\x61\x6a\x2a\x7e\x61\x67\x62\x8f\x17\x46\x36\xd1\xbf\x00\x00\x00\xff\xff\xd3\x88\x81\xf2\x5b\x05\x00\x00")

func migrations20190408115724Add_new_asset_fieldsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190408115724Add_new_asset_fieldsSql,
		"migrations/20190408115724-add_new_asset_fields.sql",
	)
}

func migrations20190408115724Add_new_asset_fieldsSql() (*asset, error) {
	bytes, err := migrations20190408115724Add_new_asset_fieldsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190408115724-add_new_asset_fields.sql", size: 1371, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc1, 0xe2, 0x30, 0xe, 0x77, 0x54, 0xdb, 0xeb, 0xc5, 0xb0, 0x0, 0xac, 0x7b, 0xf2, 0xc8, 0xc8, 0x77, 0xb8, 0xa3, 0x8f, 0x56, 0xf2, 0x7a, 0xa, 0x7f, 0x11, 0xa6, 0x76, 0x54, 0x87, 0x5, 0x80}}
	return a, nil
}

var _migrations20190408155841Add_issuers_tableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xc1\x72\xda\x30\x10\xbd\xeb\x2b\x76\x72\x22\xd3\xa4\x3f\x90\x93\x8b\x45\xc7\x83\x23\x53\xc5\x3e\x70\xd2\x98\x68\x21\x9a\x1a\x89\x4a\xeb\xd2\xfc\x7d\xc7\xb6\x30\x1e\x06\x68\xaf\xfb\x9e\x76\xf7\xbd\xb7\x62\xcf\xcf\xf0\x65\x6f\x76\xbe\x26\x84\xea\xc0\xe6\x92\x27\x25\x87\x32\xf9\x96\x73\x38\xb4\x9b\xc6\xbc\x7f\x35\x21\xb4\xe8\x03\xcc\x18\x00\x80\xd1\x10\xd0\x9b\xba\x01\x51\x94\x20\xaa\x3c\x87\x95\xcc\x5e\x13\xb9\x86\x25\x5f\x3f\xf5\x9c\xe1\xa1\xfa\x89\x9f\x40\xf8\x87\x46\xe6\x80\xda\x7a\x8f\xd7\xea\xad\x6f\xae\x95\xc9\xed\x1b\x75\x03\xdb\xa2\x46\x5f\x93\x71\x56\x05\xf4\xbf\xd1\x5f\x23\xd5\x2d\x7d\xdc\x81\xc9\xd7\x36\x6c\xd1\xdf\xa1\x1c\x71\xa3\xfa\x2e\x68\xf5\xc1\x19\x4b\xd7\x48\x1a\x0f\x2e\x18\xba\xd3\xc6\xf9\x9d\xa2\xa3\x21\xba\x84\xd9\xe3\x0b\xeb\x92\xc8\x7a\xa7\xa3\x7d\xd0\xd9\x17\x3e\x5c\xdb\x68\xd8\x20\xb4\xd6\xfc\x6a\x91\x25\x79\xc9\x65\xcc\xa7\x10\xf9\xfa\x22\xa4\x7e\x4e\x92\xa6\x30\x2f\xc4\x5b\x29\x93\x4c\x94\x93\x34\xd4\xd0\x04\x2a\x91\xfd\xa8\x38\xcc\xce\x48\x5c\x20\xd1\x1a\x16\x4b\xd8\x7a\xb7\x87\x3a\x04\xa4\x00\xe4\xe0\xd4\x7b\x3a\x3b\x8e\x1d\x48\x93\xa9\x79\xf5\x2a\xe2\x03\x65\x34\x18\x4b\xb8\x43\x3f\x2a\x7d\x61\xff\xd5\x65\xdc\x7d\xdb\x6d\x3d\xc0\xea\x74\x87\x8b\x42\xf2\xec\xbb\xe8\xce\x0d\x66\xe3\xa8\x47\x90\x7c\xc1\x25\x17\x73\xfe\x06\xe3\xc9\x1a\x1d\x95\xa5\xd8\x20\x21\xac\x06\x6b\x97\xf8\x39\x15\xf9\x8f\x9d\x52\x59\xac\x4e\xd2\x1e\xce\x9e\x3d\x5c\x88\x99\xc6\x71\x5b\x51\x14\xf3\xee\x34\x46\x45\xfd\x3f\x39\x45\xd2\xd5\x9f\xce\x06\xc6\xed\xc7\x2f\x9a\xba\xa3\x65\xec\x6f\x00\x00\x00\xff\xff\xda\x82\x34\x58\xb6\x03\x00\x00")

func migrations20190408155841Add_issuers_tableSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190408155841Add_issuers_tableSql,
		"migrations/20190408155841-add_issuers_table.sql",
	)
}

func migrations20190408155841Add_issuers_tableSql() (*asset, error) {
	bytes, err := migrations20190408155841Add_issuers_tableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190408155841-add_issuers_table.sql", size: 950, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7b, 0xc6, 0x44, 0x9b, 0x7f, 0x20, 0x98, 0x1, 0xc2, 0x25, 0x17, 0x73, 0x3b, 0x41, 0xb1, 0xc4, 0xbe, 0xe4, 0x94, 0xd8, 0x54, 0x9c, 0x6e, 0x6e, 0xd0, 0x38, 0x7a, 0xbf, 0x24, 0xd9, 0x26, 0x6e}}
	return a, nil
}

var _migrations20190409152216Add_trades_tableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x41\x6e\xc2\x30\x10\x45\xf7\x3e\xc5\x2c\x41\x85\x13\xb0\x4a\xc1\x95\x50\xd3\x40\xdd\x64\xc1\x2a\x72\xe2\x21\x1d\xc9\x89\x23\x8f\x51\x2b\x4e\x5f\xe1\xd2\x54\xb4\x0d\x2a\x9b\x6c\xfe\xcb\xff\xcf\xd2\x88\xf9\x1c\xee\x5a\x6a\xbc\x0e\x08\x45\x2f\x96\x4a\x26\xb9\x84\x3c\xb9\x4f\x25\x04\xaf\x0d\x32\x4c\x04\x00\x00\x19\x60\xf4\xa4\x2d\x64\x9b\x1c\xb2\x22\x4d\x61\xab\xd6\x4f\x89\xda\xc1\xa3\xdc\xcd\x22\xf3\xea\x3c\x1d\x5d\x57\x92\x81\x80\xef\xe1\x9b\x2c\xb2\xf5\x73\x21\x67\x22\x52\x16\x4d\x83\xbe\xac\xad\x63\x2c\x03\xb5\x08\xa7\x0f\x07\xdd\xf6\xe1\x38\xfc\xf3\xd9\xe8\xf6\x7b\xf4\xbf\xfa\xce\x45\x95\x66\x2c\xc7\x88\x01\xd0\x75\xed\x0e\x5d\x18\xcf\xdb\x18\x1b\x77\xa8\x2c\x42\xef\xb1\x26\x26\xd7\xfd\x89\x32\x63\x38\x6d\x51\x17\xb0\x41\x0f\x4a\x3e\x48\x25\xb3\xa5\x7c\x81\x98\x31\x4c\xc8\x4c\xcf\x7a\x71\x16\xfd\x55\xc3\x2f\xe6\x8a\xe4\x80\xfc\xcb\x73\xa0\x6f\x52\x8d\xaf\x23\x2e\x19\xad\x45\x0f\x95\x73\x16\xf5\xcf\xea\xde\x53\x8d\xe3\xfb\x62\xba\x10\x17\xe7\xb4\x72\x6f\x9d\x58\xa9\xcd\xf6\xe2\x9c\x16\xe2\x23\x00\x00\xff\xff\xab\x60\xb3\x30\x74\x02\x00\x00")

func migrations20190409152216Add_trades_tableSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190409152216Add_trades_tableSql,
		"migrations/20190409152216-add_trades_table.sql",
	)
}

func migrations20190409152216Add_trades_tableSql() (*asset, error) {
	bytes, err := migrations20190409152216Add_trades_tableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190409152216-add_trades_table.sql", size: 628, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x47, 0xc1, 0xda, 0x1d, 0x61, 0x7c, 0xb6, 0x5d, 0x7d, 0xed, 0x2a, 0xd0, 0x8e, 0x4e, 0x24, 0x3d, 0x94, 0xd8, 0x88, 0x47, 0x2d, 0x5b, 0x65, 0xc1, 0x57, 0xf, 0xc6, 0x22, 0x39, 0xf7, 0xe9, 0x81}}
	return a, nil
}

var _migrations20190409172610Rename_assets_desc_descriptionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe2\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x28\x4d\xca\xc9\x4c\xd6\x4b\x2c\x2e\x4e\x2d\x29\xe6\x52\x50\x50\x50\x08\x72\xf5\x73\xf4\x75\x55\x70\xf6\xf7\x09\xf5\xf5\x53\x50\x4a\x49\x2d\x4e\x56\x52\x08\xf1\x57\x00\x31\x8a\x32\x0b\x4a\x32\xf3\xf3\xac\xb9\x50\x8c\x74\xc9\x2f\xcf\x23\xc9\x50\x24\xa3\x40\x26\x43\xec\xb0\xe6\x02\x04\x00\x00\xff\xff\x80\x17\x6b\xa4\xa8\x00\x00\x00")

func migrations20190409172610Rename_assets_desc_descriptionSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190409172610Rename_assets_desc_descriptionSql,
		"migrations/20190409172610-rename_assets_desc_description.sql",
	)
}

func migrations20190409172610Rename_assets_desc_descriptionSql() (*asset, error) {
	bytes, err := migrations20190409172610Rename_assets_desc_descriptionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190409172610-rename_assets_desc_description.sql", size: 168, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa7, 0x71, 0xc8, 0x2f, 0x71, 0x22, 0xa8, 0x42, 0x2b, 0xa, 0x0, 0x5, 0x51, 0x15, 0x9, 0x8b, 0xd6, 0x45, 0x72, 0x29, 0x8e, 0x38, 0x9d, 0x9f, 0x16, 0x84, 0x7b, 0xf, 0x29, 0x48, 0x3c, 0x3f}}
	return a, nil
}

var _migrations20190410094830Add_assets_issuer_account_fieldSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\xbf\xee\x82\x30\x1c\x04\xf0\xbd\x4f\x71\xe3\xef\x17\xc5\x17\x60\xaa\x94\x81\xa4\x7e\xab\xd8\x0e\x4e\x04\x6b\x63\x88\x0a\x84\x96\xa8\x6f\x6f\x8c\x3a\x48\xfc\x37\x5f\xf2\xc9\xdd\xb1\x28\xc2\xe8\x50\x6d\xbb\x32\x38\x98\x96\x71\xa9\xd3\x1c\x9a\x4f\x65\x8a\xb6\x5f\xef\x2b\x3b\x29\xbd\x77\xc1\x33\x00\xe0\x42\x20\x51\xd2\xcc\x08\x95\xf7\xbd\xeb\x8a\xd2\xda\xa6\xaf\x03\x82\x3b\x05\x90\xd2\x20\x23\x65\xcc\xbe\x38\x22\x57\x73\x24\x8a\x96\x3a\xe7\x19\x69\xdc\xa2\xc2\x36\x1b\x57\xdc\xe1\x9d\x3b\x0f\x18\x45\x72\xf5\xb6\xd3\x27\xea\xd1\xd1\x50\xb6\x30\x29\xfe\xae\xd9\x78\x30\xe0\x3f\x66\xec\xe9\x0b\xd1\x1c\xeb\xdf\x56\xbc\xb8\x23\x66\x97\x00\x00\x00\xff\xff\xd9\xd1\xc9\x0f\x58\x01\x00\x00")

func migrations20190410094830Add_assets_issuer_account_fieldSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190410094830Add_assets_issuer_account_fieldSql,
		"migrations/20190410094830-add_assets_issuer_account_field.sql",
	)
}

func migrations20190410094830Add_assets_issuer_account_fieldSql() (*asset, error) {
	bytes, err := migrations20190410094830Add_assets_issuer_account_fieldSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190410094830-add_assets_issuer_account_field.sql", size: 344, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2, 0xed, 0xce, 0xda, 0x59, 0x78, 0xcb, 0xa0, 0x4c, 0xd2, 0x4a, 0x45, 0x42, 0x10, 0x70, 0xc0, 0xbe, 0x2b, 0x11, 0x6c, 0x85, 0x92, 0x0, 0xdd, 0xd9, 0xb1, 0x74, 0x79, 0x30, 0x78, 0xfc, 0x4}}
	return a, nil
}

var _migrations20190411165735Data_seed_and_indicesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x4d\x6f\x1a\x3d\x10\xbe\xef\xaf\xf0\x2d\xa0\x37\x81\xdc\x5e\x29\x51\x0f\x28\x6c\x54\x24\x02\x15\x90\x36\x37\xcb\xd8\x03\x58\xf1\xc7\xd6\x33\x86\xf0\xef\xab\xdd\xb5\x13\x36\x24\x6a\x7a\xda\xf9\x78\x3c\xf3\xec\x7c\x15\x57\x57\xec\x3f\xab\xb7\x41\x10\xb0\xc7\xaa\x56\x97\x00\x8a\x4d\x10\x23\x04\xb6\xf1\x81\x5d\x38\x41\x7a\x0f\x17\x4c\x20\x02\x61\x31\x99\x2d\xcb\xc5\x8a\x4d\x66\xab\x39\xab\xe2\xda\x68\x39\xd0\x0d\x1a\x59\xaf\x60\x8c\x25\x23\x7f\x86\xe3\x65\xa3\x3b\x61\xa1\x95\x62\x30\xad\x40\xde\x1a\xfe\xaa\x6d\x40\x41\x10\xa4\xbd\xe3\x08\x61\x0f\xa1\x35\x8b\x48\xbb\x8e\x81\x82\x70\xb8\x81\xd0\x31\x1e\x60\xcd\x1b\x24\x38\x55\x79\xed\xa8\x35\x2b\xa8\x3c\x6a\xea\x40\x7d\xd8\x72\x3a\x68\x22\x08\x45\x9f\xfd\x1c\x4d\x1f\xcb\x65\xe2\x9c\x7f\xb2\x05\x5e\x2c\x09\x8c\x11\x81\x8d\x61\x0f\xc6\x57\x16\x1c\xb1\x7b\x1f\x9d\x6a\x58\x66\xd4\x8e\xa8\xba\x19\x0e\xb1\x05\x0f\x7c\xd8\x66\xcf\xbf\x7e\xeb\x48\x78\x33\x1c\x26\x76\x03\xe9\x6d\x0e\x5b\x47\x2d\xfa\xb7\xc5\x47\x75\x6f\x3b\x92\x7e\x41\x7a\x95\xca\x4c\xc7\x2a\x49\x2e\x5a\x2e\xa4\xf4\xd1\x11\x9e\x14\x35\xc0\xef\xa8\x03\xa8\x8e\x69\xef\xa5\x58\x9b\xf4\x50\xd8\xfa\x4d\x92\xeb\x2c\x5c\x7a\x47\xc1\x1b\x03\x8a\xaf\x8f\x5c\x79\x2b\xb4\x4b\x7e\x27\x77\x3e\xf0\x0c\xcb\x2c\x3a\xe6\x37\x4a\x1a\xf9\x5e\x18\x9d\x72\x37\x62\xdb\x7a\x08\xc1\xa7\x46\x19\x81\x74\x8a\x6a\x74\xb9\x03\xf9\x9c\x39\x2b\x8d\x95\x11\x47\xae\x40\x6a\x2b\x0c\xbe\x9f\x34\x05\x28\x83\xae\xea\xc0\x97\xa9\x3a\x4e\xe9\x5a\xc5\x57\x1a\x2d\xb3\x96\x66\x8e\xbb\xd1\x2f\xa0\xb8\x8b\x76\x9d\x87\xc6\x8a\x97\x8e\xae\x91\x47\x67\xb4\xd5\x94\xdf\x04\x50\x60\x9b\x54\x5c\x3b\xa4\x10\xe5\x49\x1e\xe9\x8d\x11\x04\x41\x18\x2e\x94\x0a\x80\x08\x9f\x7a\x38\xea\xad\x13\x14\xc3\x1b\x24\x3a\x0a\x3a\xab\x48\x82\xe2\x2b\xff\x7a\xe5\x78\xae\x50\x52\x53\xaf\xcf\xa6\xfb\x69\xfa\x90\x47\xad\x33\xe8\xd7\xed\xe7\x7e\x34\x5d\x96\x67\xe2\xf5\x20\xb9\x57\x8b\xc7\xf2\xe3\xc1\x3d\xf7\x38\x7f\xe8\xf5\xcf\xc4\xff\xdf\xed\xd5\x34\x5a\x70\xf8\xc9\x36\x9c\x52\xf8\x8c\xe6\x57\x37\xab\xb7\x2c\xa7\xe5\xdd\x8a\x69\xc5\xee\x17\xf3\x87\xf7\x07\xeb\xd7\xf7\x72\x51\x9e\x1c\x2c\xf6\xed\xed\xdc\x8d\x66\xe3\xd3\x8b\x51\xbb\xfe\xb2\xa6\xfd\x6e\x89\x9b\xad\xbd\x5b\x94\xa3\x55\xc9\x26\xb3\x71\xf9\x54\x1f\x30\x05\xc8\x0d\xa8\x2d\x04\x2e\x8d\x47\xe0\xa4\x2d\x70\xad\x5e\xd8\x7c\x96\xd9\xb5\x30\xd6\x3b\xc3\xb1\x71\xb9\xbc\xab\xa3\x76\xce\xf6\xd8\x1f\x5c\x31\x5e\xcc\x7f\x7c\x21\xcb\x6d\xf1\x27\x00\x00\xff\xff\xa1\x61\x7e\x4c\xf2\x05\x00\x00")

func migrations20190411165735Data_seed_and_indicesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190411165735Data_seed_and_indicesSql,
		"migrations/20190411165735-data_seed_and_indices.sql",
	)
}

func migrations20190411165735Data_seed_and_indicesSql() (*asset, error) {
	bytes, err := migrations20190411165735Data_seed_and_indicesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190411165735-data_seed_and_indices.sql", size: 1522, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0x54, 0x4a, 0x71, 0x6e, 0x9c, 0xc8, 0x5f, 0xd, 0xd6, 0xfc, 0x34, 0x65, 0x24, 0x53, 0xa1, 0x90, 0xf9, 0x33, 0x66, 0x76, 0x3a, 0x62, 0x69, 0xc6, 0x47, 0xea, 0x4f, 0xfd, 0x4c, 0xe, 0x96}}
	return a, nil
}

var _migrations20190425110313Add_orderbook_statsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\xcd\x6e\xea\x30\x10\x85\xf7\x7e\x8a\x59\x82\x2e\xdc\x17\x60\x95\x4b\x7c\x25\xd4\x34\xa1\x26\x59\xb0\xb2\x1c\x3c\x0a\xa3\xfc\x38\xf2\x38\x45\xed\xd3\x57\x44\x15\x15\x69\x0b\x55\xd7\x3e\xe7\x7c\x23\xf9\x13\xcb\x25\xfc\x69\xa9\xf2\x26\x20\x14\xbd\x58\x2b\x19\xe5\x12\xf2\xe8\x5f\x22\xc1\x79\x8b\xbe\x74\xae\xd6\x1c\x4c\x60\x98\x09\x00\x00\xb2\xc0\xe8\xc9\x34\x90\x66\x39\xa4\x45\x92\xc0\x56\x6d\x1e\x23\xb5\x87\x07\xb9\x5f\x88\x31\x54\x1a\x46\x6d\x98\x31\x68\xb2\x40\x5d\xc0\x0a\x3d\x28\xf9\x5f\x2a\x99\xae\xe5\x0e\xc6\x37\x86\x19\xd9\xf9\x65\x67\x31\x56\x0f\x6e\xe8\x02\xfa\x5f\xb4\xc7\x7a\x37\xb4\xba\x24\xcb\x50\x52\x45\x5d\x98\x8c\x97\x64\xf5\xb3\x6b\x86\x16\xc1\xba\xa1\x6c\x10\x7a\x8f\x07\x62\x72\xdd\x24\x79\xa4\xea\x88\x1c\xce\x5b\xb7\xa2\x17\xa6\xe1\xfa\x1b\xa6\xe1\xfa\x87\xcc\xc6\x9d\xce\x48\xc3\xf5\x5d\x24\xf7\x1e\xcd\xcd\xcb\x3e\x52\xba\x25\xab\x7b\x77\xbe\xec\xde\xec\xd0\x5b\x13\xd0\x6a\x13\x20\x50\x8b\x1c\x4c\xdb\x87\xd7\x4b\x4a\xcc\x57\x22\x4a\x72\xa9\xde\x0d\xc9\xd2\x64\x0f\xfd\x50\x36\x74\xf8\x3b\xb1\x65\x9c\x8b\xe2\x18\xd6\x59\xba\xcb\x55\xb4\x49\xf3\xa9\x50\x7a\xb4\xe4\xfa\xbf\x6b\x7c\x81\x22\xdd\x3c\x15\x12\x66\x57\x12\x2d\x3e\x89\x31\x5f\x89\x2b\x7d\x63\x77\xea\x44\xac\xb2\xed\xd7\xfa\xae\xc4\x5b\x00\x00\x00\xff\xff\x06\x01\x94\xcd\xed\x02\x00\x00")

func migrations20190425110313Add_orderbook_statsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190425110313Add_orderbook_statsSql,
		"migrations/20190425110313-add_orderbook_stats.sql",
	)
}

func migrations20190425110313Add_orderbook_statsSql() (*asset, error) {
	bytes, err := migrations20190425110313Add_orderbook_statsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190425110313-add_orderbook_stats.sql", size: 749, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x87, 0xb0, 0x88, 0x90, 0x9, 0x84, 0x2b, 0xf7, 0x33, 0xa4, 0x8c, 0x91, 0xc8, 0x6a, 0x90, 0x7b, 0x6b, 0x28, 0x70, 0x69, 0xf7, 0x1, 0x8c, 0x89, 0xa1, 0xe3, 0x11, 0xc0, 0x5e, 0x8f, 0x47, 0x0}}
	return a, nil
}

var _migrations20190426092321Add_aggregated_orderbook_viewSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\xcf\x6e\xb2\x40\x14\xc5\xf7\x3c\xc5\xdd\xa9\xf9\xd0\x7c\x7b\xd3\x05\xc5\xb1\xa1\xb1\x62\x40\xfb\x67\x35\xb9\x30\x13\x9c\x20\x8c\xe1\x0e\xb5\x8f\xdf\x0c\x44\x81\x88\x65\x45\x0e\xf7\x77\x39\x99\x73\xc6\x99\xcf\xe1\x5f\xa1\xb2\x0a\x8d\x84\xc3\xd9\xf1\x23\xe6\xed\x19\x84\x11\x44\x6c\xb7\xf1\x7c\x06\xef\x01\xfb\x00\xcc\xb2\x4a\x66\x68\xa4\xe0\xba\x12\xb2\x4a\xb4\xce\xc1\x8b\x1d\x00\x80\x98\x6d\x98\xbf\x6f\x5e\xed\x93\xea\x32\x45\x33\x4d\x3c\x22\x69\x16\xa9\x16\xd2\x85\x09\x9f\xb8\x90\x76\xca\x0c\x90\xc0\x54\x28\x24\x3f\xa3\xaa\x78\x89\x85\x74\x6f\x1b\x7a\xa8\x9d\x4b\x90\x24\x47\x2b\xf1\x66\x5b\xf7\xa7\xe1\x5c\xaa\xeb\xd2\xc8\x6a\x74\xd4\x0f\xbd\x0d\x8b\x7d\x36\xa5\xba\x98\x6a\x5a\x94\x75\xc1\x13\x25\x68\xe6\xc2\xff\x19\x78\x31\x5c\x85\xc7\x48\xa2\x04\xff\xd6\xa7\xba\x90\x16\x5a\xb4\x58\x27\x8e\x80\x05\xfe\x58\xf0\xa8\xb2\xa3\x24\x63\xd7\xf7\xc8\x9e\xfa\xb7\x4d\xa4\x7c\x68\xd3\x0a\x8f\x11\xa4\xfc\xde\x66\x27\x8e\xd9\x54\xa5\x05\x4f\xfa\x62\xfd\x20\xe5\x3d\xb0\x13\x1b\x6e\x1d\x85\x6f\x70\x2b\x00\x27\x83\x86\xec\x98\xa6\xe6\xf3\x6b\x18\x6c\xa1\x39\xfe\x46\x6d\x73\x84\x70\x0b\xf6\xf8\xba\x14\x95\x80\xa7\x6b\xc8\x4a\x8c\x91\x6d\xb2\xa0\x4b\x4b\x0e\x73\x6d\xe0\x74\x00\xbf\x44\xe1\x61\x07\xcf\x5f\x77\x8d\xba\xab\xce\x48\x47\x96\xce\xe0\x0a\xac\xf4\xa5\x74\x56\x51\xb8\x6b\x7b\x1f\xac\x81\x7d\x06\xf1\x3e\x1e\xbd\x01\x4b\xe7\x37\x00\x00\xff\xff\x72\xc3\x7e\xff\x3f\x03\x00\x00")

func migrations20190426092321Add_aggregated_orderbook_viewSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20190426092321Add_aggregated_orderbook_viewSql,
		"migrations/20190426092321-add_aggregated_orderbook_view.sql",
	)
}

func migrations20190426092321Add_aggregated_orderbook_viewSql() (*asset, error) {
	bytes, err := migrations20190426092321Add_aggregated_orderbook_viewSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20190426092321-add_aggregated_orderbook_view.sql", size: 831, mode: os.FileMode(0644), modTime: time.Unix(1559692126, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xca, 0xb7, 0xc5, 0x31, 0xb1, 0x11, 0xad, 0xf1, 0x3e, 0x39, 0x2, 0x77, 0x17, 0xb8, 0xb7, 0x6b, 0xb2, 0x37, 0x56, 0x71, 0x49, 0xc9, 0x56, 0x43, 0xc5, 0x18, 0x54, 0xae, 0xd1, 0xbb, 0xa4, 0x5e}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/20190404184050-initial.sql": migrations20190404184050InitialSql,

	"migrations/20190405112544-increase_asset_code_size.sql": migrations20190405112544Increase_asset_code_sizeSql,

	"migrations/20190408115724-add_new_asset_fields.sql": migrations20190408115724Add_new_asset_fieldsSql,

	"migrations/20190408155841-add_issuers_table.sql": migrations20190408155841Add_issuers_tableSql,

	"migrations/20190409152216-add_trades_table.sql": migrations20190409152216Add_trades_tableSql,

	"migrations/20190409172610-rename_assets_desc_description.sql": migrations20190409172610Rename_assets_desc_descriptionSql,

	"migrations/20190410094830-add_assets_issuer_account_field.sql": migrations20190410094830Add_assets_issuer_account_fieldSql,

	"migrations/20190411165735-data_seed_and_indices.sql": migrations20190411165735Data_seed_and_indicesSql,

	"migrations/20190425110313-add_orderbook_stats.sql": migrations20190425110313Add_orderbook_statsSql,

	"migrations/20190426092321-add_aggregated_orderbook_view.sql": migrations20190426092321Add_aggregated_orderbook_viewSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"20190404184050-initial.sql":                         &bintree{migrations20190404184050InitialSql, map[string]*bintree{}},
		"20190405112544-increase_asset_code_size.sql":        &bintree{migrations20190405112544Increase_asset_code_sizeSql, map[string]*bintree{}},
		"20190408115724-add_new_asset_fields.sql":            &bintree{migrations20190408115724Add_new_asset_fieldsSql, map[string]*bintree{}},
		"20190408155841-add_issuers_table.sql":               &bintree{migrations20190408155841Add_issuers_tableSql, map[string]*bintree{}},
		"20190409152216-add_trades_table.sql":                &bintree{migrations20190409152216Add_trades_tableSql, map[string]*bintree{}},
		"20190409172610-rename_assets_desc_description.sql":  &bintree{migrations20190409172610Rename_assets_desc_descriptionSql, map[string]*bintree{}},
		"20190410094830-add_assets_issuer_account_field.sql": &bintree{migrations20190410094830Add_assets_issuer_account_fieldSql, map[string]*bintree{}},
		"20190411165735-data_seed_and_indices.sql":           &bintree{migrations20190411165735Data_seed_and_indicesSql, map[string]*bintree{}},
		"20190425110313-add_orderbook_stats.sql":             &bintree{migrations20190425110313Add_orderbook_statsSql, map[string]*bintree{}},
		"20190426092321-add_aggregated_orderbook_view.sql":   &bintree{migrations20190426092321Add_aggregated_orderbook_viewSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
