// Code generated by go-bindata. DO NOT EDIT.
// sources:
// migrations/10_add_trades_price.sql (1.22kB)
// migrations/11_add_trades_account_index.sql (273B)
// migrations/12_asset_stats_amount_string.sql (197B)
// migrations/13_trade_offer_ids.sql (484B)
// migrations/14_fix_asset_toml_field.sql (156B)
// migrations/15_ledger_failed_txs.sql (333B)
// migrations/16_ingest_failed_transactions.sql (509B)
// migrations/17_transaction_fee_paid.sql (287B)
// migrations/18_account_for_signers.sql (481B)
// migrations/19_offers.sql (1.064kB)
// migrations/1_initial_schema.sql (9.977kB)
// migrations/20_account_for_signer_index.sql (140B)
// migrations/21_trades_remove_zero_amount_constraints.sql (765B)
// migrations/22_trust_lines.sql (955B)
// migrations/23_exp_asset_stats.sql (883B)
// migrations/24_accounts.sql (1.402kB)
// migrations/25_expingest_rename_columns.sql (641B)
// migrations/26_exp_history_ledgers.sql (209B)
// migrations/27_exp_history_transactions.sql (630B)
// migrations/28_exp_history_operations.sql (439B)
// migrations/29_exp_history_assets.sql (206B)
// migrations/2_index_participants_by_toid.sql (277B)
// migrations/30_exp_history_trades.sql (2.297kB)
// migrations/31_exp_history_effects.sql (209B)
// migrations/32_drop_exp_history_tables.sql (3.826kB)
// migrations/33_remove_unused.sql (860B)
// migrations/34_fee_bump_transactions.sql (863B)
// migrations/35_drop_participant_id.sql (306B)
// migrations/36_deleted_offers.sql (956B)
// migrations/37_add_tx_set_operation_count_to_ledgers.sql (176B)
// migrations/38_add_constraints.sql (7.33kB)
// migrations/39_claimable_balances.sql (750B)
// migrations/39_history_trades_indices.sql (183B)
// migrations/3_use_sequence_in_history_accounts.sql (447B)
// migrations/40_fix_inner_tx_max_fee_constraint.sql (392B)
// migrations/41_add_sponsor_to_state_tables.sql (800B)
// migrations/42_add_num_sponsored_and_num_sponsoring_to_accounts.sql (276B)
// migrations/43_add_claimable_balances_flags.sql (145B)
// migrations/44_asset_stat_accounts_and_balances.sql (439B)
// migrations/45_add_claimable_balances_history.sql (2.163kB)
// migrations/46_add_muxed_accounts.sql (465B)
// migrations/47_precompute_trade_aggregations.sql (1.687kB)
// migrations/48_rebuild_trade_aggregations.sql (1.243kB)
// migrations/49_add_brin_index_trade_aggregations.sql (206B)
// migrations/4_add_protocol_version.sql (188B)
// migrations/50_liquidity_pools.sql (3.876kB)
// migrations/51_remove_ht_unused_indexes.sql (321B)
// migrations/52_add_trade_type_index.sql (424B)
// migrations/53_add_trades_rounding_slippage.sql (274B)
// migrations/54_tx_preconditions_and_account_fields.sql (1.355kB)
// migrations/55_filter_rules.sql (893B)
// migrations/56_trade_aggregation_autovac.sql (282B)
// migrations/5_create_trades_table.sql (1.1kB)
// migrations/6_create_assets_table.sql (366B)
// migrations/7_modify_trades_table.sql (2.303kB)
// migrations/8_add_aggregators.sql (907B)
// migrations/8_create_asset_stats_table.sql (441B)
// migrations/9_add_header_xdr.sql (161B)

package schema

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations10_add_trades_priceSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x53\x51\x8b\xda\x4c\x14\x7d\x9f\x5f\x71\x1e\xf2\xa0\x7c\xfa\x15\x7d\xb5\x5b\x18\x93\xdb\x34\x10\xa3\x9d\x99\xd0\x16\x11\x99\x35\x63\x76\xc0\x4c\x64\x92\xc5\xdd\x7f\x5f\xb2\xba\xae\x2d\xec\x62\x5b\x68\xdf\x4e\x6e\xce\x5c\xce\xb9\x87\x33\x1c\xe2\xbf\xca\x96\x5e\xb7\x06\xf9\x9e\xb1\xe1\x10\xbc\x28\xe0\x75\x6b\x6b\xa7\x77\xd8\x7b\xbb\x31\x68\x6b\xb4\x5e\x17\xa6\x41\xab\x6f\x77\x86\xf1\x54\x91\x80\xe2\xd3\x94\x70\x67\x9b\xb6\xf6\x8f\xeb\x13\x81\x47\xd1\xf1\xd1\xda\x61\x9a\xc4\x49\xa6\x26\xd7\xd1\x8b\x33\xbd\x13\xa1\xcb\xd2\x9b\xb2\x53\xb5\xbd\x77\x9b\x4e\x0c\xb6\xb5\xc7\xd6\xba\xc2\xba\x12\x95\x75\xb6\x3a\xcb\x3b\xdc\x19\x77\x82\xb6\x81\x37\x7b\x6f\x1a\xe3\x5a\x53\x40\x37\xd0\x0e\xda\x7b\xfd\x88\x7a\x8b\xf6\x50\xc3\xec\x4c\x65\x5c\xdb\x60\xe9\x06\xc5\x8a\x85\x82\xb8\x22\xcc\x05\x04\x2d\x52\x1e\x12\x3e\xe6\x59\xa8\x92\x79\x86\xfd\xfd\xed\xce\x6e\xfe\xaf\xac\x5b\x1f\x25\xea\xb2\x44\x0f\x59\x3e\x23\x91\x84\xcb\xd5\xe0\x05\xf6\x19\x20\x48\xe5\x22\x93\x2f\x43\xa4\x3c\x8b\x73\x1e\x13\xe4\xe7\x14\xc9\x6c\x96\x1f\x4f\x20\x95\x48\x42\x05\x2e\x11\x04\x90\x94\x52\xa8\xd0\x63\x40\xc8\x25\xe1\xcb\x27\xca\x10\x8c\x96\xa3\xd5\xbb\x60\xb4\x1c\xaf\xde\x07\xe3\x27\x3c\x5e\x8e\x57\x50\xc7\x9f\xa0\x54\x12\x82\x31\x28\x8b\xfa\x08\x82\x09\x7b\xb6\xc1\xe3\x58\x50\xdc\xa1\x93\xf8\x59\x92\xad\x17\x22\x09\x09\x3d\x26\x3b\x67\xb8\xc1\x22\x9f\xa6\x49\xf8\xa3\xaf\x01\x9b\x72\x49\xea\xdb\x82\x70\x73\xe1\x90\xc9\x9f\x47\xac\x7f\x5d\x40\xfa\xe1\xef\x05\xa4\x1f\xfe\x61\x40\x1f\xfe\x30\x20\xfe\xf5\xd5\x80\x2e\x7d\xfd\x72\x40\xe7\x5a\x47\xf5\xc1\xbd\x55\xc1\x48\xcc\x17\xcf\x95\x7d\xb3\xab\x17\xc4\x62\xc2\xd8\xd3\xe7\xef\x94\x05\xfd\xee\x92\x21\x8f\x68\xf2\xca\x92\x2b\x02\xbd\x58\xf2\x3d\x00\x00\xff\xff\x19\x48\x96\x1e\xc4\x04\x00\x00")

func migrations10_add_trades_priceSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations10_add_trades_priceSql,
		"migrations/10_add_trades_price.sql",
	)
}

func migrations10_add_trades_priceSql() (*asset, error) {
	bytes, err := migrations10_add_trades_priceSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/10_add_trades_price.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x85, 0x1e, 0x7f, 0x86, 0xc2, 0x2c, 0xc9, 0x91, 0xe2, 0x3f, 0x1a, 0xb2, 0x15, 0xea, 0x6c, 0x5, 0xfa, 0x1f, 0x99, 0xd2, 0xbb, 0x1, 0x5e, 0x75, 0x91, 0x8b, 0xb, 0x46, 0xa, 0x6, 0xbc, 0x61}}
	return a, nil
}

var _migrations11_add_trades_account_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\xc8\x28\x29\x4a\x89\x4f\xaa\x8c\x4f\x4a\x2c\x4e\x8d\x4f\x4c\x4e\xce\x2f\xcd\x2b\x51\xf0\xf7\x53\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x2f\x29\x4a\x4c\x49\x2d\x56\x08\x0d\xf6\xf4\x73\x57\x70\x0a\x09\x72\x75\xd5\x40\x56\x1a\x9f\x99\xa2\x69\x8d\xdd\x44\xb0\x7c\x6a\x11\x91\x86\xa2\xa9\x86\x98\xcb\x85\xec\x74\x97\xfc\xf2\x3c\x2e\x2e\x97\x20\xff\x00\x3c\x4e\xb7\xc6\xa6\x00\xcd\x6c\x6b\x40\x00\x00\x00\xff\xff\x57\x79\x94\x68\x11\x01\x00\x00")

func migrations11_add_trades_account_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations11_add_trades_account_indexSql,
		"migrations/11_add_trades_account_index.sql",
	)
}

func migrations11_add_trades_account_indexSql() (*asset, error) {
	bytes, err := migrations11_add_trades_account_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/11_add_trades_account_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xa4, 0x60, 0x40, 0x6b, 0xa6, 0x5e, 0xcc, 0x67, 0xb3, 0x85, 0x82, 0xce, 0x39, 0xc6, 0xbb, 0x2c, 0xa7, 0x2e, 0xb6, 0x9a, 0xd, 0xba, 0x91, 0x28, 0x80, 0x77, 0x46, 0x8c, 0x67, 0x55, 0x9f}}
	return a, nil
}

var _migrations12_asset_stats_amount_stringSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x2e\x4e\x2d\x89\x2f\x2e\x49\x2c\x29\x86\x8a\x3b\xfb\xfb\x84\xfa\xfa\x29\x24\xe6\xe6\x97\xe6\x95\x28\x04\xbb\x86\x28\xb8\x38\x86\x38\x2a\x84\x44\x06\xb8\x2a\x24\x67\x24\x16\x25\x26\x97\xa4\x16\x29\x94\x25\x16\x55\x66\xe6\xa5\x5b\x73\x71\x21\x1b\xee\x92\x5f\x9e\x47\x81\xf1\x49\x99\xe9\x99\x79\x25\x0a\xa1\xc1\x9e\x7e\xee\x50\x15\x56\x56\x10\x41\x6b\x2e\x40\x00\x00\x00\xff\xff\x00\x82\x0f\xf1\xc5\x00\x00\x00")

func migrations12_asset_stats_amount_stringSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations12_asset_stats_amount_stringSql,
		"migrations/12_asset_stats_amount_string.sql",
	)
}

func migrations12_asset_stats_amount_stringSql() (*asset, error) {
	bytes, err := migrations12_asset_stats_amount_stringSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/12_asset_stats_amount_string.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3a, 0xd1, 0x4c, 0x37, 0xe7, 0xfd, 0xdb, 0x3a, 0xf2, 0x37, 0x9b, 0x8d, 0x77, 0x99, 0x61, 0x15, 0x10, 0x51, 0xe5, 0xe5, 0x7f, 0xec, 0x7e, 0x7, 0xe5, 0x18, 0x8a, 0xf2, 0xb4, 0x66, 0x17, 0x60}}
	return a, nil
}

var _migrations13_trade_offer_idsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x8a\x83\x30\x14\x45\xf7\xef\x2b\xde\x72\x64\xf0\x0b\xb2\x8a\x26\x48\xc0\x89\x83\x13\x61\x76\x41\x6b\xac\x2e\x6a\x4a\x4c\x29\xfe\x7d\xa1\x9b\x1a\x6b\x75\x1d\xce\x79\x37\x27\x8e\xf1\xfb\x32\x9c\x5d\xed\x0d\x56\x57\x00\x9a\x2b\x5e\xa2\xa2\x49\xce\xb1\x1f\x26\x6f\xdd\xac\xbd\xab\x5b\x33\x21\x65\x0c\x9b\x7a\x32\xda\x76\x9d\x71\x7a\x68\x31\x11\x99\x90\x8a\x1c\x41\x27\x7b\x1b\xbd\x71\xef\x1c\xa4\x25\xa7\x8a\xa3\x90\x8c\xff\x63\xef\x5d\xab\x9b\x59\xbf\x6e\x60\x21\xd7\xbe\xea\x4f\xc8\x0c\x1b\xef\x8c\xf9\x0a\xc6\x44\x64\xdb\x16\x1c\x3f\x10\xae\x87\x46\x04\x60\x19\x88\xd9\xfb\x08\xc0\xca\xe2\xf7\xe3\x64\xb2\xf5\x1c\x78\xc9\x6e\xe4\x27\x9d\x16\x79\xf5\x23\xc3\xd8\xbb\x95\x97\xd4\xfa\x13\x04\x1e\x01\x00\x00\xff\xff\x6c\x7b\xed\xfa\xe4\x01\x00\x00")

func migrations13_trade_offer_idsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations13_trade_offer_idsSql,
		"migrations/13_trade_offer_ids.sql",
	)
}

func migrations13_trade_offer_idsSql() (*asset, error) {
	bytes, err := migrations13_trade_offer_idsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/13_trade_offer_ids.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x77, 0x71, 0x79, 0x45, 0x9b, 0x9e, 0x80, 0x36, 0x80, 0x5a, 0xc2, 0x1f, 0xb4, 0xba, 0xdd, 0x85, 0x65, 0xd0, 0x5c, 0x47, 0x47, 0xf, 0x4d, 0xc7, 0x9b, 0x92, 0x36, 0xd7, 0xe6, 0x57, 0x46, 0xa}}
	return a, nil
}

var _migrations14_fix_asset_toml_fieldSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\x2c\x2e\x4e\x2d\x89\x2f\x2e\x49\x2c\x29\x56\x80\x88\x3b\xfb\xfb\x84\xfa\xfa\x29\x94\xe4\xe7\xe6\x28\x84\x44\x06\xb8\x2a\x94\x25\x16\x25\x67\x24\x16\x69\x18\x99\x9a\x6a\x5a\x73\x71\x21\x9b\xe6\x92\x5f\x9e\x47\xb6\x79\x66\x26\x9a\xd6\x5c\x80\x00\x00\x00\xff\xff\xac\xf9\x96\x09\x9c\x00\x00\x00")

func migrations14_fix_asset_toml_fieldSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations14_fix_asset_toml_fieldSql,
		"migrations/14_fix_asset_toml_field.sql",
	)
}

func migrations14_fix_asset_toml_fieldSql() (*asset, error) {
	bytes, err := migrations14_fix_asset_toml_fieldSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/14_fix_asset_toml_field.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdf, 0x28, 0x86, 0x8, 0xa5, 0xec, 0x44, 0x7b, 0xf7, 0x88, 0x3b, 0x6d, 0xf6, 0x5c, 0x6a, 0x17, 0x92, 0xbc, 0xd2, 0x88, 0x94, 0xd4, 0x42, 0xb1, 0xc2, 0xac, 0x97, 0xb6, 0xd0, 0xeb, 0xd8, 0xa7}}
	return a, nil
}

var _migrations15_ledger_failed_txsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x41\xae\x82\x30\x10\x00\xd0\x7d\x4f\x31\xfb\x1f\x4e\xc0\xaa\xdf\xe2\x6a\x04\x43\xe8\x9a\x34\x65\xc0\x26\xd8\x9a\xce\x34\xc6\xdb\xbb\x65\x63\xf5\x02\x2f\xaf\x69\xe0\xef\x1e\xb6\xec\x84\xc0\x3e\x94\xd2\x38\x75\x23\x4c\xfa\x1f\x3b\xb8\x05\x96\x94\x5f\xf3\x4e\xcb\x46\x99\x41\x1b\x03\x5c\xbc\x27\xe6\xb5\xec\xb3\x64\x17\xd9\x79\x09\x29\xce\x3e\x95\x28\x10\xa2\xd0\x46\x19\x4c\x77\xd6\x16\x27\xe8\x2d\x62\xfb\x95\x5c\x5d\xd8\x69\xf9\x99\x53\xc7\xb2\x49\xcf\x58\x4f\x9b\x71\xb8\xc2\x69\x40\x7b\xe9\xab\xf9\xfa\xf3\xa8\x7c\xfa\xb6\xea\x1d\x00\x00\xff\xff\x1f\x77\x76\xa0\x4d\x01\x00\x00")

func migrations15_ledger_failed_txsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations15_ledger_failed_txsSql,
		"migrations/15_ledger_failed_txs.sql",
	)
}

func migrations15_ledger_failed_txsSql() (*asset, error) {
	bytes, err := migrations15_ledger_failed_txsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/15_ledger_failed_txs.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xeb, 0x7, 0xd7, 0xc9, 0x5d, 0xbe, 0xd2, 0x21, 0xc1, 0xb0, 0x20, 0xc8, 0x5f, 0x3a, 0xe9, 0x99, 0xba, 0x5d, 0x83, 0xb4, 0xe8, 0x9f, 0x2d, 0xc3, 0x9a, 0xe1, 0x46, 0xf2, 0xd1, 0x1b, 0x48, 0x7a}}
	return a, nil
}

var _migrations16_ingest_failed_transactionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcd\x6a\xeb\x30\x14\x84\xf7\x7a\x8a\xb9\xeb\x8b\x5d\xe8\x36\x64\xe1\xc6\xea\x0f\x38\x49\x71\x6c\xba\x0c\x8a\x75\xd4\x88\x5a\x3a\x41\x72\x5a\xfa\xf6\x05\xa7\x24\x36\x08\xba\x94\x98\xf9\xf4\x8d\xb2\x0c\xff\x9d\x7d\x0f\x6a\x20\xb4\x27\x21\xb2\x0c\xab\x23\x75\x1f\xd0\x87\xfb\xbb\xa3\x8d\x03\x87\xef\xbc\x09\xca\x47\xd5\x0d\x96\x7d\xbe\x3b\x77\x1d\xc5\x68\xce\x3d\x8c\xa5\x5e\xa3\x63\xe7\xc8\x0f\x30\x1c\xe0\x38\x10\xac\x37\x1c\x9c\x1a\xd3\xa2\xa8\x1a\x59\xa3\x29\x1e\x2a\x89\x5f\xdc\x7e\xb8\xe1\x22\x8a\xb2\x44\xbc\x31\x0f\xcc\x3d\x29\xbf\x18\x4d\xae\x66\x25\x7f\xf9\xf1\xa6\x26\xc7\x9f\x04\xa3\x6c\x4f\x1a\x33\x90\xf2\x1a\x7c\xa2\xa0\x2e\x47\x13\xd8\xa5\x72\xff\x44\x29\x2b\xd9\x48\x3c\xd6\xdb\xf5\x55\x69\x52\x6c\x77\x2f\x9b\xa7\xa4\xab\x00\xde\x9e\x65\x9d\x1e\x92\x5b\x8d\x65\x82\x97\x4f\x42\x7b\xab\x51\x6c\x66\x7b\x97\x30\xaa\x8f\xb4\x48\x5a\xcd\xf6\x5d\x9e\x4e\x55\xff\xfc\xe3\xb2\xde\xbe\x62\xb5\xad\xda\xf5\x66\x02\x58\x88\x9f\x00\x00\x00\xff\xff\xe4\xf5\x4c\xc4\xfd\x01\x00\x00")

func migrations16_ingest_failed_transactionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations16_ingest_failed_transactionsSql,
		"migrations/16_ingest_failed_transactions.sql",
	)
}

func migrations16_ingest_failed_transactionsSql() (*asset, error) {
	bytes, err := migrations16_ingest_failed_transactionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/16_ingest_failed_transactions.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf9, 0x24, 0xd, 0x8a, 0x56, 0x1d, 0x41, 0x6a, 0x4, 0x7b, 0xe1, 0x9f, 0xfb, 0x78, 0x2, 0xec, 0xe2, 0x98, 0xac, 0xef, 0xc7, 0xc0, 0x96, 0xd1, 0xbf, 0x8f, 0xc6, 0x16, 0xa7, 0x3c, 0x4a, 0x33}}
	return a, nil
}

var _migrations17_transaction_fee_paidSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x0e\xc2\x20\x14\x80\xe1\x9d\x53\xbc\xdd\xf4\x04\x9d\x50\xd8\x68\x31\x84\xce\xe4\xa5\x7d\xa5\x0c\x85\x06\x48\xd4\xdb\x1b\x4d\x4d\xba\xa9\x07\xf8\xff\x7c\x4d\x03\xa7\x35\xf8\x8c\x95\x60\xd8\x18\xe3\xca\x4a\x03\x96\x9f\x95\x84\x25\x94\x9a\xf2\xc3\xd5\x8c\xb1\xe0\x58\x43\x8a\x05\xb8\x10\x30\x13\xb9\x71\xc1\xec\x69\x82\x10\x2b\x79\xca\xed\xf7\xd2\xc8\x9e\x77\x12\x2e\x5a\x0d\x5d\xff\x7e\x6c\x18\x26\xb0\x1a\x56\xbc\xbb\x99\xa8\x65\xec\xc8\x11\xe9\x16\x7f\x00\x09\xa3\xaf\xc7\xe9\x0e\xfb\x1b\xb4\x23\x5e\x9e\x8f\xad\x65\xcf\x00\x00\x00\xff\xff\x1a\x59\x3c\x98\x1f\x01\x00\x00")

func migrations17_transaction_fee_paidSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations17_transaction_fee_paidSql,
		"migrations/17_transaction_fee_paid.sql",
	)
}

func migrations17_transaction_fee_paidSql() (*asset, error) {
	bytes, err := migrations17_transaction_fee_paidSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/17_transaction_fee_paid.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x64, 0x93, 0x1c, 0x21, 0xf6, 0x63, 0xac, 0x5c, 0x8, 0x6b, 0xe9, 0x4f, 0xcb, 0xcb, 0xae, 0xdf, 0xa, 0x28, 0xa8, 0x6a, 0xfd, 0x61, 0x29, 0xc2, 0x60, 0xaf, 0xb7, 0x74, 0xfd, 0x0, 0x85, 0xb7}}
	return a, nil
}

var _migrations18_account_for_signersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\xbf\x6e\xf2\x40\x10\xc4\x7b\x3f\xc5\x94\xb6\x3e\xdc\x7c\x0a\x69\xa8\x48\x70\x11\x85\x00\xb2\xa0\xa0\x42\x97\xcb\xc6\x5e\xd9\xbe\x23\x77\x6b\xac\x7b\xfb\x08\x5b\x46\x80\x44\xda\xd9\xdf\xfe\x99\x9d\x34\xc5\xbf\x86\x0b\xa7\x84\xb0\x3b\x46\xd1\x6b\x9e\xcd\xb7\x19\xb6\xf3\x97\x65\x06\xa5\xb5\x6d\x8d\xf8\x83\xe7\xc2\x90\xf3\x88\x23\x00\xa3\x0c\x5d\x2a\xa7\xb4\x90\xc3\x49\xb9\xc0\xa6\x88\x9f\x9f\x92\x49\x8f\x0c\x0d\x7f\x11\x1d\x71\x51\x0a\xd8\x08\x15\xe4\xb0\x5a\x6f\xb1\xda\x2d\x97\x43\x31\x4d\xd1\x11\x3a\xae\x6b\xfc\xb4\xe4\x02\x3e\xc3\x38\xd2\x5b\x48\xa9\x04\xec\xd1\x95\x17\x95\x3d\xa4\x24\x7c\xb3\xf3\x02\x16\x6a\xc0\xa6\x57\xb4\x6d\x8e\xd6\xb3\x10\x2a\x0a\xfd\xec\x4d\xfe\xf6\x31\xcf\xf7\x78\xcf\xf6\x88\x87\xf6\xc9\x68\x29\x89\x92\xd9\xdd\x0f\x2a\x0a\x87\x93\xaa\x5b\x3a\x78\xb1\x8e\xfa\x17\x54\x14\xce\x86\xce\xee\xe2\xff\xd3\x69\x72\x73\x7d\x0f\x3f\x2e\xdf\xac\xaf\x28\x0c\x2b\xaf\x63\x58\xd8\xce\x44\x8b\x7c\xbd\x79\x94\x82\x56\x5e\xab\x2f\x9a\x5d\x43\xf7\x67\x5e\x98\xdf\x00\x00\x00\xff\xff\xbf\x12\xc9\xd9\xe1\x01\x00\x00")

func migrations18_account_for_signersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations18_account_for_signersSql,
		"migrations/18_account_for_signers.sql",
	)
}

func migrations18_account_for_signersSql() (*asset, error) {
	bytes, err := migrations18_account_for_signersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/18_account_for_signers.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x37, 0xdc, 0xe4, 0xb4, 0xd5, 0xcc, 0x53, 0xd9, 0x42, 0x8c, 0x12, 0x37, 0xcf, 0x13, 0x2c, 0x47, 0xe, 0xc7, 0xba, 0xe5, 0xc2, 0x17, 0x73, 0xe2, 0xc, 0xd2, 0x4a, 0xb3, 0x62, 0x75, 0x54, 0x7f}}
	return a, nil
}

var _migrations19_offersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\x41\x6f\xda\x4c\x10\x86\xef\xfe\x15\xef\x0d\xd0\x07\xd1\x77\x69\x2f\x39\x91\xd8\x4d\xac\x52\x3b\x32\xa6\x6d\x4e\xd6\x62\x8f\xcd\x88\x65\x17\xed\xae\x43\xdc\x5f\x5f\xad\x0d\xa8\x89\x80\xf3\xfb\xce\x73\x78\x66\x66\x36\xc3\x7f\x3b\x6e\x8c\x70\x84\xd5\x3e\x08\x1e\xb3\x68\x9e\x47\xc8\xe7\x0f\x8b\x08\xba\xae\xc9\x58\x8c\x03\x00\xb0\x24\x25\x19\xae\x50\x6e\x84\x11\xa5\x23\x83\x37\x61\x3a\x56\xcd\xf8\xcb\xd7\x09\x92\x34\x47\xb2\x5a\x2c\xa6\x7d\xb9\x9f\xe4\x0a\x6b\x6e\x58\x39\xbc\x64\xf1\x8f\x79\xf6\x8a\xef\xd1\xeb\xf4\x0c\x63\xd5\x08\x6b\xc9\xc1\xd1\xbb\xfb\x34\xbf\x6e\xbb\x5b\xb1\xd8\xe9\x56\xb9\x13\xfd\x63\xb6\x37\x5c\x92\x02\x2b\x47\x0d\x99\x4b\x61\x75\x2b\x44\xa5\xdb\xb5\x24\xec\x0d\x95\x6c\x59\xab\x4f\xa5\x5a\x8a\xc6\x5e\x01\x48\x61\x5d\xb1\xd3\x15\xd7\x4c\x55\x21\xa9\xf2\x95\x38\xc9\xcf\xb5\x60\x72\x7f\x56\x1c\x27\x61\xf4\xfb\xa8\xb8\x58\x77\xc5\xe0\x17\x69\x72\xd2\xbe\x5a\xc6\xc9\x13\x1e\xf2\x2c\x8a\xc6\x27\xf9\x93\xfb\x5b\xe3\xac\x9a\x62\x70\x76\x9d\x72\xd2\x7a\x9d\x34\xb8\xbf\x09\xfa\x67\x3d\xd7\x39\x17\x6d\x5c\xe6\x5d\xaa\x7a\x55\xb3\x19\x42\xb6\xce\xf0\xba\x75\xfd\xda\x1a\xb2\xce\xef\xc4\x90\x64\xb2\xd0\x0a\x02\x96\x55\x23\x09\x6f\x42\xb6\x04\xa9\xcb\x2d\x55\xa8\xb5\x41\xbb\xaf\x84\x63\xd5\x78\x0a\xfb\x62\xf8\x70\x87\x5f\x1b\x52\x78\xd6\x86\xff\x68\x05\xeb\x84\x71\x16\xa5\x24\x61\xe0\x36\x64\x08\x6c\xa1\xf4\x91\x65\x35\x0e\x84\xd2\x90\x7f\x0e\x76\x9e\xe3\x3b\x77\x88\xeb\xa1\x3d\xb2\x10\x28\xb5\xaa\x25\x97\x0e\xec\xb0\x23\xa1\xac\xcf\x8e\x04\xb6\x10\xd2\x90\xa8\xba\x23\xde\x6a\x4f\x39\xf8\x2b\x83\xd2\x6e\xc3\xaa\xb9\x0b\xe2\x64\x19\x65\xb9\x3f\x94\x14\x5b\xea\x8a\x7e\xb6\xb0\x4e\x1b\xc2\x78\x4b\xdd\x74\xa0\x4d\xfa\x1b\xfb\x39\x5f\xac\xa2\x25\xc6\x23\x7a\xdf\x17\x83\x90\xc1\xf4\x60\x6d\x34\xc5\xe8\xff\xd1\x50\x4d\x13\x3c\xa6\xc9\xb7\x45\xfc\x98\xf7\x9c\x09\xc2\xd4\x9f\xe2\x73\x9c\x3c\x0d\x72\xcf\xaf\x1f\xea\x83\x0a\x82\x30\x4b\x5f\x3e\xbe\x7e\x29\x6c\x29\x2a\xba\x0f\xfe\x06\x00\x00\xff\xff\x14\xd1\xb7\xec\x28\x04\x00\x00")

func migrations19_offersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations19_offersSql,
		"migrations/19_offers.sql",
	)
}

func migrations19_offersSql() (*asset, error) {
	bytes, err := migrations19_offersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/19_offers.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0xff, 0xef, 0xfe, 0xb0, 0x5b, 0xa3, 0x92, 0xac, 0x9d, 0x98, 0x6c, 0xd4, 0x90, 0x9c, 0xe9, 0xae, 0x89, 0xfc, 0x54, 0x2b, 0xe3, 0x33, 0x1f, 0x0, 0xd6, 0x24, 0x9a, 0x1, 0xe1, 0xa6, 0x39}}
	return a, nil
}

var _migrations1_initial_schemaSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x5a\x51\x6f\xdb\x36\x10\x7e\xf7\xaf\x38\xf4\xc5\x09\x16\x0f\x2d\x3a\x14\x9d\x8d\x14\x70\x13\x75\x35\xe6\xc8\xad\x63\xaf\x0d\x8a\x82\xa0\xa5\xb3\xcc\x45\x26\x55\x92\x4a\x9c\x0e\xfb\xef\x83\x64\xc9\x96\x25\x51\x92\x13\x3b\x7b\xb4\x78\xbc\xfb\x3e\x92\xf7\xdd\x89\x72\xa7\x03\xbf\x2c\x99\x27\xa9\x46\x98\x06\xad\x4e\xa7\xd5\xe9\xc0\x27\xa1\xb4\x27\xf1\xfa\xf3\x10\x5c\xaa\xe9\x8c\x2a\x04\x37\x5c\xc6\xc3\xad\x6b\x6b\x02\x4a\x53\x8d\x4b\xe4\x9a\x68\xb6\x44\x11\x6a\x38\x87\x97\xbd\x78\xc8\x17\xce\x6d\xf1\xa9\xe3\xb3\xc8\x1a\xb9\x23\x5c\xc6\x3d\x38\x87\xf6\x74\xf2\xe1\x6d\xbb\x97\xba\xe3\x2e\x95\x2e\x71\x04\x9f\x0b\xb9\x64\xdc\x23\x4a\x4b\xc6\x3d\x05\xe7\x20\x78\xe2\x63\x81\xce\x2d\x99\x87\xdc\xd1\x4c\x70\x32\x13\x2e\xc3\x68\x7c\x4e\x7d\x85\x3b\x61\x96\x8c\x93\x25\x2a\x45\xbd\xd8\xe0\x9e\x4a\xce\xb8\xd7\x4b\xb0\x23\x95\xce\x82\x04\x54\x2f\xe0\x1c\x82\x70\xe6\x33\xe7\x0c\x02\x8f\x38\x54\x53\x5f\xa4\x66\x2e\xce\x69\xe8\x6b\xa2\xe9\xcc\x47\x15\x50\x07\x23\xd0\xed\xdc\xe8\x3d\xd3\x0b\x22\x98\x9b\xc1\x91\xac\xa1\x4d\x97\xd8\x85\x05\x53\x5a\xc8\x07\x42\x1d\x47\x84\x5c\xab\x1e\x4c\x1e\x02\xec\xc2\xa4\xff\x7e\x68\xf5\xe0\xda\x59\xe0\x92\x76\x13\x14\x3d\x18\xdd\x73\x94\x5d\xe8\xf4\x60\xb2\x09\xdb\x8d\x57\xfd\x62\x6c\xf5\x27\xd6\x7a\x5e\xc1\x2b\x9c\xb4\x00\x00\x98\x0b\x33\xe6\x31\xae\xc1\x1e\x4d\xc0\x9e\x0e\x87\x67\xf1\x73\xea\xba\x12\x95\x02\x67\x41\x25\x75\x34\x4a\xb8\xa3\xf2\x81\x71\xef\xe4\xcd\x6f\xa7\xad\xd3\x5e\xab\x1c\x33\xce\xe7\xe8\x1c\x1a\x72\xe2\x34\x41\x9c\x23\x42\x4c\x0c\x52\x3b\x11\xa0\xa4\xf1\xee\x9b\x2c\x5f\x08\xe9\xa2\x7c\x01\x8c\x6b\xf4\x50\xe6\x46\xf5\x43\x80\x86\x21\x17\x35\x65\xbe\x82\xbf\x95\xe0\x33\xf3\xa2\xf8\xe8\x7a\x28\x0f\xbc\x28\x89\xd3\x64\x51\x14\xfe\x08\x91\x3b\x26\xa0\x6b\x63\xb2\xa0\x6a\x51\xbe\xa3\x39\xfb\x40\xe2\x1d\x13\xa1\x22\xb5\x13\x93\x35\x92\x94\x2b\xba\xce\xb1\x78\x57\x36\x38\x2e\xad\x0f\xfd\xe9\x70\x02\x2f\x73\x11\xb6\xbb\xd2\xcc\xde\xf1\x85\x42\x97\x50\x0d\x91\x4e\x28\x4d\x97\x01\x44\x89\x14\x29\x46\xf4\x04\x7e\x0a\x8e\xf9\x39\x12\xa9\xae\x9d\xb4\xb6\x0d\x03\xb7\xb1\xed\xe6\x1c\x25\x3f\x97\x81\x90\x1a\x25\xb9\x43\xa9\x98\xe0\x05\x2e\xaf\xf2\x27\x4a\x68\xea\x13\x47\x30\xae\xca\x0f\xe4\x1c\x91\x04\x42\xf8\xe5\xa3\x91\xb4\x92\x39\x9a\xf6\x3a\x1e\x96\xa8\x50\xde\x99\x4c\x96\x74\x45\xf4\x8a\x28\xd4\x44\xb1\x9f\x45\x2b\xf3\x51\xde\x6e\x5b\x40\xa5\x66\x0e\x0b\xe8\xc1\x15\xaa\x3c\xc6\x56\xaf\xca\x39\x35\x4f\xf7\x7a\x01\xd9\x97\x3f\x61\x2e\x51\xf8\x23\x5d\x86\x6b\xeb\xf3\xd4\xb2\x2f\x2a\x56\x22\x4b\x3e\xb5\x6e\x16\x23\x66\x70\x3d\xe9\x8f\x27\xf0\x65\x30\xf9\x08\xaf\xe2\x07\x03\xfb\x62\x6c\x5d\x59\xf6\x04\xde\xdf\x24\x8f\xec\x11\x5c\x0d\xec\xbf\xfa\xc3\xa9\xb5\xf9\xdd\xff\xba\xfd\x7d\xd1\xbf\xf8\x68\xc1\xab\x83\x10\x85\xd1\x17\xdb\xba\x84\xf7\x37\x35\x8c\xfb\xc3\x89\x35\xde\x93\xf0\xc6\x77\x8d\xf9\xaf\xcc\xad\xe5\x72\xac\x83\x5a\x57\x4c\xb3\xf2\x68\x2c\xb8\x41\xe0\x33\x67\xcd\x2b\xae\x47\x4f\x2c\x47\xeb\x47\x4a\x84\xd2\xc1\xf4\xa8\x1b\xb4\x3f\xd5\xa9\x76\xbb\xdb\x2d\x58\x34\x48\x8a\x2c\xbd\xe3\xc9\x82\x29\x4a\xbc\xf6\x06\x59\x28\x9b\x5b\xbe\x01\x4f\x11\x05\x13\xb2\xc3\xca\x42\x4d\x94\xe7\x12\x86\x3d\xc9\x3e\x51\x1a\x6a\xa2\x15\xc5\xc1\x34\xa1\x42\x1e\x32\x53\x8e\x77\x64\x53\x89\xc8\xe2\x6b\xdc\x8e\x25\x5d\x58\x4d\x93\xd7\x54\x41\xaa\xc5\xa0\xd4\x76\x1b\xda\xdc\xaf\x50\x63\x69\x36\xf5\x7a\xff\x4b\xb7\xa6\x57\x04\xf9\x1d\xfa\x22\x40\xd0\xb8\x2a\x48\xf5\x2a\xea\x9d\x42\x5f\x1b\x06\x97\xa8\xa9\x61\x28\x5a\x05\xd3\xb0\x62\x1e\xa7\x3a\x94\x58\xf6\x46\xf5\xfb\x9b\xd3\x6f\xdf\xb7\x2a\xfc\xcf\xbf\x65\x3a\xfc\xed\x7b\xbe\x89\xc3\xa5\x20\x71\x35\x28\x6a\xf6\xc6\x17\x17\x1c\x2b\x55\x7d\xeb\xab\xe8\x26\x61\xc6\x96\x48\x66\x22\xe4\xae\x8a\x76\xee\xad\xa4\xdc\xc3\x58\x0c\xb3\xc9\xc4\xdc\x34\x75\x92\xd8\x8d\xf2\x7d\x9d\x2e\x23\x7b\x58\x57\xdd\x61\x6d\x7f\x31\x1a\x4e\xaf\xec\x68\x4b\xa3\x17\xea\x94\x25\xc7\x95\xbe\xa3\xfe\x49\xbb\x51\x43\xd1\xee\x76\x25\x7a\x8e\x4f\x95\x2a\x28\xfa\xc1\x58\x18\x8b\xd5\x5e\x3c\x6a\xd4\xaf\x8a\x49\xcd\x52\x04\xb7\xf8\x90\x52\xbd\x18\xd9\xd7\x93\x71\x7f\x60\x57\xb0\x2d\x0a\xde\x9e\x1b\x18\x1f\xa5\xfe\xe5\x65\x26\x5a\x13\x8c\xf0\x69\x3c\xb8\xea\x8f\x6f\xe0\x4f\xeb\x06\x4e\x98\xbb\x7f\x0d\x3e\x22\x53\x53\xcc\x2a\xae\x95\x38\x6b\xd9\xce\x36\x0d\x4a\x4a\x69\x60\x5f\x5a\x5f\x1f\x51\xa8\xe2\x79\x19\x7f\x30\xb2\xcb\xcb\xd6\xf4\x7a\x60\xff\x01\x33\x2d\x11\xe1\x24\x31\x3e\x2b\xd4\x85\x32\xa4\x51\x79\x3b\x18\xcc\xb8\x56\x36\xc2\x98\xaf\xb0\x65\xd0\xd6\x05\xf5\x60\xe0\xd6\xee\x9a\xc1\xcb\xd5\xf2\xb3\x62\xd9\x2e\x3d\xe3\x04\xc9\xec\x61\x3d\xfe\x54\xd8\x53\x7b\xf0\x79\x9a\xa2\xcf\xf9\xce\x72\x48\xaf\xdd\x76\xe0\x97\xbd\x66\x9f\xa5\x37\x68\x26\xe4\x5b\x59\x3d\x24\x66\xe6\x36\x46\xbb\xed\xea\xcf\x4a\x2f\x0a\x6a\x18\x88\x80\x04\x47\x21\x91\x38\xce\xf2\x30\xd4\xbf\x47\xd1\x2a\xb2\xd9\xdc\xe8\xcd\x1e\x0e\x4e\x68\xd7\x77\x96\x53\x7a\x57\xb9\x43\xa2\x1c\x5e\x36\x7b\x8f\x82\xb1\x10\xa0\x59\xda\x96\xa0\x65\xdc\xc5\x15\xc9\xdf\xab\x13\xc1\x49\x72\x79\x7e\x50\xe8\xb5\xd1\xb2\x3c\x36\x97\xfc\xbb\xea\xbd\x36\xdc\x83\xc8\x81\x97\xbf\x2a\x50\x3d\xfc\xda\x2d\x48\x24\x20\xf2\x17\xf5\xc5\x87\x91\xf7\xca\x10\xb5\x02\x14\x19\xd5\xa0\x4e\x92\x23\x72\xb9\xb9\xe4\x3e\x06\xf4\xb2\x38\xb5\x49\xba\xb1\x6c\x4e\xe2\xa8\x67\x66\x27\xce\x63\x24\xc6\xec\x2e\x77\x8b\x7f\xe4\x2d\x28\x7c\x34\xa8\xe5\x92\x9b\xd0\x9c\x59\xe6\x1b\xce\xf3\xec\x4c\xf6\xa3\x51\x1d\xad\x8c\x6d\x73\x46\x65\x9f\xa7\x9e\x87\x5a\xe9\x87\xb1\x3a\x8e\x65\x93\x9a\x93\x4d\x3b\xc5\xe7\x21\xb8\xb9\xe8\xa9\x23\x65\xec\xfc\x77\x5d\x6f\xef\xc8\x8f\xae\x0d\xf9\x50\xa5\x5d\xd5\xbe\x0a\xb1\xeb\x74\xf7\x1e\xf9\x18\x12\x51\x15\xaf\x09\xa1\xdd\x19\xfb\x91\x3b\x52\xcd\x2c\x46\x69\x44\xa4\xac\x72\xc6\x4d\xb3\x5e\x1d\xa9\x1b\x4f\x1c\x1b\x1a\xc2\x47\xf6\xe3\xc5\x0d\x31\xef\x47\xb6\xfd\x3c\x7a\xba\x14\x83\x3d\xba\x13\xd6\x92\xba\xb8\xe9\x8d\xd2\x77\x49\x32\x13\xe2\xf6\x30\x07\xaa\x22\x40\x6d\x0b\x76\x72\x92\x7e\x17\xeb\xbc\x7b\x07\x6d\x25\x7c\x97\x50\xa5\x50\xc7\x47\xb1\xdd\xed\x6a\x5c\xe9\xd3\xd3\x33\x30\x1b\x3a\xc2\x6d\x66\xc8\x94\x0a\x51\x9a\x4d\x67\x22\xf4\x16\xba\x51\xf8\x1d\xd3\x6a\x00\x3b\xa6\x39\x08\xa7\xf0\xe5\xa3\x35\xb6\xd6\xf9\x04\xe7\xf0\xfa\x75\xbc\x7b\xad\xec\x7f\xb8\x2e\xc5\x3d\x6f\xb9\x52\x04\x10\xff\x71\xa9\xfc\x0c\x38\x54\x39\xd4\xc5\x5e\x8d\xe1\x6e\x96\x54\x4d\xca\x24\x7e\x23\xb3\xe6\x9e\xd3\x7a\x55\x65\x93\x1e\x95\x2a\x9b\xcd\x6b\x48\x6a\xf4\x5f\x00\x00\x00\xff\xff\xc5\x76\xc1\xee\xf9\x26\x00\x00")

func migrations1_initial_schemaSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations1_initial_schemaSql,
		"migrations/1_initial_schema.sql",
	)
}

func migrations1_initial_schemaSql() (*asset, error) {
	bytes, err := migrations1_initial_schemaSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/1_initial_schema.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6d, 0xdd, 0xc3, 0x1d, 0x39, 0xb7, 0x5e, 0x6a, 0x64, 0x2b, 0xd5, 0x66, 0x83, 0x61, 0x79, 0xf7, 0x59, 0xce, 0x51, 0x66, 0x3c, 0xd0, 0xf3, 0x14, 0x35, 0xcd, 0x21, 0xc0, 0xae, 0x24, 0x84, 0x35}}
	return a, nil
}

var _migrations20_account_for_signer_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\x28\xce\x4c\xcf\x4b\x2d\x2a\x8e\x4f\xaa\x8c\x4f\x4c\x4e\xce\x2f\xcd\x2b\x51\xf0\xf7\x53\x80\x32\x8b\xe3\xa1\xd2\x0a\xa1\xc1\x9e\x7e\xee\x0a\x4e\x21\x41\xae\xae\x1a\x50\x49\x4d\x6b\x2e\x2e\x64\xa3\x5d\xf2\xcb\xf3\xb8\xb8\x5c\x82\xfc\x03\x70\x1a\x6d\xcd\x05\x08\x00\x00\xff\xff\x10\xbc\xb1\xe1\x8c\x00\x00\x00")

func migrations20_account_for_signer_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20_account_for_signer_indexSql,
		"migrations/20_account_for_signer_index.sql",
	)
}

func migrations20_account_for_signer_indexSql() (*asset, error) {
	bytes, err := migrations20_account_for_signer_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20_account_for_signer_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7, 0xd5, 0x6a, 0x4f, 0x6a, 0x95, 0xe0, 0x16, 0xa8, 0x25, 0xd7, 0x4, 0xec, 0x85, 0xe9, 0x13, 0x33, 0x4c, 0x9a, 0xa8, 0x74, 0xf9, 0x63, 0x52, 0xa5, 0x18, 0xaa, 0xdb, 0x4, 0xb5, 0xf7, 0x6e}}
	return a, nil
}

var _migrations21_trades_remove_zero_amount_constraintsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x2f\x29\x4a\x4c\x49\x2d\x56\x70\x09\xf2\x0f\x50\x70\xf6\xf7\x0b\x0e\x09\x72\xf4\xf4\x0b\x41\x93\x8e\x4f\x4a\x2c\x4e\x8d\x4f\xcc\xcd\x2f\xcd\x2b\x89\x4f\xce\x48\x4d\xce\xb6\xa6\xc0\xb0\x64\x90\x31\xa9\x45\x68\xe6\xe1\x33\xd0\xd1\xc5\x85\x14\xc7\x29\x38\x7b\xb8\x3a\x7b\x2b\x68\x20\x49\x28\xd8\xd9\x2a\x18\x68\xe2\x75\x35\x7e\x4b\xb0\x39\x1a\x66\x0f\xaa\x1c\xcc\x2a\x2e\xe4\xe0\x77\xc9\x2f\xcf\x1b\xe1\x11\x40\xbf\xf0\x07\xdb\x04\x08\x00\x00\xff\xff\xfc\x1d\x38\xf5\xfd\x02\x00\x00")

func migrations21_trades_remove_zero_amount_constraintsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations21_trades_remove_zero_amount_constraintsSql,
		"migrations/21_trades_remove_zero_amount_constraints.sql",
	)
}

func migrations21_trades_remove_zero_amount_constraintsSql() (*asset, error) {
	bytes, err := migrations21_trades_remove_zero_amount_constraintsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/21_trades_remove_zero_amount_constraints.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0x1a, 0x4b, 0x15, 0xd5, 0xce, 0x4, 0xe9, 0x43, 0x61, 0x69, 0xce, 0xed, 0x82, 0x11, 0x4e, 0xc7, 0x58, 0xef, 0x4a, 0x46, 0xef, 0x2a, 0x28, 0x13, 0x5e, 0x59, 0xf0, 0x69, 0x50, 0x45, 0x84}}
	return a, nil
}

var _migrations22_trust_linesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x93\xc1\x6e\x9b\x40\x10\x86\xef\x3c\xc5\x1c\x6d\xd5\x54\x6d\xd5\xe4\xe2\x93\x5d\xa3\xca\x8a\x83\x23\x8a\xa5\xe6\xb4\x1a\x76\xc7\x64\xd4\x65\xd7\xdd\x59\x5a\xf1\xf6\x95\x89\x62\x93\x04\xa5\xce\x71\xc5\xc7\x3f\x2c\xdf\x3f\x69\x0a\x1f\x1a\xae\x03\x46\x82\xdd\x21\x49\xbe\x15\xd9\xa2\xcc\xa0\x5c\x2c\x37\x19\xc4\xd0\x4a\x54\x96\x1d\x09\x4c\x12\x00\x80\x34\x05\x4b\xa6\xa6\xa0\x7e\x51\x07\x2c\x80\xb0\xe9\xcf\x37\xd4\x41\x83\x41\x1e\xd0\x92\x81\x56\xd8\xd5\x70\xfb\x78\x5e\xb2\xc3\xd0\x3d\xbd\x8e\xce\x40\x85\x42\xd7\x5f\x53\x72\xda\x9b\x9e\x26\x03\xd1\x43\xe5\xbd\x44\x38\x50\xd8\xfb\x06\x9d\x26\xf0\x7b\x10\xdf\x10\xfc\x6e\x29\x30\xc9\xc7\x3e\x63\x30\x5f\x3f\x60\x40\x1d\x29\xc0\x1f\x0c\x1d\xbb\x7a\xf2\xf9\xea\xd3\x14\xf2\x6d\x09\xf9\x6e\xb3\x99\xf5\x3c\x6a\xed\x5b\x17\x15\x9b\x11\xfe\xea\xfa\x15\x2e\x42\x51\xc5\xee\x40\xc0\x2e\x8e\x3e\x64\x91\x96\xc2\x3b\xd2\x8e\xd7\x1c\xfb\xd8\x2f\x2f\xf1\x0a\x6d\x7f\xf1\x8a\xeb\xd7\xc3\xcf\x36\x94\xe5\x86\xe3\x38\x55\xb5\xc7\x6c\x65\x19\x2b\xb6\x1c\x99\x64\x9c\x13\xb2\xf6\x22\x70\x6f\xb1\x96\x91\x7f\x61\x51\xa2\x6a\xbc\xe1\x3d\x93\x51\x8f\x56\x60\x9d\x97\x2f\xb0\xbb\x62\x7d\xbb\x28\xee\xe1\x26\xbb\x87\xc9\xd9\xdd\x34\x99\xce\x4f\x6d\x5b\xe7\xab\xec\xe7\xb0\x6d\xaa\xea\xd4\xc0\xdb\x36\x7f\x56\xc5\xdd\x8f\x75\xfe\x1d\x96\x65\x91\x65\x93\x33\x35\x9d\xbf\x19\x77\x34\xda\x8b\x78\xd2\xf7\x56\xe8\xa9\x03\xb3\x81\xc1\xd9\x33\xfd\xff\x19\x77\xe9\x90\x53\x58\x32\xdc\xc4\x95\xff\xeb\x92\x64\x55\x6c\xef\x46\x36\x51\xa3\x68\x34\x34\xff\x17\x00\x00\xff\xff\x7a\x87\x20\x42\xbb\x03\x00\x00")

func migrations22_trust_linesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations22_trust_linesSql,
		"migrations/22_trust_lines.sql",
	)
}

func migrations22_trust_linesSql() (*asset, error) {
	bytes, err := migrations22_trust_linesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/22_trust_lines.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0xd9, 0x90, 0x83, 0xc9, 0xb3, 0x1b, 0xc4, 0xe9, 0xc4, 0xbb, 0xcb, 0xb5, 0x92, 0x15, 0xaa, 0xef, 0x5d, 0x4e, 0xcf, 0x16, 0x6b, 0x49, 0xef, 0x85, 0x1a, 0xbf, 0xb6, 0x71, 0xb3, 0x92, 0x33}}
	return a, nil
}

var _migrations23_exp_asset_statsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x51\x6f\xd3\x30\x14\x85\xdf\xf3\x2b\xce\x63\x2b\xda\x49\x20\x81\x90\xfa\x14\xd6\x68\x54\x94\x74\x0a\x29\xda\x9e\x22\xd7\xb9\x6b\x2d\x1c\xc7\xf8\xde\xd2\xe5\xdf\xa3\x8c\x6c\xb8\xb4\x13\xbd\x4f\x96\xfc\xe9\x9c\x73\x8f\xe5\xe9\x14\x6f\x1a\xb3\x0d\x4a\x08\x6b\x9f\x4c\xa7\xa0\x47\x5f\x29\x66\x92\x8a\x45\x09\xc3\x30\xac\xf9\x41\x90\x1d\x81\x1e\x0d\x8b\x71\x5b\xc4\x80\xa8\x8d\x25\x3c\x98\xc0\x82\x9a\x1e\x8c\xa3\x1a\xc6\xe1\x63\xa5\x03\x29\xa1\x58\xac\x7a\x62\xaf\xf8\xa7\xfd\xe3\xa4\xc9\x0b\x64\xa7\xe4\x9c\xab\x6f\xfd\xde\x2a\xa1\x1a\x9b\x6e\x70\xf7\x14\x4c\x43\x4e\x94\x85\x71\x5b\x62\x31\xad\x03\x77\x2c\xd4\xe0\xb0\x33\x96\xf0\x9a\x46\xef\x37\xc8\x58\xda\x2a\xdd\x9d\x08\x5c\x61\xe5\x34\x5d\x60\x14\xc8\x5b\xa5\x89\x63\xb1\xe1\x4a\x76\xe4\x7a\xa7\x03\x41\x2b\x87\x40\x4d\xfb\xeb\x28\x53\x92\x5c\x17\x59\x5a\x66\x28\xd3\x4f\xcb\xec\x64\xeb\x51\x02\x60\xe0\xa5\xf3\x84\xa7\x59\xe4\x25\xf2\x55\x89\x7c\xbd\x5c\x4e\x22\x42\xb7\xf5\x40\x7c\x4f\x8b\xeb\xcf\x69\x31\x7a\xfb\x6e\x7c\x96\x34\xcc\x7b\x0a\x31\xf9\xfe\xc3\x09\xd9\xb4\x7b\x27\x78\x99\x32\xbb\x2b\x9f\xcf\xc7\xa4\xdb\x37\x95\xd2\xba\xc7\x79\xc8\x97\xdd\x64\xc5\x19\xf2\xb6\x58\x7c\x4d\x8b\x7b\x7c\xc9\xee\x47\x7f\x33\x4f\x8e\x52\x4d\xa2\x7d\xc7\xc9\x78\xf6\x52\xd1\x22\x9f\x67\x77\xff\x56\x54\x6d\xba\xe7\x6d\x56\xf9\x49\x7f\xeb\x6f\x8b\xfc\x06\x1b\x09\x44\x18\xc5\x26\xe3\xd9\x7f\x55\x87\x36\x2f\x53\xed\xe1\x3e\x6a\xfc\x7d\xe6\xed\xc1\x25\xf3\x62\x75\xfb\xca\xe3\x6a\xc5\x5a\xd5\x34\xfb\x1d\x00\x00\xff\xff\x1c\x2f\xe1\x06\x73\x03\x00\x00")

func migrations23_exp_asset_statsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations23_exp_asset_statsSql,
		"migrations/23_exp_asset_stats.sql",
	)
}

func migrations23_exp_asset_statsSql() (*asset, error) {
	bytes, err := migrations23_exp_asset_statsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/23_exp_asset_stats.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5f, 0x23, 0x96, 0xcb, 0x81, 0x52, 0xd5, 0xb, 0x3c, 0xd4, 0xb9, 0xd9, 0x24, 0xd3, 0x1a, 0x3d, 0x1a, 0xe0, 0xd2, 0x4, 0x40, 0xf5, 0x75, 0xe2, 0x1d, 0x26, 0xd3, 0x19, 0xcf, 0x70, 0xf, 0x36}}
	return a, nil
}

var _migrations24_accountsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x5d\x6f\xda\x4c\x10\x85\xef\xfd\x2b\xe6\x12\xf4\x86\x57\xfd\x48\x90\x2a\xae\xa0\x58\x15\x0a\x31\x29\x05\xa9\xb9\x5a\x8d\xbd\x83\x3d\xea\x7e\x24\xbb\xeb\x20\xfe\x7d\x65\x53\x62\xc7\x18\x25\xed\x9d\x57\x7e\xf6\xec\x9e\x99\x33\x3b\x1a\xc1\x7f\x9a\x73\x87\x81\x60\xfb\x18\x45\x5f\xd7\xf1\x74\x13\xc3\x66\x3a\x5b\xc6\x80\x59\x66\x4b\x13\x3c\x0c\x22\x00\x38\x2d\x05\x4b\xc8\x0a\x74\x98\x05\x72\xf0\x8c\xee\xc0\x26\x1f\xdc\x8c\x87\x90\xac\x36\x90\x6c\x97\xcb\xab\x1a\x4f\x51\xa1\xc9\x08\x52\xce\xd9\x84\xee\xcf\xb2\xda\x25\x14\x63\xca\x8a\x03\x93\xef\xe7\x3c\x29\xf5\x4e\xf0\xa9\x24\x93\x91\x30\xa5\x4e\xc9\xf5\x43\xa6\xd4\xc2\x97\x29\x99\xe0\x2a\xa1\x73\x80\xcd\x4e\x61\x60\x6b\x84\x24\x1f\xd8\xd4\xdf\xef\x72\xbb\x53\x98\xf7\x29\x16\x56\x93\x90\x56\x23\xf7\xe9\x7c\xfe\xd4\xd5\xd1\xe8\x03\x39\xb1\x27\xce\x8b\x00\x5e\x63\xe5\xbf\x2b\x1a\x0a\x47\xbe\xb0\x4a\x0a\x65\xf7\x6f\x43\x9a\x24\x97\xfa\x6d\xae\xe0\xbc\xb8\x44\x29\xf4\x41\x68\x2b\x79\xc7\x24\x85\x22\x99\x93\x83\x45\xb2\xe9\x60\xf7\xeb\xc5\xdd\x74\xfd\x00\xb7\xf1\x03\x0c\x9a\xc0\x0c\xa3\xe1\xe4\x25\x5c\x8b\x64\x1e\xff\x7c\x09\x97\xe8\xaf\xf9\x2a\x69\xe2\xb7\xfd\xb1\x48\xbe\xc1\x6c\xb3\x8e\xe3\x41\x2f\x3d\x9c\x5c\xd0\x6e\x57\xff\x92\x62\x8b\x69\x5d\xf2\xf5\x04\x08\x89\x01\xff\x8c\xc1\x68\x04\x47\xfb\xe2\x17\x1d\x80\x3d\x20\x2c\xeb\xf5\x2d\x1d\x40\xa3\xf3\x05\x2a\x92\x50\x7a\x36\x39\xdc\x1d\xd7\x33\x36\xe8\x0e\xa7\xed\x68\x24\xa4\xe8\x69\x7c\x3d\x22\x93\x59\x59\xd3\x24\x21\x58\x48\xad\xf5\x01\x1e\xc9\xed\xac\xae\xa7\xc7\xee\xc0\x5b\x4d\xf0\x54\x52\x95\xd9\xff\x8f\xcd\x68\xce\x3f\xcf\xd4\xc7\x9b\x0f\xdd\x50\xfd\xe5\xe4\x1a\xd4\xd4\x03\x8e\xaf\xbb\xe0\x33\xaa\xb2\x8f\xfc\xd2\xbe\x41\xe5\xb8\xe3\x76\x7c\x0d\xe9\x21\x90\xff\xe7\x64\x35\x05\x78\x95\xac\x6d\xb2\xf8\xbe\x3d\x0b\x41\xd5\x3b\xd1\x94\x40\xd4\xf6\x5a\x69\x38\x36\xb7\x1d\x89\x06\xbe\xaa\x8b\x51\x1d\xd1\x7e\x29\xe7\x76\x6f\xa2\x68\xbe\x5e\xdd\x77\x5f\xca\x0c\x7d\x86\x92\x26\x7d\x3f\x8f\xe7\x9c\x88\xdf\x01\x00\x00\xff\xff\xd2\xd6\x65\xae\x7a\x05\x00\x00")

func migrations24_accountsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations24_accountsSql,
		"migrations/24_accounts.sql",
	)
}

func migrations24_accountsSql() (*asset, error) {
	bytes, err := migrations24_accountsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/24_accounts.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0xf8, 0xf7, 0xeb, 0xe2, 0x3d, 0xda, 0xe, 0xc2, 0x78, 0x88, 0x16, 0x22, 0xbf, 0x22, 0xa8, 0x5a, 0x17, 0x72, 0xd9, 0xab, 0x56, 0xa8, 0x55, 0x5a, 0x3f, 0x47, 0xf6, 0x18, 0xfa, 0x43, 0xa7}}
	return a, nil
}

var _migrations25_expingest_rename_columnsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xcd\xaa\x83\x30\x10\x85\xf7\x3e\xc5\xec\x2f\x3e\xc1\x5d\xd9\x36\x3b\x7f\x40\x74\x3d\x58\x8d\x61\xc0\xc6\xe2\x28\xa5\x6f\x5f\x4c\x0c\xa4\x76\xd1\xd8\xdd\x99\x09\x5f\x0e\xf3\xc5\x31\xfc\xdd\x48\x4d\xcd\x2c\xa1\xbe\x47\x51\x92\x56\xa2\x84\x2a\x39\xa5\x02\x9a\xb6\x1d\x17\x3d\x33\x32\x29\x2d\x27\x86\x52\xe4\x49\x26\xe0\x5c\xa4\x75\x96\xbb\x67\xa8\x0a\x17\x91\xba\xff\xf7\x2f\xc6\xbe\xff\x04\x59\x0e\x83\x9c\xa8\x5b\x49\x9b\x0d\xf8\x95\x33\x4b\x8b\x99\x18\x46\xad\x0d\xa4\x55\xc3\x2c\x67\xd7\x48\x5a\xa1\x59\x04\xf0\xd7\xe5\xe9\xe3\x76\x74\x74\xe4\xfb\xbb\x8c\x0f\xfd\x8b\x41\xb4\x37\x6d\x53\xb8\x41\xf4\x15\x86\x1b\x44\x4f\xe1\x11\x83\xb8\x57\x78\xcc\x20\xee\x14\x6e\xf4\x2b\x00\x00\xff\xff\x84\x7d\x6a\x64\x81\x02\x00\x00")

func migrations25_expingest_rename_columnsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations25_expingest_rename_columnsSql,
		"migrations/25_expingest_rename_columns.sql",
	)
}

func migrations25_expingest_rename_columnsSql() (*asset, error) {
	bytes, err := migrations25_expingest_rename_columnsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/25_expingest_rename_columns.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x80, 0x44, 0x81, 0x62, 0xeb, 0xcf, 0x82, 0xaa, 0x9, 0x14, 0x4c, 0xb6, 0xd2, 0x2c, 0x41, 0x2d, 0xf0, 0x34, 0x4a, 0x18, 0x5a, 0x95, 0x3e, 0x8d, 0x60, 0xbe, 0x5, 0x10, 0xf5, 0xc2, 0x9c, 0x3a}}
	return a, nil
}

var _migrations26_exp_history_ledgersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xb1\x0a\xc2\x30\x10\x87\xf1\xfd\x9e\xe2\x3f\x2a\xd2\x27\xe8\x54\x6d\x06\xb1\xa0\x94\x3a\x97\x90\x9c\xf5\xa0\x5e\x4a\x92\x62\x7d\x7b\xc1\x49\x2a\xb8\x7e\xbf\xe5\x2b\x0a\xec\x1e\x32\x44\x9b\x19\xd7\x89\xe8\xd0\x9a\xaa\x33\xe8\xaa\x7d\x63\xc0\xcb\xd4\xdf\x25\xe5\x10\x5f\xfd\xc8\x7e\xe0\x98\xb0\x21\x00\x68\x8e\x27\x83\x15\x7d\x40\xd4\x8d\xb3\x17\x1d\xe0\xf9\x66\xe7\x31\xaf\xb3\x0b\x9a\x72\xb4\xa2\x3f\x22\xea\x79\xe1\x44\xdb\x92\xe8\x7b\xab\x0e\x4f\x25\xaa\xdb\xf3\xe5\xcf\x96\xb3\xc9\x59\xcf\x25\xbd\x03\x00\x00\xff\xff\xe9\x1c\x12\x26\xd1\x00\x00\x00")

func migrations26_exp_history_ledgersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations26_exp_history_ledgersSql,
		"migrations/26_exp_history_ledgers.sql",
	)
}

func migrations26_exp_history_ledgersSql() (*asset, error) {
	bytes, err := migrations26_exp_history_ledgersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/26_exp_history_ledgers.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb0, 0xf9, 0xc6, 0xfd, 0xcb, 0x11, 0xc3, 0xc0, 0xbf, 0xac, 0x33, 0x8a, 0xc5, 0x8d, 0x47, 0xfd, 0x59, 0xd1, 0x1d, 0x69, 0x17, 0xba, 0xc7, 0xbb, 0xe6, 0x40, 0x58, 0x32, 0x14, 0x97, 0x96, 0x76}}
	return a, nil
}

var _migrations27_exp_history_transactionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x91\x41\x4a\xc6\x30\x10\x85\xf7\x39\xc5\x2c\x15\xe9\x09\xba\xaa\x36\x0b\xb1\xa0\x94\xba\x2e\xc3\x24\xd6\x81\x3a\x09\xc9\x14\xeb\xed\x05\xa1\x52\xb4\xb1\x1b\xf9\xb7\xf9\x5e\xe0\x9b\xf7\xaa\x0a\x6e\xde\x78\x4a\xa8\x1e\x9e\xa3\x31\x77\xbd\x6d\x06\x0b\x43\x73\xdb\x59\xf0\x6b\x1c\x5f\x39\x6b\x48\x1f\xa3\x26\x94\x8c\xa4\x1c\x24\xc3\x95\x01\x00\xe8\xee\x1f\x2c\x1c\xf1\x2f\xca\x42\xf3\xe2\x58\x26\x70\xfe\x05\x97\x59\x7f\x3e\x53\x90\xac\x09\x59\x7e\x11\x16\xe7\x57\x9f\xcd\x75\xfd\x87\x10\x12\x85\x45\xf4\x50\x66\x63\x17\x11\xd9\x5d\x3e\x46\x4c\xca\xc4\x11\x0b\x62\xa5\xec\x7f\x8a\x9a\xfd\xa6\x6d\x78\x17\x63\xda\xfe\xf1\xe9\x6c\x53\xc2\x4c\xe8\x7c\x5d\x4c\x7f\x17\x7e\x9a\x2c\x36\xb2\xfd\xfc\x0c\x00\x00\xff\xff\x48\x5d\x4e\x5b\x76\x02\x00\x00")

func migrations27_exp_history_transactionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations27_exp_history_transactionsSql,
		"migrations/27_exp_history_transactions.sql",
	)
}

func migrations27_exp_history_transactionsSql() (*asset, error) {
	bytes, err := migrations27_exp_history_transactionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/27_exp_history_transactions.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x13, 0xbf, 0x14, 0x32, 0x4a, 0xc, 0x39, 0x8a, 0xff, 0x9d, 0xaf, 0x3f, 0x8e, 0xb4, 0xe, 0xf2, 0x2b, 0x26, 0x67, 0xf6, 0xcd, 0x20, 0xe2, 0x5b, 0x98, 0x78, 0xc2, 0x10, 0xcc, 0x52, 0xd6, 0xc3}}
	return a, nil
}

var _migrations28_exp_history_operationsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xc1\xaa\xc2\x30\x10\x45\xf7\xf9\x8a\x59\xbe\x87\xf4\x0b\xba\xaa\x36\x0b\xb1\xa0\x94\xba\x2e\x43\x12\xeb\x40\x9d\x84\x64\x8a\xf5\xef\x05\x17\x62\x2d\x54\x17\x6e\xe7\xdc\x81\x73\x6f\x96\xc1\xea\x42\x5d\x44\x71\x70\x0c\x4a\x6d\x6a\x5d\x34\x1a\x9a\x62\x5d\x69\x70\x63\x68\xcf\x94\xc4\xc7\x5b\xeb\x83\x8b\x28\xe4\x39\xc1\x9f\x02\x00\xa8\xb6\x3b\x0d\x73\xfa\x60\xc4\xa6\x1f\x2c\x71\x07\xd6\x9d\x70\xe8\xe5\xfd\x6c\x3c\x27\x89\x48\x3c\x23\xc4\xd6\x8d\x2e\xa9\xff\xfc\x1b\x99\x36\x60\x14\x32\x14\x90\x65\x59\x6c\x92\xfc\xa5\xe4\xeb\x82\xa5\xbf\xb2\x52\x65\xbd\x3f\x2c\x2f\x68\x30\x19\xb4\x2e\xff\x9c\x9d\x16\x7c\xfe\xdd\x03\x00\x00\xff\xff\x70\x31\x67\x84\xb7\x01\x00\x00")

func migrations28_exp_history_operationsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations28_exp_history_operationsSql,
		"migrations/28_exp_history_operations.sql",
	)
}

func migrations28_exp_history_operationsSql() (*asset, error) {
	bytes, err := migrations28_exp_history_operationsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/28_exp_history_operations.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x59, 0x2d, 0xc6, 0x70, 0x76, 0x72, 0xc5, 0xb1, 0xc6, 0xe7, 0xa0, 0xb2, 0xfc, 0x78, 0x71, 0xa, 0x43, 0x8e, 0x53, 0x9, 0x19, 0x10, 0xcb, 0x75, 0x3b, 0x66, 0x1, 0x57, 0x43, 0xd2, 0x8e, 0x89}}
	return a, nil
}

var _migrations29_exp_history_assetsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xce\xb1\x0a\xc2\x40\x0c\x80\xe1\x3d\x4f\x91\x51\x91\x3e\x41\xa7\x6a\x6f\x10\x0b\x4a\xa9\x73\x09\x77\xb1\x06\x6a\xae\x5c\xae\x58\xdf\x5e\x70\x52\x8a\xeb\xff\x2f\x5f\x51\xe0\xee\x21\x43\xa2\xcc\x78\x9d\x00\x0e\xad\xab\x3a\x87\x5d\xb5\x6f\x1c\xf2\x32\xf5\x77\xb1\x1c\xd3\xab\x27\x33\xce\x86\x1b\x40\x44\x6c\x8e\x27\x87\xbf\xe7\xd3\x45\xfd\x38\x07\xd1\x01\x03\xdf\x68\x1e\x57\xd9\x47\xb5\x9c\x48\x74\x75\x44\x03\x2f\x6c\xb0\x2d\x01\xbe\x51\x75\x7c\x2a\x40\xdd\x9e\x2f\xff\x51\x9e\xcc\x53\xe0\x12\xde\x01\x00\x00\xff\xff\x17\x4e\x53\x21\xce\x00\x00\x00")

func migrations29_exp_history_assetsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations29_exp_history_assetsSql,
		"migrations/29_exp_history_assets.sql",
	)
}

func migrations29_exp_history_assetsSql() (*asset, error) {
	bytes, err := migrations29_exp_history_assetsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/29_exp_history_assets.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x25, 0xdf, 0x37, 0x6, 0x2c, 0x6e, 0x52, 0x9b, 0x16, 0x17, 0x9c, 0x29, 0x41, 0x41, 0xa6, 0x14, 0x59, 0xff, 0x29, 0xfa, 0x12, 0x2a, 0x8d, 0xce, 0x42, 0xad, 0xa6, 0x26, 0xef, 0x6f, 0x27, 0x17}}
	return a, nil
}

var _migrations2_index_participants_by_toidSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\xca\xc2\x50\x0c\x46\xf7\x3c\x45\xc6\xff\x47\xfa\x04\x9d\xc4\x16\xe9\xd2\x4a\xb5\xe0\x76\x49\xdb\x8b\xcd\xe0\xcd\x25\x37\x20\x7d\x7b\x41\x07\x5b\xbb\xb8\x86\x8f\x73\x72\xb2\x0c\x77\x77\xbe\x29\x99\xc7\x2e\x02\x1c\xda\x72\x7f\x29\xb1\xaa\x8b\xf2\x8a\x93\x44\xd7\xcf\x6e\x12\x1e\xb1\xa9\x71\xe2\x64\xa2\xb3\x93\xe8\x95\x8c\x25\xb8\x48\x6a\x3c\x70\xa4\x60\x09\xbb\x73\x55\x1f\xb1\x37\xf5\x1e\xff\xb6\x5b\x1e\xff\xf3\x2f\xbc\xbd\xf1\xb6\xc6\x9b\x52\x48\x34\xfc\x28\x58\xae\x5f\x0a\x58\x26\x15\xf2\x08\x00\x45\xdb\x9c\xb6\x49\xf9\xea\xfe\xf9\x25\x87\x67\x00\x00\x00\xff\xff\x33\xec\x54\x7a\x15\x01\x00\x00")

func migrations2_index_participants_by_toidSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations2_index_participants_by_toidSql,
		"migrations/2_index_participants_by_toid.sql",
	)
}

func migrations2_index_participants_by_toidSql() (*asset, error) {
	bytes, err := migrations2_index_participants_by_toidSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/2_index_participants_by_toid.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdd, 0x9f, 0x5c, 0xe6, 0xd0, 0x43, 0x82, 0xa3, 0x8d, 0xb3, 0x64, 0xb1, 0x2, 0x4b, 0xe1, 0x96, 0x3, 0x92, 0xb3, 0xea, 0x3c, 0x2e, 0xb2, 0xad, 0x47, 0xcd, 0x92, 0x4c, 0x6c, 0x5c, 0x46, 0xfd}}
	return a, nil
}

var _migrations30_exp_history_tradesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x96\x41\x8f\xda\x3c\x10\x86\xef\xf9\x15\xa3\x3d\x81\x3e\xf8\xd4\x73\xb7\xad\xb4\x65\xd3\x16\x2d\x0a\x2d\x0b\x52\x6f\x96\x63\x0f\xc4\xda\x60\x47\xf6\x44\xec\xf6\xd7\x57\x4e\x1a\x36\x09\x86\x0d\x6a\x39\xce\x8c\x9f\x79\xfd\x7a\x1c\x33\x9d\xc2\x7f\x7b\xb5\xb3\x9c\x10\x36\x45\x14\x4d\xa7\x70\x40\x10\x5c\x6b\x43\x20\x2c\xfa\x38\x3e\x17\x2c\x53\x8e\x8c\x7d\x61\x64\xb9\x44\x07\xdc\xbd\xaf\x6a\x67\xab\xf8\x6e\x1d\xc3\xfa\xee\xf3\x22\x0e\xd5\x8d\x7c\x91\xff\x2d\xe6\x0f\x31\x74\x93\x4d\x4a\x69\x91\x97\x52\xe9\x1d\x48\xdc\xf2\x32\xa7\x40\x46\x18\xed\xc8\x72\xa5\x43\x49\xa5\x25\x3e\xd7\xbc\xf1\x6d\x25\x2b\x45\xc1\x4b\x87\x40\x19\xf6\x9a\x02\xf1\x34\x47\xc8\xb8\x03\x8b\x5b\xb4\xa8\x05\xb6\xe9\x40\xe6\xb8\x82\x0b\x61\x4a\x1f\xe3\x5a\xbe\x06\x9d\xc3\x5a\x84\x8f\x1e\x10\xa4\x01\xef\xd5\x81\x6b\xf2\x8b\x85\x29\x5e\x80\x32\xe3\x3a\xd8\xff\x41\x69\x47\xc8\xe5\xc4\x2f\x69\x6a\x5f\x15\x50\x86\x1e\xd9\x76\xb0\xd3\xbd\x93\xa8\x14\xd4\x1b\x71\x51\xf4\xf6\x11\x78\xb7\x9a\xa0\x29\xd0\x72\x52\x46\x33\x25\x21\x55\x3b\xa5\x09\x92\xe5\x1a\x92\xcd\x62\x31\xa9\x2a\x6f\x8c\x95\x68\x6f\x40\x69\xc2\x1d\xda\x5e\x36\x47\xb9\x43\xcb\x44\x6e\x1c\x4a\xc6\x09\x48\xed\xd1\x11\xdf\x17\x70\x50\x94\x99\xb2\x8e\xc0\x2f\xa3\xb1\xb7\xd4\x6c\xb7\x68\xcf\xb6\x4d\xb9\xc3\x66\xcf\x81\x22\x58\xc5\x5f\xe2\x55\x9c\xcc\xe2\xc7\xa0\x4b\x23\x25\xc7\x6d\x90\xf7\xe8\x1a\x4c\xe5\x69\x1f\xb2\xf7\xe8\xb0\xdc\xaa\x2b\xda\x7f\xa2\xf8\xc8\xfa\x4b\xd1\x47\xce\x05\xdd\xd5\xc6\x94\x63\x0e\xf3\x1c\x2d\xa4\xc6\xe4\xc8\x75\x9d\x2b\xac\x12\xc8\xf4\x9f\x85\xed\x98\xec\xc4\x2a\x46\xef\x34\xbb\x0a\x82\xc9\xd9\x32\x79\x5c\xaf\xee\xe6\xc9\x3a\x30\xa6\xac\xe5\x38\x13\x19\x8a\x27\x98\x7d\x8b\x67\x0f\x30\x1a\xb5\xcf\xe2\xd3\x47\x78\x37\x1e\x0f\xe1\x85\x18\x8d\xbf\x1f\x4e\x2c\x1f\xc8\xec\x18\xdc\x6b\xd1\x73\xbf\x56\x1a\xf9\x0f\x52\x73\x45\xe7\xc9\x7d\xfc\xb3\xe6\x92\x95\x2c\x7d\x61\xed\xa1\x87\x65\x12\xba\xbe\x9b\xc7\x79\xf2\x15\x52\xb2\x88\x30\xea\x5d\x12\x0f\xbf\xcc\xae\x0e\x62\x30\xb9\x39\xb6\x8b\xdc\xde\xe4\x0f\x81\x9f\x5e\x96\x41\x1d\x06\x8b\xef\x8f\xdd\x45\xfa\x60\xea\xdb\xb4\xa6\x6f\x6e\xcc\x53\x59\x5c\xe5\x44\x33\x77\x67\xd9\x05\x57\x96\xf9\x4f\xe9\x15\xf4\xce\x94\x4f\x4e\x86\x7c\x72\xf2\xf5\x6e\xb5\xdf\x24\xf3\x1f\x9b\x53\x15\x4a\x0e\x69\x1c\x7a\x5d\x26\xcd\x4b\x72\x7e\x8f\x57\x6e\x2f\xa4\xbe\xfd\xff\xe5\xde\x1c\x74\x14\xdd\xaf\x96\xdf\xcf\xbf\x86\x82\x3b\xc1\x25\xde\x46\xbf\x03\x00\x00\xff\xff\xd4\x84\xb9\x21\xf9\x08\x00\x00")

func migrations30_exp_history_tradesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations30_exp_history_tradesSql,
		"migrations/30_exp_history_trades.sql",
	)
}

func migrations30_exp_history_tradesSql() (*asset, error) {
	bytes, err := migrations30_exp_history_tradesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/30_exp_history_trades.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x32, 0xe, 0xc2, 0x9, 0x37, 0x62, 0x5f, 0x79, 0xfe, 0x3e, 0x11, 0x22, 0x66, 0x56, 0x36, 0x8, 0x0, 0x76, 0x70, 0xc3, 0x5c, 0x16, 0xe3, 0x2b, 0x73, 0x57, 0xe8, 0x38, 0x6c, 0x62, 0x1e}}
	return a, nil
}

var _migrations31_exp_history_effectsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xb1\xaa\xc2\x30\x14\x87\xf1\xfd\x3c\xc5\x7f\xbc\x17\xe9\x13\x74\xaa\x36\x83\x58\x50\x4a\x9d\x4b\x48\x4e\xeb\x81\x7a\x52\x92\x14\xeb\xdb\x0b\x4e\x62\xc1\xf5\xfb\x2d\x5f\x51\x60\x77\x97\x31\xda\xcc\xb8\xce\x44\x87\xd6\x54\x9d\x41\x57\xed\x1b\x03\x5e\xe7\xfe\x26\x29\x87\xf8\xec\x79\x18\xd8\xe5\x84\x3f\x02\x80\xe6\x78\x32\xf8\xa2\x37\x88\xba\x69\xf1\xa2\x23\x3c\x0f\x76\x99\x36\xd9\x05\x4d\x39\x5a\xd1\x8d\x88\x7a\x5e\x39\xd1\x7f\x49\xf4\xb9\x55\x87\x87\x12\xd5\xed\xf9\xf2\x63\xcb\xd9\xe4\xac\xe7\x92\x5e\x01\x00\x00\xff\xff\xaa\x4f\x70\x26\xd1\x00\x00\x00")

func migrations31_exp_history_effectsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations31_exp_history_effectsSql,
		"migrations/31_exp_history_effects.sql",
	)
}

func migrations31_exp_history_effectsSql() (*asset, error) {
	bytes, err := migrations31_exp_history_effectsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/31_exp_history_effects.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xdf, 0x34, 0xf6, 0x6e, 0x86, 0x85, 0x4e, 0xfb, 0x74, 0xee, 0x7d, 0x4, 0xd2, 0xc7, 0x83, 0xae, 0x97, 0xab, 0xca, 0xe1, 0xb3, 0x7c, 0x25, 0xa8, 0x7f, 0x65, 0x2b, 0x1e, 0xdb, 0x88, 0x9b, 0xf}}
	return a, nil
}

var _migrations32_drop_exp_history_tablesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\xd1\x6e\xda\x30\x14\x7d\xe7\x2b\xae\xfa\x04\x1a\x4c\x7b\x5e\xb7\x49\x1d\xcd\x36\x54\x14\x36\x0a\xd2\xde\x22\xc7\xbe\x10\xab\xc1\x8e\x6c\x23\xda\x7d\xfd\x94\xa4\x69\x1d\xc7\xa4\x66\x43\xbc\xfa\x5c\x9f\x7b\x7c\x7c\x7c\x03\x93\x09\xbc\xdb\xf1\xad\x22\x06\x61\x5d\x0c\x06\xb7\xcb\xc5\x4f\x58\xdd\x7c\x9d\x47\x80\x8f\x45\x92\x71\x6d\xa4\x7a\x4a\x70\xb3\x41\x6a\x34\x50\xa2\x29\x61\x78\x7d\xb4\xd0\x28\xc2\x30\xa0\x8e\x68\x8d\x21\x7c\xb2\x40\x45\x0c\x97\x22\x29\x88\x32\x9c\xf2\x82\x88\x93\xf6\x85\x69\x16\x9a\xd0\x7f\xe8\x42\x28\x95\xfb\xa0\x4a\xab\x47\x40\x75\x8e\x6c\x8b\xca\x2e\xb4\xef\xe9\x56\x1e\xc4\x60\x30\x5d\x46\x37\xab\xa8\x67\xf3\x70\x00\x00\x30\x9f\xdd\x45\xe0\x40\x15\xc0\x05\xcd\xf7\x8c\x8b\x2d\x30\xdc\x90\x7d\x6e\xdc\x65\x2a\x85\x36\x8a\x70\xd1\x41\xb8\x60\xf8\x88\x7a\x30\xba\xee\x91\xd1\x3a\xb1\x47\x8b\x8d\x5f\x44\xd0\xcb\x65\x79\xc4\x34\xd8\xa5\x9d\x69\xe7\xad\xdf\xa5\x56\xed\x45\x84\x5a\x8f\xc8\x23\xed\x15\xbd\xac\x98\x37\x3d\xf3\x57\x5e\x26\x63\xf5\x58\xf3\x25\xac\x42\xce\x29\xa2\x9c\x09\x07\x04\x4a\x84\x90\x06\xa8\xc2\x72\x36\x78\x66\x31\xd1\x1f\xab\xda\xbe\x3c\x96\x75\xc3\xb2\xc8\x17\x40\x86\xba\x81\x3c\xd2\x3b\x88\xad\xbe\x03\x36\x07\x98\x4c\x60\x54\x8f\xb5\x14\x29\xd9\x6b\x04\x93\xa1\xd3\x14\x0c\x49\x73\x84\x8c\x68\x50\xb8\x41\x85\x82\xa2\xcd\x0e\x46\x76\x1e\x30\x10\xc1\x5c\xcf\x27\x93\x6a\xf5\x80\xc0\x24\x94\x5e\x1d\x88\x30\xe5\x66\x2a\x8b\x27\x30\x99\xd4\x2d\xda\xf7\xc0\x85\x36\x48\xd8\xb8\xdc\xd2\xd4\xbe\x2a\x30\x19\x96\x94\xde\xd1\x52\xf6\xf1\xe4\xa1\x3a\x88\xee\x1f\x09\xf5\x15\x94\x6e\x75\x73\xcc\x19\xa4\x7c\xcb\x85\x81\x78\xb1\x82\x78\x3d\x9f\x8f\xab\xca\x2b\xa9\x18\xaa\x2b\xe0\xc2\xe0\x16\x95\x83\xd6\xd3\x3e\xa1\xb9\xd4\xc8\x12\x62\xc0\xf0\x1d\x6a\x43\x76\x05\x1c\xb8\xc9\xe4\xbe\x5e\x81\x3f\x52\xa0\xb3\x55\x6e\x36\xa8\x8e\xb6\x4d\x89\xc6\xe6\xcc\x9e\x22\x58\x46\xdf\xa2\x65\x14\x4f\xa3\x7b\xaf\x4b\x43\xce\x46\x36\x51\xe9\xd1\x29\x34\x95\xa7\x2e\xc9\xae\xa4\xf6\xcb\xad\xba\xa2\x3a\x8b\xe2\x17\xae\xff\x14\xfd\xc2\xd3\xa3\xbb\x3a\x18\xd7\x89\xc6\x3c\x47\x05\xa9\x94\x39\x12\x51\x63\x85\xe2\x14\x13\xf1\xbc\xd1\x5e\x63\xad\xb5\x8a\xc3\xb9\xcd\xb6\x02\x2f\x38\x5d\xc4\xf7\xab\xe5\xcd\x2c\x5e\x79\x62\x9a\x58\x8e\x27\x34\x43\xfa\x00\xd3\x1f\xd1\xf4\x0e\x86\x43\xfb\x2e\xbe\x7c\x86\x0f\xa3\x51\x08\x9f\x8f\xa3\xf1\xf7\x53\xc7\xf2\x40\xce\x96\xc1\x4e\x0b\xc7\xfd\x5a\x69\x3d\x54\x9f\x9f\xe8\x2c\xbe\x8d\x7e\xd7\xbc\x46\xb1\x24\x7d\x4a\xec\xd0\xc3\x22\xf6\x3d\xdf\xf5\xfd\x2c\xfe\x0e\xa9\x51\x88\x30\x74\x1e\x89\xf5\xd9\x38\xc2\x5d\x5d\x44\x30\x73\x73\x6d\xbd\xbc\x4e\xf2\x43\xc8\xbb\x8f\x25\xa8\x43\xb0\x78\x37\x76\xbd\xec\xc1\xac\x6f\xb3\x35\x7d\x73\x29\x1f\xf6\xc5\x49\x4e\x34\xb9\x3b\xca\x5d\x10\xae\x92\x72\x94\x9e\xc0\xde\x4a\xf9\xb8\x13\xf2\x71\x67\x7a\x5b\xed\xd7\xf1\xec\xd7\xba\xab\x82\xb3\x90\xc6\xbe\xaf\xcb\xb8\xf9\x92\x1c\x3f\xe3\x89\xc7\xeb\x51\x7f\xfc\xdf\xa5\xe7\x67\xd3\x33\x74\xc6\xdf\x4d\x7f\x03\x00\x00\xff\xff\xf1\x72\xe9\x29\xf2\x0e\x00\x00")

func migrations32_drop_exp_history_tablesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations32_drop_exp_history_tablesSql,
		"migrations/32_drop_exp_history_tables.sql",
	)
}

func migrations32_drop_exp_history_tablesSql() (*asset, error) {
	bytes, err := migrations32_drop_exp_history_tablesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/32_drop_exp_history_tables.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1d, 0xf2, 0xbb, 0xf, 0x6d, 0x53, 0xdf, 0x60, 0x63, 0x87, 0x3c, 0xe9, 0xdb, 0x18, 0x23, 0x51, 0x40, 0xa4, 0x38, 0xdf, 0xb2, 0x9a, 0xb, 0xa0, 0xe6, 0xbe, 0x91, 0x3b, 0x41, 0x53, 0x69, 0x9d}}
	return a, nil
}

var _migrations33_remove_unusedSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x6f\xe2\x30\x10\x85\xef\xf9\x15\x73\x04\xed\x72\x5b\xed\x85\x93\x49\x66\x59\xab\xc1\x50\xc7\xa9\xca\xc9\x32\x89\x4b\x23\x91\x18\xc5\x46\x85\x7f\x5f\x99\x50\xea\xd0\xb4\xc2\x27\xdb\xf3\xe9\xbd\x79\xa3\x99\x4c\xe0\x57\x5d\x6d\x5b\xe5\x34\xe4\xfb\x28\x4a\xf8\x72\x05\x82\xcc\x52\x04\x65\xad\x76\xd2\x3a\xe5\x2c\x14\xca\x16\xaa\xd4\xd3\x0b\x40\x59\x82\xcf\xa0\x8f\x7b\x19\x40\x72\x73\x92\x85\xb9\x85\xaa\xa6\xd4\x47\xf9\x5a\x59\x67\xda\x93\x74\xad\x6a\xac\x2a\x5c\x65\x1a\x2b\x4d\x23\xab\xf2\x27\x7a\xa7\xcb\xad\x6e\x07\xc1\xce\xf7\xd3\x31\xcc\x91\x98\xb7\x26\x8a\x62\x8e\x44\xe0\x40\x96\x51\x04\x00\x50\x95\xd0\x3b\x33\x3a\xa7\x4c\x74\xf7\x15\xa7\x0b\xc2\xd7\xf0\x80\x6b\xe0\xf8\x0f\x39\xb2\x18\x33\xf8\x68\xeb\x2c\x66\x61\xc9\x20\xc1\x14\x05\x42\x4c\xb2\x98\x24\xe8\x7f\xf2\x55\xe2\x5d\x39\x66\x82\xd3\x58\xfc\x3e\x7b\xa9\xda\x1c\x1a\x37\xec\xc5\x96\x02\x58\x9e\xa6\x1d\xd9\x1c\x6a\xa9\x8a\xc2\xe3\xd6\xbf\x29\x13\x38\x47\x3e\x40\xbe\xec\xd4\xd6\x06\xfd\x67\x0b\x92\xa6\x17\xd5\x3e\xe9\x4c\xbd\x0b\x93\x3e\x11\x1e\xff\x27\x7c\xf4\xf7\xcf\xf8\x4a\x46\xe3\xe9\x75\x62\x03\x03\xf6\xc9\x6e\xd2\xe7\x19\x65\x73\xd8\xb8\x56\x6b\x18\x75\xb0\x27\xbf\xe8\x7c\xb3\x24\x5e\xf1\xa6\x74\x87\x64\xce\xe8\x63\x8e\x77\x6e\x56\xd8\x74\x58\xed\xfb\x54\xe5\x7d\xfa\xbd\x5d\x0c\xa5\x2f\x85\x01\xd5\xf7\x00\x00\x00\xff\xff\x0e\x3f\x2c\x91\x5c\x03\x00\x00")

func migrations33_remove_unusedSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations33_remove_unusedSql,
		"migrations/33_remove_unused.sql",
	)
}

func migrations33_remove_unusedSql() (*asset, error) {
	bytes, err := migrations33_remove_unusedSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/33_remove_unused.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5d, 0x11, 0x54, 0x91, 0x3f, 0x65, 0x72, 0x25, 0x53, 0xa7, 0xcf, 0x33, 0xdf, 0x79, 0x48, 0x4a, 0xda, 0xa8, 0x5e, 0x86, 0xff, 0xf1, 0xd7, 0x69, 0xa2, 0xc, 0x85, 0x7f, 0xbf, 0x23, 0xc2, 0xd9}}
	return a, nil
}

var _migrations34_fee_bump_transactionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\xc1\x4f\xc2\x30\x18\xc5\xef\xfd\x2b\xbe\x23\x44\xb9\x19\x12\xb3\x13\xb2\x46\x49\x66\x47\xc6\x16\x35\xc6\x34\xdd\xfc\xe8\x7a\xa0\x33\x6d\x11\xf7\xdf\x1b\x98\x64\xc5\x95\xe0\xc1\x73\x7f\xdf\x7b\xaf\x2f\x6f\x32\x81\xab\x8d\x92\x46\x38\x84\xe2\x83\x90\x59\x92\xd3\x0c\xf2\xd9\x5d\x42\xa1\x56\xd6\x35\xa6\xe5\xce\x08\x6d\x45\xe5\x54\xa3\x2d\x01\x00\xe8\xa0\x79\x9a\x14\x8f\x0c\xd6\x88\xbc\xaa\x85\x91\xf8\x0e\xf9\xcb\x92\x42\xa9\xa4\xd2\xee\x7a\x48\x6e\xc4\x17\x5f\x23\x06\xa8\x38\x06\xa5\x35\x1a\xdf\x8a\xd7\xc2\xd6\xb0\x57\x16\x95\x43\x03\x9f\xc2\xb4\x4a\xcb\xd1\xf4\x66\xdc\x5f\xed\xcd\x45\x55\x35\x5b\xed\x2e\xa1\x9d\x81\x55\x52\x0b\xb7\x35\x68\x03\xfc\xed\x74\xfc\xfa\xd6\x5f\x68\xdc\xf1\x63\xe6\x2e\x6e\x44\xc8\x3c\xa3\xb3\x9c\xc2\x82\xc5\xf4\x19\xca\x96\x77\xb2\x87\xac\x29\x0b\x56\x06\xc5\x6a\xc1\xee\xa1\x74\x06\x11\x46\xe1\x7f\x8e\xe1\xe9\x81\x66\xf4\x5c\x0b\x8b\x15\xb0\x34\x07\x56\x24\x49\x34\x48\xe0\x77\xf0\xa7\x08\xde\xc1\xd1\xd7\xd7\x38\x31\x23\xfe\x40\xe2\x66\xa7\x09\x89\xb3\x74\x19\xfa\x7f\xf4\xeb\xc5\xd3\x8c\xfe\x65\x58\x4a\x3b\x94\x68\x2e\x2d\xeb\x04\x3b\x44\xfa\xa1\xc2\xe5\x0e\x39\x2f\xf8\x39\x91\x7e\x46\x43\xc2\x9b\x4d\xf4\x1d\x00\x00\xff\xff\x12\x9d\xf6\x27\x5f\x03\x00\x00")

func migrations34_fee_bump_transactionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations34_fee_bump_transactionsSql,
		"migrations/34_fee_bump_transactions.sql",
	)
}

func migrations34_fee_bump_transactionsSql() (*asset, error) {
	bytes, err := migrations34_fee_bump_transactionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/34_fee_bump_transactions.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0x2a, 0xe3, 0xb, 0x10, 0x90, 0x5a, 0x2b, 0x39, 0x76, 0x69, 0xe, 0x93, 0xcd, 0x5f, 0x61, 0xd1, 0x9a, 0xf2, 0xec, 0x95, 0x46, 0xc9, 0x79, 0x68, 0xd, 0xa9, 0x25, 0x4, 0xaf, 0x2a, 0x46}}
	return a, nil
}

var _migrations35_drop_participant_idSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xce\x31\x0e\xc2\x30\x0c\x46\xe1\x3d\xa7\xf8\x77\xd4\x13\x30\x05\xd2\x2d\x50\x54\xb5\x73\x65\x95\xa8\x78\xc0\x89\x1c\x4b\x88\xdb\x33\xc2\x90\x01\x38\xc0\x7b\xfa\xba\x0e\xbb\x3b\x6f\x4a\x96\x30\x17\xe7\x7c\x9c\xfa\x11\x93\x3f\xc4\x1e\x37\xae\x96\xf5\xb9\xe4\x92\x94\x8c\xb3\x2c\x85\xd4\x78\xe5\x42\x62\xd5\x01\x40\x18\x87\x0b\x8e\x43\x9c\x4f\x67\xf0\x75\xdf\xee\x4d\x49\x2a\xad\x5f\x1e\x3e\x45\x21\x3f\xe4\x67\x93\x0f\xe1\x3d\x04\x8b\xa5\x2d\xe9\x3f\xb4\xf6\xe8\x15\x00\x00\xff\xff\xfa\x9c\x4a\x38\x32\x01\x00\x00")

func migrations35_drop_participant_idSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations35_drop_participant_idSql,
		"migrations/35_drop_participant_id.sql",
	)
}

func migrations35_drop_participant_idSql() (*asset, error) {
	bytes, err := migrations35_drop_participant_idSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/35_drop_participant_id.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0x7, 0x95, 0xf6, 0xca, 0xd3, 0x76, 0xfd, 0x68, 0x9b, 0xc5, 0x95, 0xb7, 0x43, 0x56, 0x2c, 0xbe, 0x33, 0x3d, 0xee, 0x33, 0xb7, 0xec, 0xf8, 0x18, 0xd6, 0x8a, 0xf3, 0x31, 0x37, 0x8f, 0x62}}
	return a, nil
}

var _migrations36_deleted_offersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x41\x6e\xb3\x30\x10\x85\xf7\x3e\xc5\x2c\x83\x7e\x72\x02\xf4\x2f\x48\xec\x54\x91\x08\x54\xd4\x48\xdd\x59\x50\x0f\xd4\x92\x03\x91\xed\x34\xca\xed\xab\x24\x40\x29\x85\x6e\xca\xd2\x1e\xcd\x37\xef\xcd\x9b\xf5\x1a\xfe\x1d\x55\x65\x72\x87\x90\x9d\x08\x09\x23\xce\x52\xe0\xe1\x26\x62\xd0\x94\x25\x1a\x0b\x21\xa5\x20\x51\xa3\x43\x09\x45\xd3\x68\xcc\x6b\xa0\x6c\x17\x66\x11\x87\x32\xd7\x16\x03\x42\xb6\x29\x0b\x39\x83\x7d\x4c\xd9\x2b\x14\x68\x9d\xb8\x37\x43\x12\x77\x94\xec\x65\x1f\x3f\xc1\x86\xa7\x8c\xc1\xca\xa2\xd6\xaa\xae\x44\x6e\x2d\x3a\x1f\x8a\xf3\x75\xf0\x6a\x67\xf9\x70\x32\xea\x0d\xbd\xe0\x3b\x5c\xab\x0f\x14\x2d\x73\x86\xde\x03\x74\x6e\x9d\x38\x36\x52\x95\x0a\xa5\xd0\x28\x2b\x34\x5e\x40\x08\x4d\x93\xe7\x16\xf7\xe8\x17\xc5\x55\xdc\x34\xa1\xf1\x47\x3f\x03\x5d\x5f\x85\xa1\xde\xb1\xf9\x31\x70\x5a\xe4\xea\x51\x14\x4a\xf6\x7e\xc7\x46\x67\x74\xfc\xc2\xfb\xb9\xc3\x79\xe6\xd0\xc2\x0c\x72\x32\x95\xdb\xfa\x86\x37\x43\x9b\x4b\x4d\x08\x65\x11\xe3\x0c\x76\x69\x72\xe8\x48\x97\x77\x34\xd8\xdf\xcd\x7f\x70\xe6\x8c\xcb\xaf\x7e\xe2\x5c\xef\x13\xb6\x49\x94\x1d\xe2\x6e\xfc\x5f\x33\x5a\x30\x9a\xc5\x12\xf1\x02\xf2\x19\x00\x00\xff\xff\xfa\xd2\x27\x51\xbc\x03\x00\x00")

func migrations36_deleted_offersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations36_deleted_offersSql,
		"migrations/36_deleted_offers.sql",
	)
}

func migrations36_deleted_offersSql() (*asset, error) {
	bytes, err := migrations36_deleted_offersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/36_deleted_offers.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8c, 0xf8, 0x3f, 0x36, 0xd9, 0x93, 0x75, 0x16, 0xab, 0x80, 0xc6, 0x1d, 0xc6, 0x4a, 0x4e, 0x0, 0x2, 0xa9, 0xac, 0x37, 0x1c, 0x6a, 0x4f, 0x53, 0xf0, 0xe8, 0x78, 0x41, 0xeb, 0xd2, 0x85, 0x3}}
	return a, nil
}

var _migrations37_add_tx_set_operation_count_to_ledgersSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcd\x31\xae\x02\x21\x10\x06\xe0\x9e\x53\xfc\xfd\xcb\x9e\x60\x2b\x9e\x60\x35\xee\x9a\x0d\xd4\x64\xa3\x13\x24\x51\xd8\x0c\x63\xd4\xdb\xdb\xda\xe8\x05\xbe\x6f\x18\xf0\x77\x2b\x59\x56\x65\xc4\xcd\x18\x4b\xc1\x2f\x08\xf6\x9f\x3c\x2e\xa5\x6b\x93\x57\xba\xf2\x39\xb3\x74\x58\xe7\xa0\xcf\xd4\x59\x53\xdb\x58\x56\x2d\xad\xa6\x53\xbb\x57\x45\xa9\xca\x99\x05\xce\xef\x6d\xa4\x80\x29\x12\x8d\xc6\x7c\xea\xae\x3d\xea\x6f\xdf\x2d\xf3\x11\xbb\x99\xe2\x61\xfa\xf2\x8c\xe6\x1d\x00\x00\xff\xff\x32\x43\x33\x1d\xb0\x00\x00\x00")

func migrations37_add_tx_set_operation_count_to_ledgersSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations37_add_tx_set_operation_count_to_ledgersSql,
		"migrations/37_add_tx_set_operation_count_to_ledgers.sql",
	)
}

func migrations37_add_tx_set_operation_count_to_ledgersSql() (*asset, error) {
	bytes, err := migrations37_add_tx_set_operation_count_to_ledgersSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/37_add_tx_set_operation_count_to_ledgers.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc2, 0xf1, 0x5, 0x98, 0x10, 0xbb, 0xd8, 0x0, 0x7d, 0xda, 0xff, 0x9a, 0x91, 0xc8, 0xea, 0x31, 0x96, 0xba, 0xfb, 0x44, 0x84, 0xbe, 0x41, 0xc3, 0xac, 0x15, 0x42, 0x4c, 0xc0, 0x1e, 0xeb, 0xe8}}
	return a, nil
}

var _migrations38_add_constraintsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\x5d\x6f\xdb\x2c\x14\xbe\xef\xaf\xb0\x7a\xf5\xbe\x9a\x2a\xed\xbe\x5a\xa5\xac\xa9\xb4\x6a\x55\x3b\x75\xd9\x6e\x11\xb1\x8f\x13\x24\x0c\x1e\xe0\xa6\xdd\xaf\x9f\x92\xd8\x2e\x18\x03\x36\x66\xbb\xe4\xe0\xe7\x79\xcc\xc7\xf9\xe2\xea\x2a\xfb\x50\x91\x9d\xc0\x0a\xb2\x1f\xf5\xc5\xc5\xea\x61\x73\xf7\x9c\x6d\x56\x9f\x1f\xee\xb2\x3d\x91\x8a\x8b\x37\xa4\x04\x66\x12\xe7\x8a\x70\x26\xb3\xd5\x7a\x9d\xdd\x3e\x3d\x7e\xdf\x3c\xaf\xee\x1f\x37\xd9\x0b\xa6\xa4\x40\x14\x8a\x1d\x08\x24\xe1\x57\x03\x2c\x87\xec\xf6\xcb\xdd\xed\xd7\xec\xbf\xa1\xf9\x26\xfb\xf8\x7f\xf6\xf8\xb4\xc9\x7e\xae\x1e\xee\xd7\xd7\x91\x62\xb8\xae\x29\xc9\xf1\xf1\x0b\xc4\x45\x01\xa2\x93\xb3\x27\x6e\x3e\xa5\x51\xcc\x73\xde\x30\x65\xad\xcf\xb2\x27\xd2\xab\xf0\x2b\x2a\xa1\x97\xe9\x86\x69\xb6\x8f\xd7\x20\xce\x7b\x74\xfa\xf9\x4e\x64\x68\x4e\xb4\x94\x12\x00\xe5\x7b\x2c\x76\x50\x74\x4a\xba\x29\xcd\x92\x18\x1c\x86\x7b\xa6\x9b\x86\x22\x86\x0a\x2f\x4b\x10\xae\x73\xaf\xf4\x1d\x6a\x47\xde\x8d\xf1\xb1\xd5\x82\xe4\xc0\x3a\xb6\x76\xb4\x8c\xad\x30\xd8\x8a\x85\x6c\x06\x59\x3c\x17\xc5\x52\xa1\x8a\x17\xa4\x24\xd0\x85\x86\x3e\x22\x8c\xcd\x79\xcf\x47\x89\x46\x2a\x44\x09\x03\x87\xdc\x16\x53\xac\xf9\x64\x37\xf4\xfe\x7e\x90\xf4\xfd\x03\x44\x49\x45\xfa\x3b\x60\xd9\x97\xc9\x6c\x9b\x37\xc2\x76\x88\x12\xbc\x25\x94\x28\x02\xb2\x5f\x86\x3d\xb3\x4c\x4a\x02\xa5\x0e\xad\xb1\xa9\x65\x62\x69\xaf\x80\x16\x08\x0a\x97\xe2\xe9\xce\x22\xd3\xbb\x50\xc0\xbd\xa6\xf3\x9a\x7e\x86\x02\x8e\x36\x85\xd7\x48\x5c\x97\xa7\xd1\xa5\xcd\x3a\x4a\xdb\x47\xea\xbf\x90\x1f\x47\x05\xcf\x67\xe4\xbc\x57\x66\x4e\x9c\x95\xec\xbd\xcc\x5a\xdc\x37\x53\x95\x3d\x31\xe9\x38\xbc\x62\x29\xb3\xa2\x7f\x55\x5c\x61\x8a\x72\x4e\x58\xef\x7f\xba\x69\xb9\xc0\x31\xbd\xd6\x9c\x53\x3d\xdd\x9e\xc6\xcb\xa9\xb7\x58\x82\x9e\x64\xfb\x71\x22\x6a\x01\x12\xc4\x8b\x49\xdf\xd9\x96\x4b\x1c\xcb\x01\xf5\x8a\x24\x28\x24\xc9\x6f\xa3\xba\xd2\xcd\xcb\x85\x64\x93\xe7\x20\x65\xd9\x50\xf7\x1d\xf6\x7e\x93\xe0\x12\x60\x42\xc1\xe3\x42\xce\xf9\x69\x11\x01\xca\x12\x72\x95\x2e\xb4\xc1\x6b\x8d\xb0\x3c\x1d\x81\xc2\x2e\x5e\xd6\x54\x5d\x25\xde\xbb\x8e\x61\xf3\x6b\x74\x9f\x21\x49\x76\xcc\xb9\x71\x07\x20\xbb\x7d\xbf\x4d\xed\x68\x22\x71\x81\x15\xfe\x17\xf9\xb0\x5f\x70\xb2\x7a\x28\xc0\x98\xac\x4a\xf1\xeb\xa4\x2c\x51\xfc\x4a\x8b\xcf\x63\xce\xa2\xce\xf9\xf0\x78\x7d\xb7\xef\x2a\x43\xf3\x82\xc5\x1c\x7d\x40\x36\x5b\x60\x4a\x68\x3b\x36\xb0\x2e\xe0\xaf\xb0\x54\x20\x06\x9e\x61\x1a\x17\xb0\xab\xbd\x00\xb9\xe7\xb4\x40\x94\x1f\xfa\x8c\x68\x18\x93\xb0\x57\x50\x90\xa6\xb2\x05\x5a\x7b\x12\x8d\x3d\xd9\xed\x6d\x85\x93\xd5\x0e\x21\xfa\xcb\xcb\x9a\x1f\xd8\x84\xb7\x97\xf5\xf3\xd3\xb7\xe0\xe3\xcb\x84\x26\x7a\x9c\xc7\x2a\x0f\xe3\x99\x06\xef\x22\xd1\x44\x6d\x07\x1f\x8d\x1f\x94\x6f\xd1\x3c\xda\x93\x45\x34\x87\xf6\x22\x31\xfe\x04\xe1\xd8\xcb\xca\xfe\x73\x2f\xe0\xfc\xb0\x30\x17\x50\xcc\x05\xcc\xf8\x7e\x2c\xa2\x7a\xba\xfc\x71\x92\x36\x8f\xb9\x1b\xd1\x71\xd8\xb0\x61\x9f\x8b\xb7\x33\xdc\x5c\x86\x91\xd4\x35\x97\x62\xc2\x06\x0e\x7a\x4e\xcf\xc1\x21\xe6\xed\x56\x7d\x48\xf7\xe5\x77\x23\xdb\x48\x12\xea\x64\x27\x87\x24\x6f\x2d\xec\x3a\x01\x5f\x18\xf2\x63\xad\x0a\x39\x86\x64\x52\x18\x0a\xfc\xc7\x7b\x8f\x18\x03\xef\x9a\xc0\x18\x6c\xd7\xe5\x45\x63\xdb\x16\x2e\x06\x3f\x68\xce\x62\x28\x7c\x9d\x56\xd4\x56\x3a\x5a\xa7\x40\xab\x34\xdd\x3b\x86\xcd\x90\x23\x9d\x68\x9d\x4f\xa8\xd3\x19\x67\x38\xd7\x6e\xde\x66\x26\x3a\x1c\xf5\x15\xd3\x8c\x60\x1e\xc2\x04\x22\x71\x00\x1e\x0c\xc3\x01\xfc\xf8\xa2\x67\xfd\x80\x51\xf1\xcf\xc2\x9a\xc5\xfc\x2c\xa8\x51\xa8\xcf\x42\x1a\x45\x78\x24\xf2\x5c\x5d\x47\x82\x8f\x85\xf3\xf5\xc5\x9f\x00\x00\x00\xff\xff\x73\x20\xdd\xff\xa2\x1c\x00\x00")

func migrations38_add_constraintsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations38_add_constraintsSql,
		"migrations/38_add_constraints.sql",
	)
}

func migrations38_add_constraintsSql() (*asset, error) {
	bytes, err := migrations38_add_constraintsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/38_add_constraints.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x99, 0x8d, 0xfe, 0xb4, 0x31, 0xeb, 0xc7, 0x56, 0x68, 0x95, 0x4f, 0xa3, 0x3e, 0x5d, 0x18, 0xf, 0x6d, 0x90, 0xc3, 0x6d, 0xf4, 0xd7, 0x75, 0x9a, 0xfb, 0x7e, 0x63, 0x18, 0xb5, 0xc5, 0xc}}
	return a, nil
}

var _migrations39_claimable_balancesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x4f\xbb\x40\x10\xc5\xef\x7c\x8a\x77\x84\xfc\x4b\xf2\x3f\x18\x2f\x4d\x4c\x5a\xd8\x28\x69\xa5\x0d\xd2\xa4\x3d\x6d\x16\x76\xc5\x31\xb0\x4b\xba\x6b\xd4\x6f\x6f\x0a\xad\xd5\x4a\xb5\x27\x12\xde\x9b\xdf\xce\xbc\x99\x30\xc4\xbf\x86\xaa\xad\x70\x0a\xab\xd6\xf3\xa2\x8c\x4d\x72\x86\x7c\x32\x9d\x33\x94\xb5\xa0\x46\x14\xb5\xe2\x85\xa8\x85\x2e\x95\x85\xef\x01\x00\x49\xe4\x6c\x9d\x23\x5d\xe4\x48\x57\xf3\xf9\x08\x61\x88\xe8\xe0\x9e\xf6\xe6\x24\x06\x69\x14\xc2\xaa\xeb\xab\xae\xaa\xc7\x69\x67\xf1\x6c\x8d\x2e\x8e\xd5\x9d\x2a\xac\x55\x0e\x4e\xbd\xb9\x53\xa1\x31\x2f\xda\xa1\xa0\x8a\xf4\x51\x43\x74\xc7\xa2\x19\xfc\xbd\x7a\x83\xff\x41\x6f\xb7\xad\xd1\xd6\x6c\xbb\x06\xfb\x3f\xb5\xb0\x8e\x37\x46\xd2\x23\x29\xc9\x6b\x25\x2b\xb5\x05\x69\xa7\x76\xdf\xef\x6f\x2d\xb3\xe4\x7e\x92\x6d\x30\x63\x1b\xf8\x24\x03\x2f\x18\x7f\x66\x92\xa4\x31\x5b\x0f\x64\xc2\x8b\x77\xde\x37\xbf\x48\x87\x22\x5b\x3d\x24\xe9\x2d\xa6\x79\xc6\x98\xdf\xf9\x82\xf1\x25\xc8\xc3\x1c\x7f\x43\xf7\xce\x33\xd8\x1f\xe0\xe3\x1a\x7e\x43\x57\xa4\xfd\x93\x85\xf1\x56\xb8\x27\x6e\x5a\x7b\xd9\x00\x43\xb1\x73\xa1\x25\x27\x79\xc1\x50\x43\xd5\x23\x90\xdc\x2d\xe4\xeb\xd1\xc6\xe6\x55\x7b\x5e\x9c\x2d\x96\xe7\x8f\xb6\x14\xb6\x14\x52\x8d\xbd\x8f\x00\x00\x00\xff\xff\x76\x45\x17\x78\xee\x02\x00\x00")

func migrations39_claimable_balancesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations39_claimable_balancesSql,
		"migrations/39_claimable_balances.sql",
	)
}

func migrations39_claimable_balancesSql() (*asset, error) {
	bytes, err := migrations39_claimable_balancesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/39_claimable_balances.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x58, 0xfd, 0xd0, 0xdd, 0xbf, 0xf, 0xb8, 0x78, 0xe3, 0x2, 0xe6, 0xa8, 0x94, 0x11, 0x15, 0x24, 0x35, 0xe0, 0x9c, 0xc9, 0x34, 0x36, 0xa3, 0x38, 0xdb, 0xb7, 0x86, 0xd0, 0xf2, 0xbe, 0x77, 0x49}}
	return a, nil
}

var _migrations39_history_trades_indicesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xb1\x0a\xc2\x40\x0c\x80\xe1\x3d\x4f\x11\x3a\x29\xda\x27\xe8\xa4\xf6\x90\x2e\xad\xd4\x16\xdc\x8e\xd3\x0b\x36\x83\xcd\x91\x8b\x88\x6f\x2f\x08\x42\x07\xd7\x1f\x7e\xf8\xca\x12\x37\x0f\xbe\x6b\x30\xc2\x31\x01\x1c\x7a\xb7\x1b\x1c\x36\x6d\xed\x2e\x38\x99\x46\x9f\x02\xab\x4f\x1c\xb1\x6b\x71\xe2\x6c\xa2\x6f\x6f\x1a\x22\x65\x1c\xcf\x4d\x7b\xc4\xfd\xd0\x3b\xb7\xba\x86\x4c\x3e\xe4\x4c\xe6\x39\x6e\xf1\x26\xcf\xd9\x48\x17\xe5\xf7\x4a\x22\x0d\xc6\x32\x7f\x6b\x21\x1a\x49\x8b\x75\x05\xb0\xa4\xd4\xf2\x9a\x01\xea\xbe\x3b\xfd\xa3\x54\xf0\x09\x00\x00\xff\xff\xb2\xf0\x3e\xfe\xb7\x00\x00\x00")

func migrations39_history_trades_indicesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations39_history_trades_indicesSql,
		"migrations/39_history_trades_indices.sql",
	)
}

func migrations39_history_trades_indicesSql() (*asset, error) {
	bytes, err := migrations39_history_trades_indicesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/39_history_trades_indices.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x50, 0x44, 0xfd, 0xa3, 0xc4, 0xc9, 0x68, 0x24, 0xb5, 0xf7, 0xea, 0xf3, 0x46, 0xb9, 0x2, 0xc1, 0x2d, 0xe7, 0xce, 0xd3, 0x42, 0x93, 0x2e, 0x87, 0x22, 0xca, 0xad, 0x97, 0xa9, 0xa, 0x6a, 0xe3}}
	return a, nil
}

var _migrations3_use_sequence_in_history_accountsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x4d\x6b\xb3\x40\x14\x85\xf7\xf3\x2b\xce\x2e\xca\xfb\x66\x91\x6d\x5c\x4d\xc6\x1b\x22\x8c\x63\x3b\x5e\xdb\x64\x25\xa2\x43\x3a\x90\x6a\xeb\xd8\xaf\x7f\x5f\x48\xd3\x0f\x08\x6d\xa1\xcb\x73\x78\xe0\x39\xdc\x3b\x9f\xe3\xdf\xad\xdf\x8f\xcd\xe4\x50\xdd\x09\x65\x49\x32\xa1\xa4\xcb\x8a\x8c\x22\xdc\xf8\x30\x0d\xe3\x4b\xdd\xb4\xed\xf0\xd0\x4f\xa1\xf6\x5d\x1d\xdc\xbd\x00\x80\x92\xa5\x65\x5c\x67\xbc\xc1\xe2\x58\x64\x46\x59\xca\xc9\x30\x56\xbb\x53\x65\x0a\xe4\x99\xb9\x92\xba\xa2\x8f\x2c\xb7\x9f\x59\x49\xb5\x21\x2c\x12\x51\x92\x26\xc5\x08\x6e\x7a\x6c\x0e\xd1\xec\x1b\xef\xec\x3f\xa2\x13\x99\xcb\x6d\xe4\xbb\x18\x6b\x5b\xe4\x67\x33\xe3\x38\x11\x52\x33\x59\xb0\x5c\x69\x42\x61\xf4\xee\x0c\xc2\x1b\xa1\x0a\x5d\xe5\x06\xbe\x43\x49\x8c\x94\xd6\xb2\xd2\x8c\xde\x3d\xff\xbc\x64\xb9\x1c\xdd\xbe\x3d\x34\x21\xc4\x89\x10\x5f\xcf\x98\x0e\x4f\xfd\x1f\xec\xa9\x2d\x2e\xde\xf5\x89\x38\xa6\xdf\xde\x90\x88\xd7\x00\x00\x00\xff\xff\x55\xe2\xdd\x2c\xbf\x01\x00\x00")

func migrations3_use_sequence_in_history_accountsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations3_use_sequence_in_history_accountsSql,
		"migrations/3_use_sequence_in_history_accounts.sql",
	)
}

func migrations3_use_sequence_in_history_accountsSql() (*asset, error) {
	bytes, err := migrations3_use_sequence_in_history_accountsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/3_use_sequence_in_history_accounts.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5, 0xcc, 0xcc, 0x51, 0xec, 0x12, 0x8, 0x85, 0x4d, 0x85, 0x25, 0x32, 0x18, 0x23, 0x54, 0xc5, 0x10, 0x42, 0x5b, 0x51, 0x28, 0xe4, 0x9, 0xa2, 0x56, 0xdc, 0xb5, 0xf8, 0x41, 0x1b, 0x28, 0x8}}
	return a, nil
}

var _migrations40_fix_inner_tx_max_fee_constraintSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8f\xc1\x8b\x82\x40\x1c\x85\xef\xf3\x57\xbc\xe3\x2e\xcb\x80\x77\x71\x61\xd6\x11\x56\x12\x0d\x9b\xba\xca\x64\x63\x0e\xe4\x4f\x19\x27\xb3\xff\xbe\x4b\x41\x1d\xa2\x43\x1d\x1f\x3c\xf8\xbe\x8f\x73\xfc\x74\x76\xef\xb4\x37\x58\x0f\x8c\x89\x4c\x25\x25\x94\xf8\xcb\x12\xb4\x76\xf4\xbd\x3b\x57\xde\x69\x1a\x75\xed\x6d\x4f\x23\x64\x59\x2c\x11\x17\xf9\x4a\x95\x22\xcd\x15\x26\x7d\xb0\xbb\xaa\xd3\x73\xd5\x18\x13\x32\xce\x91\x12\x19\x07\x3f\xc3\x12\x1a\x63\xb0\x3d\x76\x03\x6a\x4d\x68\xf5\x64\x70\x7d\x46\xc1\x6b\x94\x90\xf2\x29\x09\xf1\x7f\x12\x2f\xf0\x75\x9b\xbf\x11\x82\x6f\xe4\x85\xc2\x46\x64\xa9\x0c\x19\xbb\x2f\x93\xfd\x89\xde\x6f\xfb\xac\xf0\xa3\xef\x25\x00\x00\xff\xff\x59\x2c\x3c\x0b\x88\x01\x00\x00")

func migrations40_fix_inner_tx_max_fee_constraintSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations40_fix_inner_tx_max_fee_constraintSql,
		"migrations/40_fix_inner_tx_max_fee_constraint.sql",
	)
}

func migrations40_fix_inner_tx_max_fee_constraintSql() (*asset, error) {
	bytes, err := migrations40_fix_inner_tx_max_fee_constraintSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/40_fix_inner_tx_max_fee_constraint.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9d, 0x58, 0xe3, 0x4c, 0x97, 0xa8, 0x17, 0x34, 0xca, 0x20, 0x47, 0x8c, 0x78, 0x9b, 0x81, 0x52, 0x3d, 0xde, 0xc8, 0xf1, 0x13, 0x7a, 0x46, 0xd1, 0xa0, 0x38, 0x43, 0x63, 0xcc, 0xc6, 0xd, 0xa5}}
	return a, nil
}

var _migrations41_add_sponsor_to_state_tablesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xd1\x4a\x87\x30\x14\xc6\xef\x7d\x8a\x73\x59\xc4\xff\x09\xbc\x9a\xed\x10\x82\x68\xac\x09\xde\x8d\x65\x2a\x42\x6d\xb2\x4d\xa2\xb7\x8f\x70\xab\x25\xad\xd6\xf5\x7e\xe7\xfc\xf6\x1d\xbe\xcb\x05\x6e\x5e\xd6\xc5\x48\x37\x41\xbf\x15\x05\x69\x38\x32\xe0\xa4\x6a\x10\xe4\x38\xea\x5d\x39\x0b\x84\x52\xb0\x9b\x56\x56\x1b\xe0\x38\xf0\xb2\xb8\x65\x48\x38\x42\xdd\x52\x1c\x3e\x39\xf1\xf8\x26\x02\xd6\xb5\x5f\xe3\xfd\x43\xdd\xde\x41\xc5\x19\xe2\x95\x7f\xbf\x2e\x7f\x56\x89\x27\xe9\x64\xb6\xef\x03\x4e\x48\x8f\x45\xff\x31\xdb\x75\x51\x93\xc9\x0f\xeb\xf9\x94\x3f\xac\xcb\xf8\x82\x33\xbb\x75\xe2\x79\x55\xd3\x9f\xf6\x08\x3d\x89\xe3\x25\x19\x4e\x3d\xcf\x19\x61\x0f\xea\x64\xf2\xa3\x09\x49\x5c\x28\xaa\x5f\x55\xa2\x52\x94\x75\xf7\xc1\x5c\xfe\x52\x85\x0c\x2e\x5c\x3a\x8d\xc6\xb7\x49\x53\x3e\xd7\x77\xe0\x3d\x00\x00\xff\xff\xb5\xbf\x3f\xcc\x20\x03\x00\x00")

func migrations41_add_sponsor_to_state_tablesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations41_add_sponsor_to_state_tablesSql,
		"migrations/41_add_sponsor_to_state_tables.sql",
	)
}

func migrations41_add_sponsor_to_state_tablesSql() (*asset, error) {
	bytes, err := migrations41_add_sponsor_to_state_tablesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/41_add_sponsor_to_state_tables.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf8, 0xb2, 0xc6, 0x2e, 0x87, 0x75, 0x3, 0x0, 0x9c, 0x98, 0xc2, 0x26, 0x7, 0x99, 0x48, 0x2c, 0xcd, 0x44, 0xc5, 0x57, 0x0, 0x5c, 0xfe, 0xb9, 0x9, 0x1e, 0x2b, 0x55, 0xb5, 0xaa, 0x5, 0xab}}
	return a, nil
}

var _migrations42_add_num_sponsored_and_num_sponsoring_to_accountsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xb1\x0a\xc2\x30\x14\x85\xe1\xfd\x3e\xc5\x19\x15\x5b\xe8\x5e\x14\x62\x13\x11\x8c\x56\x4a\x3b\x4b\xa9\x21\x64\xe8\x4d\x69\x52\x7c\x7d\xd1\x49\xc1\x80\xf3\x39\xfc\x7c\x79\x8e\xcd\xe8\xec\xdc\x47\x83\x6e\x22\x12\xba\x55\x0d\x5a\xb1\xd7\x0a\xfd\x30\xf8\x85\x63\x20\x21\x25\xaa\x5a\x77\xe7\x0b\x78\x19\x6f\x61\xf2\x1c\xfc\x6c\xee\x70\x1c\x8d\x35\x33\xa4\x3a\x88\x4e\xb7\x28\x50\x1d\x55\x75\xc2\xea\xfb\xb6\xdb\xa2\x58\x67\x89\x8c\x63\xfb\x57\xe7\xf5\x7b\x87\x4a\xa2\x4f\xb5\xf4\x0f\x4e\xb8\x65\x53\x5f\x7f\xc2\xb3\xd4\xe4\xd8\x96\xf4\x0c\x00\x00\xff\xff\xb6\x54\xe4\xeb\x14\x01\x00\x00")

func migrations42_add_num_sponsored_and_num_sponsoring_to_accountsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations42_add_num_sponsored_and_num_sponsoring_to_accountsSql,
		"migrations/42_add_num_sponsored_and_num_sponsoring_to_accounts.sql",
	)
}

func migrations42_add_num_sponsored_and_num_sponsoring_to_accountsSql() (*asset, error) {
	bytes, err := migrations42_add_num_sponsored_and_num_sponsoring_to_accountsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/42_add_num_sponsored_and_num_sponsoring_to_accounts.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfd, 0x15, 0x84, 0x5c, 0x24, 0x15, 0x82, 0x45, 0x31, 0xe7, 0x89, 0x90, 0xd9, 0x7f, 0xb6, 0xf8, 0xc3, 0x21, 0xc9, 0xd3, 0xa9, 0x11, 0xee, 0x6d, 0x7a, 0x19, 0xcc, 0xba, 0xd7, 0x20, 0xbd, 0xdc}}
	return a, nil
}

var _migrations43_add_claimable_balances_flagsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\xe2\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xce\x49\xcc\xcc\x4d\x4c\xca\x49\x8d\x4f\x4a\xcc\x49\xcc\x4b\x4e\x2d\x56\x70\x74\x71\x51\x48\xcb\x49\x4c\x2f\x56\xc8\xcc\x2b\x51\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x30\xb0\xe6\xe2\x42\x36\xd2\x25\xbf\x3c\x8f\xa0\x99\x2e\x41\xfe\x01\x10\x43\xad\xb9\xb8\x00\x01\x00\x00\xff\xff\x88\xef\xa8\x21\x91\x00\x00\x00")

func migrations43_add_claimable_balances_flagsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations43_add_claimable_balances_flagsSql,
		"migrations/43_add_claimable_balances_flags.sql",
	)
}

func migrations43_add_claimable_balances_flagsSql() (*asset, error) {
	bytes, err := migrations43_add_claimable_balances_flagsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/43_add_claimable_balances_flags.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x91, 0x91, 0xc9, 0xa3, 0x4d, 0x66, 0x59, 0x6d, 0xbe, 0x30, 0xcb, 0x9d, 0x9b, 0x73, 0x1f, 0xc5, 0x98, 0xda, 0x39, 0x5c, 0x24, 0x99, 0x93, 0xa9, 0xd9, 0x47, 0xd3, 0x31, 0xf, 0x28, 0xc8, 0x12}}
	return a, nil
}

var _migrations44_asset_stat_accounts_and_balancesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x4f\x4f\xc2\x30\x18\xc6\xef\xef\xa7\x78\x6e\x48\x2c\x9f\x60\xf1\x30\xec\x2e\xa6\x6e\x84\x75\xe7\xe6\x5d\x69\x74\x84\xb5\x84\xb6\xd1\xf8\xe9\x8d\x44\x70\x60\xa2\x5c\xfb\xfc\xf9\xf5\x79\x17\x0b\xdc\x8f\xc3\xcb\x81\x93\x43\xb7\x27\x2a\x95\xae\xd6\xd0\xe5\x52\x55\x70\xef\x7b\xc3\x31\xba\x64\x62\xe2\x14\xa9\x94\x12\x8f\x8d\xea\x9e\x6b\xb0\xb5\x21\xfb\x14\xf1\xd4\x36\xf5\x52\x4c\xa5\x9e\x77\xec\xad\xfb\x96\x0a\xea\x56\xb2\xd4\xbf\xcb\x80\xb6\xd2\x04\xe0\xa7\xeb\x01\xdb\x18\x7c\x6f\xfa\x3c\xec\x36\x26\xf4\x5b\x67\xd3\xdd\x8c\x73\x7a\x0d\x87\xe1\xc3\x6d\x66\x02\x3e\x8f\xe6\xe4\x9f\x8b\x63\xfc\xcc\xbb\x21\xce\xe3\x57\x72\x5e\xfc\xb3\xf3\xa8\x5d\x2f\x6d\x2b\x8d\xba\xd1\xa8\x3b\xa5\xc4\xa5\xe7\xfc\x85\xa9\xa7\x20\x9a\x1e\x57\x86\x37\xff\x37\x56\xae\x9b\xd5\x35\x55\x5c\xbc\x9e\x38\x05\x7d\x06\x00\x00\xff\xff\x9e\x44\x07\x8e\xb7\x01\x00\x00")

func migrations44_asset_stat_accounts_and_balancesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations44_asset_stat_accounts_and_balancesSql,
		"migrations/44_asset_stat_accounts_and_balances.sql",
	)
}

func migrations44_asset_stat_accounts_and_balancesSql() (*asset, error) {
	bytes, err := migrations44_asset_stat_accounts_and_balancesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/44_asset_stat_accounts_and_balances.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb0, 0x3b, 0xce, 0x82, 0x13, 0x91, 0xc0, 0xc2, 0x93, 0xb1, 0x17, 0xbc, 0x57, 0x34, 0xdd, 0x98, 0xc8, 0x36, 0xee, 0x29, 0xd, 0x1e, 0x69, 0xb, 0x3f, 0x31, 0xbc, 0x41, 0xd4, 0x7d, 0xa5, 0xfd}}
	return a, nil
}

var _migrations45_add_claimable_balances_historySql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x95\x41\xb3\x9a\x30\x14\x85\xf7\xfc\x8a\x3b\x6e\x94\xa9\x2e\xdc\xca\x0a\x21\xad\xcc\x60\xa8\x98\xb4\x76\xc5\x04\xc8\xd8\xcc\x20\x58\xc8\xb4\xf6\xdf\x77\xea\x53\x11\x8d\x01\x7c\xce\x5b\x92\xb9\xb9\xe7\x9c\xfb\x85\x64\x32\x81\x4f\x3b\xb1\x2d\x99\xe4\x40\xf7\x86\xe1\x84\xc8\x26\x08\xd6\x68\x45\x11\x76\x10\xfc\x14\x95\x2c\xca\xbf\x51\x92\x31\xb1\x63\x71\xc6\xa3\x98\x65\x2c\x4f\x78\x15\x89\x34\xaa\xf8\x2f\x03\x00\x60\x4d\xec\x90\xc0\x77\x8f\x2c\x60\x7a\x5c\xf0\xb0\x13\xa2\x25\xc2\x04\xe6\x3f\x4e\x4b\x38\x80\xa5\x87\xbf\xd9\x3e\x45\x97\x6f\x7b\x53\x7f\x3b\xb6\xb3\x40\x30\xb5\x2e\x1e\x88\x3d\xf7\x75\x06\x60\x74\xdc\x27\x52\x88\xc5\x56\xe4\x12\x70\x40\x00\x53\xdf\x07\x17\x7d\xb6\xa9\x4f\x20\xe7\x07\xf9\x9b\x65\xa3\x61\x6b\x8a\xe1\x6c\x56\xf2\x6d\x92\xb1\xaa\x32\xc7\xc7\xb6\x77\xa5\x91\x48\x41\xf2\x43\x2d\x63\x98\xb5\x57\x8a\xbd\x15\x45\xe0\x61\x17\x6d\x60\x20\xf2\x94\x1f\x22\x8d\x68\x91\x47\x22\x1d\x40\x80\x75\xf1\xe8\xda\xc3\x5f\x20\x96\x25\xe7\x30\x12\xa9\x69\x3d\x2f\xa6\x0a\xd3\x4b\x5e\xd5\xc0\x7c\x84\xaa\xd8\xf3\x92\x49\xa1\xd2\x3d\x43\xbb\x2f\xbd\xc7\x38\x6e\x54\x2a\x79\xdc\xec\xe8\x4a\x44\x67\xf0\x8d\x4d\xd5\x98\x8e\x36\x50\x63\x4e\xca\x5c\x63\x6d\x88\x9a\xeb\x53\x5e\xaf\x95\x5e\x68\xfa\x21\x5c\x59\xb2\xbc\x62\x49\x37\xbc\xd7\xc5\x1f\x09\x58\x6f\x52\x85\xb8\x25\x96\x72\x5e\x37\xe9\xde\x85\xb9\xdd\x71\x53\xed\xc5\xe6\xff\xcf\xf5\xfa\x29\x70\x8b\x3f\xb9\x61\xb8\x61\xf0\xb5\xe7\x9d\x66\xf5\xde\xa4\xbc\x9b\xac\x93\x78\xdb\x1b\x70\xae\xeb\xfe\x5e\x59\xba\x58\x5d\x2e\x06\x5d\xc2\x5e\x3f\xab\x3a\xa3\xae\x85\xd6\x7b\xb7\x33\xaf\x73\xdf\xfb\x0c\xaa\x13\xe8\xdb\x58\xc6\xbf\x00\x00\x00\xff\xff\xc3\x12\xac\xa0\x73\x08\x00\x00")

func migrations45_add_claimable_balances_historySqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations45_add_claimable_balances_historySql,
		"migrations/45_add_claimable_balances_history.sql",
	)
}

func migrations45_add_claimable_balances_historySql() (*asset, error) {
	bytes, err := migrations45_add_claimable_balances_historySqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/45_add_claimable_balances_history.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb5, 0xa0, 0x1c, 0x80, 0x4f, 0x5b, 0xf9, 0xa6, 0x5d, 0xfe, 0x14, 0xd4, 0xa9, 0xaa, 0xf3, 0x89, 0x10, 0x6e, 0x23, 0x33, 0x86, 0xa3, 0xab, 0x1a, 0x71, 0x69, 0xd4, 0x53, 0x2c, 0x4a, 0x1, 0xe4}}
	return a, nil
}

var _migrations46_add_muxed_accountsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xbf\xce\x82\x40\x10\xc4\xfb\x7b\x8a\x2d\xbf\x2f\x42\x6b\x62\xa8\x30\x47\x77\x51\x43\xa0\x26\x9b\x63\x11\x0a\xee\xc8\xde\xe1\x9f\xb7\x37\x01\x13\x31\x22\x1a\xdb\xcd\xcc\xce\xfc\x26\x0c\x61\xd5\x36\x47\x46\x4f\x90\x77\x42\xc4\x2a\x4b\x52\xc8\xe2\xad\x4a\xa0\x6e\x9c\xb7\x7c\x2d\x3c\xa3\x71\xa8\x7d\x63\x8d\x83\x58\x4a\x40\xad\x6d\x6f\x7c\xd1\xf6\x17\x2a\xe1\x84\xac\x6b\xe4\xbf\xf5\xe6\x1f\x76\xb9\x52\xc1\xa0\xa9\x88\x8a\x65\x5d\x34\x1b\x66\x3b\x62\x7c\x44\x39\xdb\xb3\xfe\xed\x13\x55\x15\x69\x7f\x6f\x5c\x96\x4c\xce\xbd\xf5\x8b\xe9\x0e\xd2\x9e\xcd\x17\x4b\xc8\x74\x7f\x78\x9e\x22\x18\x6f\x2f\xe8\x1f\x49\x07\xdb\x1c\xea\x32\xd9\xd8\x60\x8a\x16\x89\x5b\x00\x00\x00\xff\xff\x1e\x83\x01\x2a\xd1\x01\x00\x00")

func migrations46_add_muxed_accountsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations46_add_muxed_accountsSql,
		"migrations/46_add_muxed_accounts.sql",
	)
}

func migrations46_add_muxed_accountsSql() (*asset, error) {
	bytes, err := migrations46_add_muxed_accountsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/46_add_muxed_accounts.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf2, 0x2e, 0xec, 0xdc, 0x13, 0x2a, 0x94, 0xfa, 0xba, 0x5c, 0xe7, 0x2d, 0x10, 0x39, 0x2b, 0xf3, 0x28, 0xd, 0x46, 0x7f, 0xf, 0xc3, 0x4c, 0xd1, 0x43, 0xff, 0x81, 0xe1, 0x68, 0xa, 0xef, 0xd1}}
	return a, nil
}

var _migrations47_precompute_trade_aggregationsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x6e\xda\x40\x10\xbd\xef\x57\xbc\x03\x52\xec\x14\x24\x72\xe9\x01\x4e\x0e\x38\x08\x95\x98\xc8\x60\xa9\x39\x59\x8b\x3d\x35\xab\xd8\xbb\xee\x7a\x1c\xda\x7e\x7d\x05\x98\x90\x80\x69\x22\x35\x17\x1f\x3c\x6f\xde\xcc\xbc\x7d\x33\xbd\x1e\xbe\x14\x2a\xb3\x92\x09\x51\x09\x6d\xd8\x4a\x5d\xc9\x84\x95\xd1\x42\xf4\x7a\x18\x59\xda\xc6\x78\x4d\xd0\xb4\x01\xcb\x55\x4e\x62\x14\xfa\xde\xd2\xc7\xd2\xbb\x9d\xf9\x58\xab\x8a\x8d\xfd\x1d\xb3\x95\x29\x55\xf1\xd7\x7e\xbf\xdf\x87\x23\x00\x56\x05\x55\x2c\x8b\x12\x2b\x95\x29\xcd\x5b\x76\xe8\x3a\xcf\xbb\x02\x58\xc9\x8a\x62\x59\x55\xc4\xb1\x4a\xdb\x00\x89\xa9\x35\x93\x7d\x1f\x03\xa5\x99\x32\xb2\xe7\xf4\xcf\x26\xaf\x0b\x82\xae\x0b\xb2\x2a\x69\x65\xff\x07\x44\x3e\x67\xad\xff\xd7\x2a\x5b\xc7\xfa\x72\x28\x6d\x0d\xe5\x66\x73\x21\x69\x1b\x69\xcf\x31\x25\xe9\x38\xa7\x34\x23\x1b\xb3\x69\x97\x60\x87\x69\x27\xde\x85\xda\x99\x93\xdc\x54\xf4\x1e\xf5\x1e\xd4\xce\xbd\x8f\xb5\x91\x0b\xe0\x21\x9c\xde\x7b\xe1\x23\xbe\xf9\x8f\xce\x9b\x77\xee\x9e\xbd\x6a\xf7\xe8\x12\x57\xb8\xc3\x9d\xe5\x5e\x0c\xb9\x60\xc9\x54\x90\xe6\x5b\xca\x94\x3e\xb8\x6e\x1e\x22\xf4\x1f\x66\xde\xc8\xc7\x5d\x14\x8c\x96\xd3\x79\x00\x36\x71\xa1\xf2\x5c\x55\x0e\xbf\xb2\xdd\x46\xf1\xda\xd4\xfb\x3f\xf8\x63\x34\x75\xc1\xb6\x3e\x0e\x34\xf6\xef\xbc\x68\xb6\xc4\x8d\x2b\x80\xd0\x5f\x46\x61\xb0\x38\x08\xe1\x2d\xd0\xe9\x08\xe0\xd6\x9f\x4c\x03\x01\x1c\x00\x48\xd5\xb3\x93\xc8\x8a\x1d\x87\x7e\xb1\x95\x09\x3b\x54\x9a\x64\x8d\x1f\xd6\x14\x60\x17\xd7\xb8\xd9\x2e\x80\x0b\x59\x35\x5c\xee\xbe\xac\x7b\xbd\xfd\x0e\x05\xe0\x07\xe3\xa1\xe8\x74\x30\xf3\x82\x49\xe4\x4d\x7c\x94\x79\x99\x55\x3f\x73\x4c\xef\xef\xa3\xdd\x52\x0d\xdb\x75\xf0\x75\xfa\xf9\x0a\x7d\xae\x3c\xaf\xea\x0c\x06\x2f\x85\x1a\x05\xfe\x7f\xf8\x66\xc2\x69\x30\xf6\xbf\x63\x34\x0f\x46\x51\x18\xfa\xc1\x72\xf6\x88\x35\xdb\x34\x96\x59\x16\xaf\xea\xe4\x89\x38\xce\x8d\x79\xaa\x4b\xcc\x83\x93\x03\x25\x80\x68\x31\x0d\x26\x58\xb1\x25\x82\x73\x6c\xb8\x59\x87\x9d\xb5\xd3\x58\x72\x17\x57\xbb\x63\x76\x35\x18\x34\x92\xb8\x5b\x87\x7e\xa0\x85\xb3\xc5\x3d\xeb\xa2\x39\x93\x6f\x3a\x39\xcd\x3a\x5d\x87\xb1\xd9\x68\x21\xc6\xe1\xfc\xa1\x29\x7e\xb1\xde\xb0\x15\xf5\x46\x98\x06\x72\xf9\x84\x37\x80\x36\x03\x5d\xb4\xcf\x41\xa6\x8f\xe6\x9e\x2c\xe7\x31\xfd\x6f\x00\x00\x00\xff\xff\x80\x13\x6d\x32\x97\x06\x00\x00")

func migrations47_precompute_trade_aggregationsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations47_precompute_trade_aggregationsSql,
		"migrations/47_precompute_trade_aggregations.sql",
	)
}

func migrations47_precompute_trade_aggregationsSql() (*asset, error) {
	bytes, err := migrations47_precompute_trade_aggregationsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/47_precompute_trade_aggregations.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd, 0x28, 0x13, 0x8, 0x93, 0xfc, 0x96, 0xf2, 0x6c, 0xab, 0x2, 0x54, 0x19, 0x7b, 0xdb, 0x48, 0x0, 0x21, 0xa, 0xef, 0x6d, 0xf0, 0xd1, 0x9f, 0xee, 0x8d, 0x91, 0xd8, 0x65, 0xe1, 0x1d, 0xd5}}
	return a, nil
}

var _migrations48_rebuild_trade_aggregationsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\x5f\x6f\xda\x30\x14\xc5\xdf\xfd\x29\xae\xfa\x94\x74\xd0\x31\x1e\x26\xad\x7d\xa2\x6d\xb6\x55\xea\x60\x0a\x41\x53\x55\x4d\x96\x49\x2e\xc4\xaa\xff\x20\xfb\xa6\xb4\xdf\x7e\xc2\x21\x09\xd0\xac\x7d\x41\x8e\xfd\xf3\xb9\xbe\x87\x63\x0f\x87\xf0\x49\xcb\xb5\x13\x84\xb0\xd8\x30\x36\x1c\xc2\xb5\xc8\x9f\x56\x52\x29\xa0\x12\x81\xc4\x52\x21\x6c\x25\x95\x80\x2f\xd2\x93\x34\x6b\x28\x04\x89\x0b\xc8\x4a\xe9\x81\xc4\x13\x7a\x10\x4b\x5b\x11\x7c\x03\x2d\x4d\x45\xe8\x2f\xd8\x9f\xbb\xec\x27\x90\x13\x05\x7a\x98\xcc\x21\x62\x00\xf3\xe4\x3e\xb9\xc9\x18\x00\x00\x59\xae\xa5\x52\xd2\x47\x0a\x8b\x35\x3a\x9e\x2b\xeb\xb1\xe0\x82\x06\xf0\x75\x34\x1a\x8d\x62\x10\x1e\x48\x6a\xf4\x24\xf4\x66\x10\x36\x95\xd2\x93\x75\xaf\xdc\x6e\xd0\x09\x92\xd6\x70\x59\xd4\x2b\x67\xd6\x15\xe8\xce\xea\x8f\xa5\xf0\xc8\x85\xf7\x48\xed\x7a\x3d\xa5\x6d\x65\xa8\x9e\xc8\x77\x43\x74\x27\x58\x3b\x7b\x40\x4e\xd2\x74\xf2\xf0\xb8\x71\x32\x47\x6e\x06\x50\x0f\x8a\xbf\xbb\xe3\x85\x31\x03\xf8\x9e\xce\x7e\xb5\x87\xab\x5b\x66\x00\xb3\xf4\x36\x49\xe1\xfa\xe1\xe4\x3c\x6f\x4b\xf7\xf7\xd5\xf4\xc4\xe2\x01\x38\x5c\x56\x52\xd1\xae\xe6\xa9\x8f\xc7\x0e\xf5\xb4\xfe\x4e\xa7\xd1\x79\x70\x39\xef\x9a\xf5\x95\x8e\x0e\xbc\x0a\xcb\xe1\xfb\xd9\xaa\x4a\x63\x07\x1d\x3b\xd5\xc9\xa0\xfb\x00\xbd\xbc\x34\x95\x46\x27\xf3\xf8\xf3\x49\xb1\x6e\x65\xa7\x26\x9e\xd7\xb5\x44\xa4\xc5\x0b\x0f\x4e\x47\xe1\x37\x8e\x1f\xbf\x04\xf7\x4b\xb9\x2e\xb9\xf9\x2f\x34\xee\xa0\xa2\x81\xa4\xe9\x55\x52\x76\xdb\x09\xbd\x61\xc6\x2d\xb3\xd7\x59\x49\xe7\x29\xea\xfb\xd3\xc2\xc9\xed\x06\x0d\xdf\xa7\x9a\x6c\x63\x78\x54\xef\x3a\x2e\x1c\x50\xd3\x0b\x8c\x3b\x60\xaf\xa0\xc4\x7b\x55\xc3\xfd\xe9\x29\x1b\x76\x1d\x57\xad\x51\xd3\x07\x8c\x0f\x80\xa2\x49\x76\x9b\xe8\x1f\xe9\x6c\xf1\x1b\x96\xaf\x1f\x27\xba\x8d\x25\x8b\x19\xc0\xdd\x74\x9e\xa4\x19\xdc\x4d\xb3\xd9\xc9\x35\xe1\xe1\xae\x87\x50\x37\xb1\x86\x73\x58\x39\xab\x9b\xcc\x33\x80\xf8\x2a\xbc\x49\xed\x1b\x75\x6b\xb7\x86\xb1\x2c\x5d\x4c\x6f\x26\x59\x02\xd9\xe4\xfa\x3e\xe9\xd5\xbd\x62\xff\x02\x00\x00\xff\xff\x0e\xad\x7c\x8e\xdb\x04\x00\x00")

func migrations48_rebuild_trade_aggregationsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations48_rebuild_trade_aggregationsSql,
		"migrations/48_rebuild_trade_aggregations.sql",
	)
}

func migrations48_rebuild_trade_aggregationsSql() (*asset, error) {
	bytes, err := migrations48_rebuild_trade_aggregationsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/48_rebuild_trade_aggregations.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xed, 0xea, 0xa6, 0x74, 0x5b, 0x14, 0xa9, 0x38, 0x4d, 0x4f, 0x90, 0xe7, 0xeb, 0x65, 0x8b, 0xe3, 0xbf, 0x89, 0x12, 0x2f, 0x4b, 0x35, 0xa5, 0x6e, 0x9f, 0xb1, 0x60, 0x92, 0xc7, 0x7, 0x39, 0x7d}}
	return a, nil
}

var _migrations49_add_brin_index_trade_aggregationsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xce\xb1\xaa\xc2\x30\x14\xc6\xf1\xfd\x3c\xc5\x19\xef\x45\x0a\x99\x5c\x3a\x49\x9b\x4a\x40\x12\x49\x53\xa8\x53\x88\xb6\xb4\x19\x92\x94\xe4\x80\xf8\xf6\x22\x88\xb8\xb9\x7f\x1f\xbf\x7f\x55\xe1\x2e\xf8\x25\x3b\x9a\x71\xd8\x30\x26\xca\x2e\x16\x77\x23\x9f\x22\x40\xa3\xf9\xc1\x70\x14\xb2\xe5\x23\x36\x4a\x36\x83\xd6\x5c\x9a\xd3\x05\x45\x87\x52\x19\xe4\xa3\xe8\x4d\x8f\x2b\xe5\xc9\xba\x65\xb1\xe4\xc3\x5c\xc8\x85\xcd\x5e\xb3\x8f\xa8\x24\xae\xbe\x50\xca\x0f\x4b\xd9\x4d\x73\xb1\x7b\xc6\x18\xc3\xa1\x17\xf2\x88\xaf\xc9\xdf\xe7\xf1\x5f\x03\x7c\xd7\xb4\xe9\x1e\x01\x5a\xad\xce\x6f\x5f\x74\x3f\xb8\x1a\x9e\x01\x00\x00\xff\xff\xc9\x09\x7e\x00\xce\x00\x00\x00")

func migrations49_add_brin_index_trade_aggregationsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations49_add_brin_index_trade_aggregationsSql,
		"migrations/49_add_brin_index_trade_aggregations.sql",
	)
}

func migrations49_add_brin_index_trade_aggregationsSql() (*asset, error) {
	bytes, err := migrations49_add_brin_index_trade_aggregationsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/49_add_brin_index_trade_aggregations.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe7, 0xae, 0xcb, 0x90, 0xec, 0x3f, 0xea, 0x57, 0xa2, 0x2c, 0x2c, 0xe, 0xd2, 0x60, 0x1, 0xbe, 0xae, 0xa6, 0xe4, 0x2f, 0xcb, 0xa8, 0xac, 0x44, 0x63, 0x67, 0x5c, 0x63, 0x28, 0x15, 0xbd, 0x2f}}
	return a, nil
}

var _migrations4_add_protocol_versionSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcd\xb1\x0a\xc2\x30\x10\x06\xe0\x3d\x4f\xf1\xef\x52\x70\xef\x14\x4d\x9d\xce\x44\x4a\x32\x38\x15\xd1\xa3\x06\x6a\xae\x5c\x82\xe2\xdb\xbb\xba\x88\x4f\xf0\x75\x1d\x36\x8f\x3c\xeb\xa5\x31\xd2\x6a\x2c\xc5\x61\x44\xb4\x3b\x1a\x10\x3c\x9d\x71\xcf\xb5\x89\xbe\xa7\x85\x6f\x33\x6b\x85\x01\xac\x73\xd8\x07\x4a\x47\x8f\x55\xa5\xc9\x55\x96\xe9\xc9\x5a\xb3\x14\xe4\xd2\x78\x66\x85\x1b\x0e\x36\x51\xc4\x16\x3e\x44\xf8\x44\xd4\x1b\xf3\x6d\x39\x79\x95\xff\x9a\x1b\xc3\xe9\x97\xd5\x9b\x4f\x00\x00\x00\xff\xff\x83\xbb\x30\x2e\xbc\x00\x00\x00")

func migrations4_add_protocol_versionSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations4_add_protocol_versionSql,
		"migrations/4_add_protocol_version.sql",
	)
}

func migrations4_add_protocol_versionSql() (*asset, error) {
	bytes, err := migrations4_add_protocol_versionSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/4_add_protocol_version.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x26, 0x7f, 0xb6, 0x87, 0x30, 0xa5, 0x8c, 0xee, 0x55, 0xbb, 0x12, 0x6, 0x1b, 0xee, 0xfc, 0x6a, 0xa0, 0x71, 0x60, 0xcc, 0xf7, 0x36, 0x56, 0xb3, 0x39, 0x1f, 0x1a, 0xd2, 0x6, 0xe4, 0x58, 0x8e}}
	return a, nil
}

var _migrations50_liquidity_poolsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x56\x5d\x8f\xda\x38\x14\x7d\x9f\x5f\x71\xdf\x1a\xb4\x83\xd4\xbe\x16\x6d\xa5\x0c\x71\x77\xa2\x42\x98\x86\x64\xdb\x79\xb2\x0c\xbe\x80\x77\x33\x31\x8d\xcd\x2c\xfc\xfb\x55\x12\x42\x83\x63\x43\x8a\x46\xe5\x8d\xf8\x7e\x9c\x73\xcf\xf1\xc7\x70\x08\x7f\xbc\x88\x75\xc1\x34\x42\xba\xbd\xbb\x1b\xc7\xc4\x4f\x08\x24\xfe\xc3\x84\x40\x26\x7e\xec\x04\x17\xfa\x40\xb7\x52\x66\x0a\xbc\x3b\x00\x00\xc1\x41\xe3\x5e\x43\x34\x4b\x20\x4a\x27\x93\x7b\x18\x0e\x61\x83\xfb\x21\xe6\x4b\xc9\x91\xc3\x93\x94\x59\x18\x54\xb1\xfa\xb0\x45\x50\x2f\x2c\xcb\x44\xde\xca\xa8\xd6\x56\x88\x20\x72\x8d\x6b\x2c\x8c\x15\x5d\xec\x94\xce\x44\x8e\x74\x29\x77\xb9\x86\x85\x58\xb7\xd3\x61\xfc\x48\xc6\x5f\xc0\x33\xc3\x3e\xc1\xfb\x41\x5d\x40\x6d\x58\xe1\x4a\x0e\xc8\x67\x3f\x9d\x24\xf0\xbe\x2e\xe3\xb5\x63\x3f\xfd\x79\x2a\xc1\x94\x42\x4d\x0b\x54\x58\xbc\xa2\x82\x7f\x94\xcc\x17\x06\xcc\x8c\x29\x4d\x5f\x24\x17\x2b\x81\x9c\x66\xc8\x4b\x26\x76\x46\x1c\x33\xd4\xc8\x61\x21\x65\x86\x2c\xef\xa2\x59\xb1\x4c\x61\x1d\xfb\x14\x87\x53\x3f\x7e\x86\x2f\xe4\x19\x3c\xc1\x07\x77\x83\xd1\x49\x97\x30\x0a\xc8\x77\x53\x17\xba\x38\x50\x03\xee\x2c\xea\x88\x97\xce\xc3\xe8\x2f\x58\x8b\xdc\xb3\x51\xa3\x5b\xa6\x37\x54\x6e\xd5\x60\x64\xf6\x7a\x45\x6a\xd6\x72\x96\x7f\x48\x62\x42\xc0\x3b\xd2\xbd\xb7\x8e\xa8\x45\x67\x4e\xbe\xa6\x24\x1a\x13\xd8\x08\xa5\x65\x71\x30\x1b\x51\xc1\xa9\xc2\x1f\xd5\x58\xe6\x89\x1f\x27\xf0\x2d\x4c\x1e\xe1\x43\xf5\x21\x8c\xc6\x31\x99\x92\x28\x81\x87\xe7\xe3\xa7\x68\x06\xd3\x30\xfa\xdb\x9f\xa4\xe4\xf4\xdf\xff\xfe\xf3\xff\xd8\x1f\x3f\x12\xf8\x30\x32\x7c\xee\xe8\xfe\xd3\xef\x2e\x0f\xe5\xb8\xd7\xaf\x2c\xf3\xde\x5d\xc6\xff\xee\xe3\xc7\x02\xd7\xcb\x8c\x29\x75\x74\xd7\x79\x1c\x35\xb7\x54\x5b\xf2\x34\x0a\xbf\xa6\x8d\x1a\x22\xe7\xb8\xa7\xae\x6e\x32\x2f\x2b\xcd\x22\x27\xa1\x5a\xa4\x85\x2e\x10\x2b\x6b\x8d\x6e\x6b\xd2\x45\xdf\xb7\x67\x27\x73\xe0\xd2\x42\x6e\xb1\x60\x5a\x74\xba\x35\xaa\x74\xe3\xba\x3a\xdd\x9f\x45\x76\x51\x1b\xe1\x3d\xa7\xee\x44\x56\xcf\x5f\xb5\x87\xe1\x66\x71\x36\x16\x2b\x99\x7b\x37\x72\x73\x93\xfe\x02\xc0\xb3\x16\x6f\x83\xd4\xa9\xa1\x2e\x58\xae\xd8\xb2\x87\x8a\xed\xc8\xdf\xa5\xe3\x05\x74\x16\x25\x2f\x71\xb1\x4e\xc8\xa0\x74\xb3\x9a\x57\x60\x1a\x6d\xde\x0e\x71\x39\x44\x7f\x92\x90\xf8\x28\x6a\x75\xdb\xd2\xf2\xba\x55\xe0\x07\x81\xe3\x08\x33\xa8\xb4\x92\xca\x5b\xca\x7a\x70\xb4\x0b\xb7\x6e\x11\xfb\x59\x11\xc4\xb3\xa7\x63\xed\x8d\x2e\x78\x59\x54\xae\x56\x58\x8c\x3a\x2b\xd5\x8d\x8e\x05\xcd\xa4\xfc\x77\xb7\x35\xc8\xb4\x28\x73\x54\x50\xe5\x56\x75\xa8\xe0\xb5\xdb\x1c\xbf\xba\xc8\x82\x29\xa4\x6c\x59\xb5\x28\x59\x54\xf9\xe7\x6e\xbd\x98\xdf\x60\xbb\xad\x44\x10\xd4\x00\x5c\x1b\xe1\x6a\xf6\x69\x34\xb7\x16\x30\x12\x8f\x2f\x39\xf3\x99\xd2\x08\xe4\x00\x7b\x6e\x55\x6e\xa8\x6f\x4f\x32\xb7\x4a\xd3\xc2\xcd\xe8\x72\x17\x67\x5e\xe9\xb5\xf6\xdb\x38\x90\xff\xe5\x56\xf7\x39\x2b\x74\x1d\xe9\x1c\x45\xe9\x6b\x32\x21\x09\x81\xcf\xf1\x6c\x6a\xe2\xfd\xf6\x48\x62\x02\x9e\xc5\x33\xe1\xbc\x72\xcb\x00\x66\x31\x78\xa6\x27\x9b\xc5\x1e\xce\xef\xca\x79\xd1\x01\x55\x8e\x93\xf7\xf5\x54\xfb\x10\x6e\xdb\x36\x73\x92\xfc\xca\xc6\x33\x87\xd4\x3f\x3d\x08\x4e\x07\xc4\x71\x97\x58\xed\x7e\x7e\xea\x80\xcc\xfb\xb8\xaf\x7e\x90\xbb\xdd\x5d\x35\xbe\xe2\xe4\x06\x9c\x71\x48\x5e\x3b\x80\x47\xce\x33\xde\xe6\x8c\xda\xaa\xe5\xc2\xe5\x87\xf3\x92\xa9\x25\xe3\xd8\x04\xf7\x7c\xe6\xdb\x6b\xbb\x1f\x26\x46\x97\xfe\x6f\x0f\x6b\xa2\x3b\xe8\xff\x00\x00\x00\xff\xff\xf9\xb4\x97\x15\x24\x0f\x00\x00")

func migrations50_liquidity_poolsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations50_liquidity_poolsSql,
		"migrations/50_liquidity_pools.sql",
	)
}

func migrations50_liquidity_poolsSql() (*asset, error) {
	bytes, err := migrations50_liquidity_poolsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/50_liquidity_pools.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xf1, 0xc5, 0xdb, 0x7d, 0x7e, 0x61, 0xa4, 0x45, 0xee, 0x3f, 0x8, 0x28, 0x27, 0x29, 0x46, 0x4a, 0xc5, 0x5c, 0x20, 0xc, 0xdb, 0x8b, 0x6b, 0xa2, 0xe1, 0xd8, 0xd3, 0x25, 0xe5, 0x41, 0xfd}}
	return a, nil
}

var _migrations51_remove_ht_unused_indexesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\xbf\x4a\xc7\x30\x14\xc5\xf1\x3d\x4f\x71\x46\x8b\xe6\x09\x3a\x89\x8d\x1a\x28\xa9\x34\x2d\x76\x2b\x69\x7a\xd5\x0c\x26\x9a\x3f\x48\xdf\x5e\x90\x62\x0b\x22\xfc\xb6\x0c\xdf\xf3\xc9\xe5\x1c\xd7\xef\xee\x35\x9a\x4c\x18\x3f\x18\xe3\x1c\xc5\x97\x44\x2b\x9c\x5f\x9d\xa5\xc4\x9a\xbe\x7b\x82\x54\x8d\x98\x20\xef\x21\x26\xa9\x07\x8d\x65\x9b\x8d\xb5\xa1\xf8\x5c\xff\x1b\xbc\x10\x1d\xd1\x8f\xfc\xfb\x53\x13\xbe\x3c\xbb\xeb\xc5\xed\x20\xf6\xe5\x01\xa2\x53\x78\x73\x29\x87\xb8\xcd\x39\x1a\x9f\x8c\xcd\x2e\xf8\x84\x51\x4b\xf5\x80\x25\x47\x22\x5c\xed\xf1\x0d\xf6\xc7\x9c\xe8\xb3\x90\xb7\x54\xd5\x7f\xe0\xd3\x21\x97\xe1\xa7\x41\x85\xe7\x47\xd1\x0b\x9c\x0d\xa9\xa1\xba\x01\x6a\x6c\xdb\x9a\x7d\x07\x00\x00\xff\xff\x08\x04\xf4\x75\x41\x01\x00\x00")

func migrations51_remove_ht_unused_indexesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations51_remove_ht_unused_indexesSql,
		"migrations/51_remove_ht_unused_indexes.sql",
	)
}

func migrations51_remove_ht_unused_indexesSql() (*asset, error) {
	bytes, err := migrations51_remove_ht_unused_indexesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/51_remove_ht_unused_indexes.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe6, 0x27, 0xd4, 0x40, 0x1, 0x69, 0x1, 0x90, 0xeb, 0x92, 0x8a, 0x93, 0xd6, 0xa3, 0x5c, 0x67, 0x1, 0x4f, 0x15, 0xf9, 0x98, 0xcc, 0x62, 0xd6, 0xa7, 0x2e, 0x2a, 0xae, 0x88, 0xd3, 0x31, 0x79}}
	return a, nil
}

var _migrations52_add_trade_type_indexSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x4b\xc3\x30\x1c\xc5\xef\xf9\x14\x8f\x9d\x1c\x6e\xa0\x5e\x8b\x42\xb7\xfc\x75\xc5\xd2\x8e\x34\x45\x6f\x21\x33\xc1\x05\xba\xa6\xa6\x19\xd2\x6f\x2f\x4e\x91\xa0\xb8\x5b\x0e\xbf\xbc\xdf\xfb\xbf\xe5\x12\x97\x07\xf7\x1a\x74\xb4\x68\x07\xc6\xf2\x52\x92\x80\xcc\x57\x25\x61\xef\xc6\xe8\xc3\xa4\x62\xd0\xc6\x8e\xc8\x39\xc7\xe9\xa9\xe2\x34\x58\x8c\x07\xdd\x75\xae\x8f\xe0\x74\x9f\xb7\xa5\xc4\x35\xd6\x1b\x5a\x3f\x5e\x24\xcc\x1d\xae\xe6\x19\x6b\xb7\x3c\x97\x7f\xe2\x1a\x92\x69\xdc\x2d\x6e\xf0\xb4\x21\x41\xd8\xe9\xd1\xaa\xce\xbd\x1d\x9d\x71\x71\x52\x83\xf7\x9d\x72\x06\x45\x83\xaa\x96\xa8\xda\xb2\x44\x2d\xf0\xe2\x8f\x7d\xb4\xe1\x3c\x98\xb1\xb5\xa0\x4f\x77\x51\x71\x7a\xc6\x3e\x06\xa3\x76\xdf\x0d\xbe\xb4\x75\xf5\xbb\x57\xdb\x14\xd5\x03\x56\x52\x10\x25\xa7\x2c\x7e\x30\x3f\xd8\xa0\xa3\xf3\xbd\x72\x66\x81\x99\x0f\xc6\x86\xd9\x3c\x63\x2c\x9d\x92\xfb\xf7\x9e\x31\x2e\xea\xed\xbf\xea\xec\xdc\xd6\xa7\x9f\x29\xfb\x11\x00\x00\xff\xff\x80\x41\xbf\x62\xa8\x01\x00\x00")

func migrations52_add_trade_type_indexSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations52_add_trade_type_indexSql,
		"migrations/52_add_trade_type_index.sql",
	)
}

func migrations52_add_trade_type_indexSql() (*asset, error) {
	bytes, err := migrations52_add_trade_type_indexSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/52_add_trade_type_index.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa7, 0xbc, 0x9b, 0x94, 0xfb, 0x5b, 0x77, 0x33, 0x5b, 0x67, 0x5a, 0x64, 0x6e, 0x6c, 0x5f, 0xee, 0xe0, 0xd2, 0xcd, 0x61, 0xd6, 0x29, 0x8c, 0x74, 0xd0, 0xec, 0xaf, 0x32, 0x38, 0xb6, 0xd9, 0x71}}
	return a, nil
}

var _migrations53_add_trades_rounding_slippageSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\xc1\xaa\xc2\x30\x10\x45\xf7\xf9\x8a\xd9\x3f\xf2\x05\x5d\xe5\x91\xee\x0a\x4a\xa9\xeb\x30\x31\x43\x1c\xa8\x49\xc9\x4c\x51\xff\x5e\x28\x22\x88\x50\xf7\xf7\xdc\x73\xac\x85\xbf\x2b\xe7\x86\x4a\x70\x5a\x8c\xb1\x16\x5c\x4a\xc0\x12\xd2\x2a\x0a\x5a\x41\x1b\x26\x12\x50\x8c\x33\x19\x37\x4c\xfd\x08\x93\xfb\x1f\x7a\xb8\xb0\x68\x6d\x8f\xf0\x1a\x38\xef\xa1\xd5\xb5\x24\x2e\x39\xc8\xcc\xcb\x82\x99\x20\x72\xe6\xa2\xdd\x2f\x30\xa2\x50\x60\x09\x74\xc7\xb3\x42\xac\x75\x26\x2c\xdd\x96\xf3\xce\xf3\xf5\x56\xf6\x7e\xfc\x78\x38\x7e\x17\xec\xaa\x37\xe4\xc3\xdd\x99\x67\x00\x00\x00\xff\xff\x9b\x4e\x68\x91\x12\x01\x00\x00")

func migrations53_add_trades_rounding_slippageSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations53_add_trades_rounding_slippageSql,
		"migrations/53_add_trades_rounding_slippage.sql",
	)
}

func migrations53_add_trades_rounding_slippageSql() (*asset, error) {
	bytes, err := migrations53_add_trades_rounding_slippageSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/53_add_trades_rounding_slippage.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf0, 0xf0, 0xce, 0xdd, 0x5e, 0xe4, 0x89, 0x9c, 0x7, 0x4e, 0x83, 0xd4, 0xb2, 0x1c, 0x3b, 0x33, 0xa, 0x71, 0xa2, 0xe0, 0x22, 0x6f, 0x98, 0x17, 0x44, 0xc, 0xcb, 0x68, 0x55, 0xa6, 0xdf, 0xba}}
	return a, nil
}

var _migrations54_tx_preconditions_and_account_fieldsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x54\xcd\x6e\xda\x40\x10\xbe\xfb\x29\xe6\x96\x9f\xc6\x34\x4d\x29\xaa\x6a\xa9\x12\x09\x1c\x2a\xd1\x04\x25\x70\xa8\xaa\xca\x1a\xbc\xa3\x65\x5b\x7b\x96\xee\x8e\x03\xf4\xe9\xab\xb5\x81\x14\x8a\x55\xab\x70\x62\xed\x99\xf9\x7e\xf6\x1b\xc7\x31\xbc\x2a\x8c\x76\x28\x04\xd3\x45\xd4\x1f\x4d\x86\x8f\x30\xe9\xdf\x8e\x86\x30\x37\x5e\xac\x5b\xa7\xe2\x90\x3d\x66\x62\x2c\x7b\xe8\x0f\x06\x90\x93\xd2\xe4\xd2\x99\x2d\x59\x79\xf8\xfb\x67\x58\xde\x3b\x64\x4d\x49\x75\x8c\x63\x58\x29\xd7\x99\x1a\x96\xb7\x37\xbe\x1d\x44\x61\x38\xc5\x2c\xb3\x25\x4b\xea\xe9\x67\x49\x9c\xd1\x9f\x10\x33\xa3\x0d\x4b\xb2\x3d\x6e\x20\x9e\x36\x95\xf7\x65\x31\x23\x07\xf1\xc7\x40\xa5\xd7\xfd\x7f\xc8\x14\xf5\x0e\xf6\x19\x5d\x36\x47\x77\x7e\x73\x7d\x91\xbc\x40\x4e\x4c\x41\x63\x6b\x58\x02\x5a\x59\xc1\x85\x7f\xb9\x65\x4d\x5e\xb6\x4f\xb8\x22\x74\x02\x8f\x8d\xe5\x1a\x17\x0d\xd2\x3f\x05\x73\xdb\x01\xd0\x4a\x1c\xa6\xde\x68\x26\x77\xec\xfa\x84\x56\xf2\xf5\x5b\x12\xed\x4d\xdb\x30\xaa\x27\x1c\xd0\x0a\x2e\x93\x26\x97\xb4\xe8\x10\x53\xd0\x56\x42\x14\xc5\x31\xdc\xf5\xc7\x71\xf7\x1a\x2a\x3a\x0a\x16\xb8\xce\x2d\x2a\xf0\xe2\x7e\xd0\xda\x43\x86\x0c\x33\x82\x37\xbd\x77\x10\xcc\xc7\x4c\x02\xe7\xe0\xee\x15\x78\xa2\x30\xa0\x2e\x7d\x5d\xa0\xe1\x8e\xb6\x1f\x0a\x5c\x0d\x39\xb3\x8a\xd4\x93\xf9\x45\x1d\xb8\x2d\x05\x96\x74\x96\xe7\x50\x7a\xaa\xb4\xc1\x9c\x1c\x5d\x81\xb7\xb0\x24\x50\x96\xcf\x04\x98\x48\x81\xd8\x30\x0e\xd5\xf7\xd2\x0b\x18\x81\x4b\x7a\x26\x07\xa8\xd1\xf0\x65\xe7\xa8\xb4\xad\x89\x11\x40\xfd\xfa\xee\x61\x34\xfd\x7c\x5f\x8b\x71\x30\xf9\x32\x1e\x56\x88\xb5\xd2\xdd\x9e\x0d\xec\x92\xff\x7d\x55\x83\xc7\x87\xf1\xfe\xaa\x25\x2d\x9b\x8e\x25\xe8\x94\xde\xb0\x05\x27\xf5\xbf\xa4\xb7\xed\x98\xbd\x8c\x36\x45\xb1\xaa\x3c\x00\x69\xc8\xe0\x7e\x69\x08\x61\xc3\xd0\x36\x57\xba\x4b\x62\xf8\x26\xac\x0d\xeb\xf3\x5e\xf7\x22\x89\x7e\x07\x00\x00\xff\xff\x09\xc0\xc0\xa1\x4b\x05\x00\x00")

func migrations54_tx_preconditions_and_account_fieldsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations54_tx_preconditions_and_account_fieldsSql,
		"migrations/54_tx_preconditions_and_account_fields.sql",
	)
}

func migrations54_tx_preconditions_and_account_fieldsSql() (*asset, error) {
	bytes, err := migrations54_tx_preconditions_and_account_fieldsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/54_tx_preconditions_and_account_fields.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0x72, 0xbe, 0x5c, 0xbd, 0xfb, 0xfd, 0x70, 0xf0, 0x2f, 0x4e, 0x76, 0x36, 0x7b, 0xb9, 0xd5, 0xfb, 0x25, 0xe8, 0x13, 0xb1, 0xf6, 0x59, 0x9d, 0xac, 0xec, 0xc3, 0x6b, 0xbe, 0x8f, 0xae, 0xb3}}
	return a, nil
}

var _migrations55_filter_rulesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\x31\x8f\xd3\x40\x10\x85\x7b\xff\x8a\xe9\x2e\x11\x31\xa2\x40\x34\xa9\x02\x31\x52\x24\xcb\x81\x9c\x0d\x05\x42\xd6\xd8\x3b\x3e\x8f\xb4\xde\xb5\x76\xc6\x5c\x00\xf1\xdf\x51\xce\x77\xce\x99\x04\x5a\xb6\xfe\xde\xdb\xe7\xcf\x1b\xc7\xf0\xa2\xe3\xbb\x80\x4a\x50\xf4\x51\xf4\xee\x90\x6c\xf2\x04\xf2\xcd\xdb\x34\x01\xac\x6b\x3f\x38\x2d\x1b\xb6\x4a\xa1\x0c\x83\x25\x81\x45\x04\x00\x40\x0e\x2b\x4b\x06\x2a\xef\x2d\x64\xfb\x1c\xb2\x22\x4d\xc1\x50\x83\x83\x55\x68\xd0\x0a\xad\x1e\xc0\xfb\x96\x95\x2c\x8b\xc2\x37\x0c\x75\x8b\xe1\xcb\xd7\x89\x1f\x09\x8b\xa2\x65\xe7\x0d\x37\x7c\x2a\xe4\x3b\x76\x3a\x21\xd1\x72\xfd\xe7\x28\x11\xfa\xff\x93\xe2\x18\xd8\x09\x05\x05\x6d\x69\xba\xc4\xb0\x8c\x1b\x44\x4f\x42\x1b\x1f\x80\xb0\x6e\x41\x86\xbe\xf7\x41\xc9\xc0\xb8\x1b\xb8\xeb\x2d\x75\xe4\x14\x95\xbd\x8b\x76\xd9\x6d\x72\xc8\x61\x97\xe5\xfb\xeb\xd2\x3f\x6d\xd2\x22\xb9\x85\xc5\xf8\x15\x70\xf3\xf3\xd7\xcd\x0a\x5e\x2d\xd7\xf3\xe4\xa5\x99\xbf\xe6\xe6\x4e\xf5\x28\x43\x55\x06\x92\xc1\xea\x93\x4e\x0d\xe8\x04\xeb\xd3\xbe\xb2\x45\x69\x61\x3c\x8f\xca\x16\x6f\x5e\x2f\xcf\x92\x8b\x6c\xf7\xb1\x48\x46\x77\xec\x1c\x85\xf2\x22\xfd\x2c\x37\x72\x7a\x7c\xbc\x10\x66\x47\xe9\xa8\x2b\x88\x63\x10\x0a\x8c\x96\x7f\x90\x81\x96\x45\x7d\xf8\xfe\x32\x3f\x97\x3e\x54\xc8\x50\x75\xac\x4a\xa6\xc4\xe7\x2d\xca\x1d\x89\x62\xd7\x9f\x07\x6e\x93\xf7\x9b\x22\xcd\x21\xdb\x7f\x5e\x2c\x9f\x7e\xe0\xf4\xf0\xb7\xfe\xde\x45\xd1\xf6\xb0\xff\xf0\xaf\x87\x5f\xa3\xd4\x68\x68\x3d\x03\x2f\x95\x5f\xc3\xe6\x7e\x27\xe2\x77\x00\x00\x00\xff\xff\xa6\x50\xb1\x3f\x7d\x03\x00\x00")

func migrations55_filter_rulesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations55_filter_rulesSql,
		"migrations/55_filter_rules.sql",
	)
}

func migrations55_filter_rulesSql() (*asset, error) {
	bytes, err := migrations55_filter_rulesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/55_filter_rules.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x38, 0x43, 0xd4, 0x1, 0x66, 0xe5, 0xf6, 0x21, 0x51, 0xd1, 0xd1, 0x96, 0x82, 0x36, 0xf5, 0xe7, 0x48, 0x82, 0x12, 0xcb, 0x5c, 0x2, 0x11, 0xc1, 0xb, 0x1f, 0xa4, 0x83, 0x1e, 0x57, 0xd7, 0xdd}}
	return a, nil
}

var _migrations56_trade_aggregation_autovacSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x4a\xcc\x29\x49\x2d\x52\x28\x49\x4c\xca\x49\x55\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\x2f\x29\x4a\x4c\x49\x2d\x8e\x37\x33\x30\x30\x30\x50\x28\x4e\x2d\x51\xd0\xe0\x52\x50\x48\x2c\x2d\xc9\x2f\x4b\x4c\x2e\x2d\xcd\x8d\x87\x52\xc5\xc9\x89\x39\xa9\xf1\x69\x89\xc9\x25\xf9\x45\x0a\xb6\x0a\x06\x7a\x06\xa6\x3a\xa8\x0a\x13\xf3\x12\x73\x2a\xab\x52\xb1\xa8\x34\x32\xe5\xd2\xb4\xe6\xe2\x42\x76\x8d\x4b\x7e\x79\x1e\x75\xdd\x63\x48\xac\x73\xc0\x8e\x01\x04\x00\x00\xff\xff\x9e\xb7\x27\x2f\x1a\x01\x00\x00")

func migrations56_trade_aggregation_autovacSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations56_trade_aggregation_autovacSql,
		"migrations/56_trade_aggregation_autovac.sql",
	)
}

func migrations56_trade_aggregation_autovacSql() (*asset, error) {
	bytes, err := migrations56_trade_aggregation_autovacSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/56_trade_aggregation_autovac.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb1, 0xdc, 0x40, 0x79, 0x76, 0xfb, 0x1e, 0x93, 0xe9, 0x1b, 0x29, 0xc8, 0xba, 0xed, 0xf9, 0x82, 0xf9, 0x35, 0x21, 0x30, 0xd1, 0xb, 0x6d, 0x90, 0x32, 0xe5, 0x39, 0xf7, 0x21, 0xfd, 0x33, 0xf6}}
	return a, nil
}

var _migrations5_create_trades_tableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x94\x51\x6f\xaa\x40\x10\x85\xdf\xf9\x15\x13\x9f\x30\x17\x93\x7b\x6f\x5a\x5f\x4c\x9a\x58\x25\xad\xa9\xc1\xd6\x4a\xd2\x37\xb2\xb0\x23\x6c\xa2\x2c\x99\x1d\xda\xf0\xef\x1b\x68\x69\x10\x57\xad\xaf\x9c\x39\x67\x38\xbb\x5f\x76\x34\x82\x3f\x7b\x95\x92\x60\x84\xb0\x70\x66\x6b\x7f\xba\xf1\x61\x33\xbd\x5f\xfa\x90\x29\xc3\x9a\xaa\x88\x49\x48\x34\xe0\x3a\x00\xf0\xf3\x51\x17\x48\x82\x95\xce\x23\x25\x21\x56\xa9\xca\x19\x82\xd5\x06\x82\x70\xb9\xf4\x9a\xc9\x81\x26\x89\x34\x00\x95\x33\xa6\x48\x1d\xb5\x91\xf5\x76\x8b\x64\x35\x37\xb2\xc1\xdd\xee\x84\x5e\xcb\x71\x59\x9d\x75\xeb\x9d\x8c\x84\x31\xc8\x11\x57\x05\x42\x92\x09\x12\x09\x23\xc1\xbb\xa0\x4a\xe5\xa9\x3b\xbe\x19\xf6\x22\x3b\x1e\x65\x4c\x89\x64\x71\xdd\x8e\xcf\xb8\x12\x2d\x6d\x9b\xfe\xfd\xb7\x7b\xf6\xba\xcc\xb9\xff\xff\x30\x7b\xf4\x67\x4f\xe0\x76\x47\xee\xe0\xef\xf0\xbb\x57\xac\xcb\x34\xe3\x6b\x9b\x1d\xb8\xae\xe8\x76\xe0\xfb\x75\xbb\xd6\x75\xb6\xdf\xe1\x50\xdd\xd0\x19\x4e\x9c\x96\xbf\x30\x58\xbc\x84\x3e\x2c\x82\xb9\xff\x06\x19\x93\x8c\x0a\x25\x61\x15\xf4\x91\x0c\x5f\x17\xc1\x03\xc4\x4c\x88\xe0\xda\xc8\xf4\x5a\x0a\x3b\xe1\x9d\xd4\xb8\x8a\x1a\x0c\x2f\x45\xb7\xac\xda\x52\xea\x90\xfa\xb6\x2e\x65\xf4\x90\xf4\xfa\xe4\x78\xc7\x00\x9e\x5a\xf7\x75\x78\x97\x16\x1e\xb1\xe2\x1d\x5f\xa8\x67\x63\xa3\x5e\xdb\x7d\x17\xe6\xfa\x23\x77\xe6\xeb\xd5\xb3\xfd\x5d\x48\x84\x49\x84\xc4\x89\xf3\x19\x00\x00\xff\xff\x79\x87\x24\x6b\x4c\x04\x00\x00")

func migrations5_create_trades_tableSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations5_create_trades_tableSql,
		"migrations/5_create_trades_table.sql",
	)
}

func migrations5_create_trades_tableSql() (*asset, error) {
	bytes, err := migrations5_create_trades_tableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/5_create_trades_table.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4f, 0x51, 0x6e, 0x49, 0x10, 0xd6, 0xf1, 0x48, 0xc6, 0x8d, 0xe5, 0xbe, 0x2, 0x94, 0xba, 0x20, 0x37, 0x7b, 0x10, 0x8b, 0x84, 0x7, 0xac, 0x1b, 0xb4, 0xac, 0xc3, 0x6d, 0xbc, 0x54, 0x81, 0xe3}}
	return a, nil
}

var _migrations6_create_assets_tableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3d\x4f\xc3\x30\x18\x84\x77\xff\x8a\x1b\x1d\x91\x0e\x20\xe8\x92\xc9\x34\x16\x58\x18\xa7\xb8\x31\xa2\x53\xe5\x26\x16\x78\x80\x54\xb6\x11\xca\xbf\x47\xaa\x28\xf9\x50\xe6\x7b\xf4\xbc\xef\xdd\x6a\x85\xab\x4f\xff\x1e\x6c\x72\x30\x27\xb2\xd1\x9c\xd5\x1c\x35\xbb\x97\x1c\x1f\x3e\xa6\x2e\xf4\x07\x1b\xa3\x4b\x11\x94\x00\x80\x6f\xb1\xe3\x5a\x30\x89\xad\x16\xcf\x4c\xef\xf1\xc4\xf7\xc8\xcf\xd9\x19\x3c\xa4\xfe\xe4\xf0\xca\xf4\xe6\x91\x69\xba\xbe\xcd\xa0\xaa\x1a\xca\x48\x39\x86\x9a\xae\x1d\xa0\xeb\x9b\x65\xc8\xc7\xf8\xed\xc2\x3f\x76\xb7\x9e\x63\x46\x89\x17\xc3\xe9\xa0\xcc\x47\x3f\xe4\x13\x4b\x46\xb2\x82\x5c\xfa\x09\x55\xf2\xb7\xbf\xf8\xd8\x5f\xee\x54\x6a\x5e\xd9\xec\x84\x7a\xc0\x31\x05\xe7\x40\x27\xb6\x82\x90\xf1\x74\x65\xf7\xf3\x45\x4a\x5d\x6d\x97\xa7\x6b\x6c\x6c\x6c\xeb\x8a\xdf\x00\x00\x00\xff\xff\xfb\x53\x3e\x81\x6e\x01\x00\x00")

func migrations6_create_assets_tableSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations6_create_assets_tableSql,
		"migrations/6_create_assets_table.sql",
	)
}

func migrations6_create_assets_tableSql() (*asset, error) {
	bytes, err := migrations6_create_assets_tableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/6_create_assets_table.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb1, 0x3f, 0x47, 0xea, 0x8a, 0x5d, 0x60, 0xc8, 0x90, 0x36, 0xc8, 0x4f, 0x68, 0xc5, 0xd3, 0xa0, 0xcd, 0xae, 0x5a, 0xc3, 0x75, 0xbd, 0xb4, 0xbb, 0x51, 0xf2, 0x68, 0x54, 0x79, 0xac, 0xa2, 0x8a}}
	return a, nil
}

var _migrations7_modify_trades_tableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\x4d\x8f\xda\x30\x14\xbc\xe7\x57\x3c\xed\x29\x51\xc3\xaa\xad\xda\xbd\x6c\x55\x09\x58\x97\x46\x65\xc3\x36\x04\xa9\xb7\xc8\x89\xdf\x06\xab\xc1\x8e\x6c\xa7\x88\x7f\x5f\x05\x08\xcd\x27\xb0\xbb\x87\x5e\x93\x99\x79\x6f\xec\xf1\x8c\x46\xf0\x6e\xc3\x53\x45\x0d\xc2\x2a\xb7\x46\x23\x60\x4a\xe6\x60\xd6\x08\x32\x63\x60\x14\x65\xa8\xc1\xd0\x38\xc3\x5b\xc8\x0b\x03\x14\x04\x6e\x41\x0a\x04\x2e\x20\xcf\x68\x82\xd6\x43\xb0\x78\x82\x70\x3c\x99\x13\x58\x73\x6d\xa4\xda\x45\x07\xde\xbd\x35\x0d\xc8\x38\x24\xbd\x3f\xc1\xb6\x00\xe0\xf4\x51\xe6\xa8\xa8\xe1\x52\x44\x9c\xc1\xc4\x9b\x79\x7e\x08\xfe\x22\x04\x7f\x35\x9f\xbb\x7b\xe4\x8d\x54\x0c\xd5\x0d\x78\x7e\x48\x66\x24\x68\xfd\xcd\x90\xa5\xa8\xa2\x24\x93\x1a\x59\x44\x0d\x84\xde\x23\x59\x86\xe3\xc7\xa7\x16\x50\x3e\x3f\xa3\x1a\x1c\x12\x53\x8d\x11\x4d\x12\x59\x08\xd3\x03\x82\x80\x7c\x23\x01\xf1\xa7\x64\x79\xda\xfc\x88\xd6\x36\x67\x4e\x5d\x44\x6b\xbc\x5a\xa2\xc4\x76\x04\x36\xa5\x6c\x87\x3e\xfd\x4e\xa6\x3f\xc0\xae\x43\xbe\xc2\xfb\x23\x71\xbf\x09\xaa\x37\x3b\x38\xe9\xbc\xc1\xc4\x49\xe3\xac\x8f\x16\xea\x9f\x95\xbd\x41\xae\x23\x8d\x59\x86\x0a\x26\x8b\xc5\x9c\x8c\xfd\xc3\xbf\x3d\xd7\x6e\x1e\xf3\x97\xce\xd2\x8e\xe5\xdc\x5b\x55\x04\x57\xbe\xf7\x73\x45\xc0\xf3\x1f\xc8\x2f\x58\x1b\xc5\xa2\x9c\x33\x58\xf8\xed\x54\xae\x96\x9e\x3f\x83\xd8\x28\x44\xb0\xfb\xc2\xe9\x56\x41\x74\x4e\xf1\xae\x8b\x52\xae\x22\xc3\x37\x18\x65\x52\xfe\x2e\xf2\xc1\x09\x93\x30\x20\xa4\x69\xc1\xed\x38\x70\x3b\xb1\xee\x1d\x5a\xd1\xae\x1a\xd9\x39\xa5\x3e\xc5\xeb\x1d\x5c\xb5\x60\xbc\x8b\xf6\xcf\xee\xd2\x79\x57\x6f\xb3\xbc\x37\xab\x5e\x4d\x0f\x72\x2b\x1a\xe5\x24\x70\x8b\xaa\xea\x25\x85\x5c\x68\x53\xe2\xaa\xde\x92\x02\x6f\x87\x7b\x09\x12\xaa\x13\xca\xf0\xd5\xfd\x14\xf3\x94\x0b\x33\xd0\x4f\x5c\x18\x4c\x51\x0d\xd5\x4e\x2f\xf7\x10\xf2\xc1\xdf\x71\xb1\x3b\x47\x96\x19\x3b\x5e\xa7\xd9\xe5\x08\xc9\x9a\x2a\x9a\x18\x54\xf0\x87\xaa\x1d\x17\xa9\x7d\xf7\xc9\x19\xe6\x70\xad\x0b\x54\x3d\xac\xcf\x77\x67\x58\x89\x64\x7d\x93\x3e\x7c\xec\xe7\x1c\x5e\x77\x6b\xfd\xaa\x03\xea\x90\x5a\x01\xc8\x22\x5d\x9b\x97\x1a\x6b\xb0\x5e\x60\xad\xc1\xbb\xda\x5c\xc5\x3a\x6b\xaf\x09\x2a\x0d\xfe\x87\x62\x7a\xc5\x13\x6c\x8b\x94\x1a\xe5\x55\x5d\x92\x68\xe5\xd1\x6d\xc7\xc6\xed\xa6\x6f\x60\xda\xe1\xe4\x2e\xcd\xeb\x04\xc5\xed\xde\xa6\xdb\x17\x0c\xe7\xfe\x6f\x00\x00\x00\xff\xff\x2a\xff\xe8\x4a\xff\x08\x00\x00")

func migrations7_modify_trades_tableSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations7_modify_trades_tableSql,
		"migrations/7_modify_trades_table.sql",
	)
}

func migrations7_modify_trades_tableSql() (*asset, error) {
	bytes, err := migrations7_modify_trades_tableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/7_modify_trades_table.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb1, 0x2e, 0xba, 0x36, 0x5e, 0x3a, 0x3f, 0x3a, 0x8f, 0xe4, 0xfd, 0xc6, 0xb8, 0xeb, 0xbf, 0xda, 0x2b, 0xc6, 0xcd, 0xe3, 0xb5, 0x9a, 0x78, 0xf9, 0x9c, 0x2d, 0xcf, 0xe7, 0xb1, 0x6e, 0xa0, 0x3e}}
	return a, nil
}

var _migrations8_add_aggregatorsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x31\x6f\xdb\x30\x14\x84\x77\xfe\x8a\x1b\x34\xd8\xa8\x65\xa3\x1d\x1b\x78\xa0\x65\x5a\x10\x40\x2b\xae\x48\x0d\x99\x02\x26\x61\x64\xa1\x32\xa5\x92\xcf\x30\xfc\xef\x0b\xaa\x4d\x6c\xb4\x05\x1a\x14\xcd\x46\x1c\xf8\x0e\x77\xdf\x7b\x69\x8a\x0f\x87\xb6\xf1\x86\x2c\xea\x81\xb1\x34\xc5\x9e\x68\x08\x9f\x17\x8b\x53\xfb\xb5\x9d\x0f\x7d\xa0\xc6\xdb\xf0\xad\x9b\xf7\xbe\x19\xb5\xc5\xa6\xf5\x81\x16\x9d\x09\x74\x3f\x31\x4d\xe3\x6d\x63\xc8\x4e\xe3\x68\xe6\x6d\x34\x32\x78\x3e\xba\x47\x6a\x7b\x07\xda\x1b\x82\xe9\x4e\xe6\x1c\xe0\x2d\x1d\xbd\x0b\xa0\xbd\xc5\x73\xf4\x80\xeb\x5d\x5a\xd6\x52\xa2\x25\x7b\x60\x59\x25\xb8\x16\xd8\xd4\x65\xa6\x8b\xdb\x12\xc3\xf1\xa1\x6b\x1f\xe7\xe3\xd7\x7b\xd3\x34\x98\xc0\xb8\xb3\xed\xec\xc1\x3a\x9a\x5d\xbd\x31\x65\x40\x25\x74\x5d\x95\xea\x5a\x96\xbc\xcc\x6b\x9e\x0b\xa8\x2f\x12\xc5\x76\x5b\x6b\xbe\x92\x02\x4a\x57\x45\xa6\xc1\x15\x92\x04\x4a\x48\x91\x69\x24\x1f\x91\x24\x37\x63\x7f\xee\x9e\x62\x44\x87\x93\x37\x03\x8c\xc3\x6b\x47\x18\xdf\x1f\xdd\x13\x5a\x7a\xc9\xca\xf3\xbc\x12\x79\x7c\xfd\x0c\xbb\x29\x2a\xa5\x31\x61\x2a\xb6\xc0\x12\xbb\x7a\x25\x8b\xec\xd2\x61\xc6\x56\x5c\x09\x7d\xb7\x13\x58\x82\x97\x77\x42\x8a\xad\x28\xf5\x8c\xa9\xdf\x34\x36\xfd\x91\xe7\xed\x50\xe3\x4a\xde\xc6\x74\x5c\xde\x7b\x23\xfd\xf4\x7f\x90\x4a\x3e\x12\x0d\xb1\x3e\x00\x2c\x7f\x2d\x31\x63\x0f\x26\x58\x3a\x0f\x16\xcb\xeb\x3a\x2c\x8c\xda\x38\x72\x91\x5f\xb0\xbe\x9e\xfd\xba\x3f\x39\xb6\xae\x6e\x77\xff\x74\x79\xc8\xb8\xca\xf8\x5a\xdc\xfc\xd9\xe2\x02\xfa\xaf\x06\xdf\x03\x00\x00\xff\xff\x7e\x17\x8e\x03\x8b\x03\x00\x00")

func migrations8_add_aggregatorsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations8_add_aggregatorsSql,
		"migrations/8_add_aggregators.sql",
	)
}

func migrations8_add_aggregatorsSql() (*asset, error) {
	bytes, err := migrations8_add_aggregatorsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/8_add_aggregators.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0xba, 0x87, 0x6f, 0x41, 0xf3, 0xf6, 0x28, 0x25, 0xc2, 0x19, 0xdf, 0x41, 0x9a, 0x4b, 0xf3, 0x8, 0x37, 0x29, 0x2b, 0x92, 0x12, 0x9f, 0xb5, 0x9f, 0x9d, 0x50, 0x82, 0x6, 0xa5, 0xbb, 0xf6}}
	return a, nil
}

var _migrations8_create_asset_stats_tableSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x91\xc1\x6e\xf2\x30\x10\x84\xef\x79\x8a\x3d\x82\xfe\x9f\x5b\xd5\x0b\x27\x63\x6f\xa9\x55\xe3\x44\x1b\xa7\x2a\xa7\xc8\x24\x2e\x8d\x44\x92\x2a\x36\xaa\x78\xfb\xca\x84\x56\xa1\x8a\x4f\xb6\xf5\x69\x66\x67\x67\xb5\x82\x7f\x6d\x73\x1c\x6c\x70\x50\x7c\x26\x9c\x90\x19\x04\xc3\x36\x0a\xc1\x7a\xef\x42\xe9\x83\x0d\x1e\x16\x09\x00\x40\x53\xc3\xdd\xd9\xc8\xad\xd4\x66\xbc\x67\x24\x77\x8c\xf6\xf0\x82\x7b\x20\x7c\x42\x42\xcd\x31\x87\x8f\xc6\x87\x7e\xb8\x94\x57\x31\x0f\xa9\x06\x81\x0a\x0d\x02\x67\x39\x67\x02\xe3\x4f\x91\x89\xe8\x4a\x98\x1b\x92\xdc\xfc\xbf\x7a\xd9\xb6\x3f\x77\x61\xde\x4b\xa7\x06\x74\xa1\xd4\x48\x76\xe7\xb6\xb4\x55\x15\x71\x1f\xdf\x52\x1b\xdc\x22\xcd\x90\xef\x27\x7b\xf4\x93\xf9\xf3\x1d\x53\xea\xa6\x7a\x4f\x86\xbe\x3d\x4d\x93\xbe\x32\xe2\xcf\x8c\x16\x8f\x0f\xcb\x5f\x32\x59\xae\x93\x9f\x8d\x49\x2d\xf0\xed\xb6\xb1\xc3\xa5\xac\xfa\xda\xc5\x64\x7f\xd2\x17\xb9\xd4\x5b\x38\x84\xc1\x39\x58\x8c\x70\x24\xa3\xce\xb4\x08\xd1\x7f\x75\x89\xa0\x34\x9b\x29\xa2\xb2\xbe\xb2\xb5\x5b\x7f\x07\x00\x00\xff\xff\xa9\x7e\x10\x6f\xb9\x01\x00\x00")

func migrations8_create_asset_stats_tableSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations8_create_asset_stats_tableSql,
		"migrations/8_create_asset_stats_table.sql",
	)
}

func migrations8_create_asset_stats_tableSql() (*asset, error) {
	bytes, err := migrations8_create_asset_stats_tableSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/8_create_asset_stats_table.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2d, 0x21, 0x5, 0xfc, 0x3f, 0xe0, 0xe1, 0xe6, 0x50, 0x2c, 0x25, 0xc0, 0x23, 0x87, 0xa3, 0x99, 0xad, 0xc8, 0xc1, 0x67, 0xca, 0x65, 0xc0, 0x91, 0xf6, 0x5c, 0x29, 0xab, 0x78, 0xbe, 0xe4, 0x5e}}
	return a, nil
}

var _migrations9_add_header_xdrSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\xf0\xf7\xf3\x89\x54\xc8\xc8\x2c\x2e\xc9\x2f\xaa\x8c\xcf\x49\x4d\x49\x4f\x2d\x2a\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x80\x08\xc5\x67\xa4\x26\xa6\xa4\x16\x29\x94\xa4\x56\x94\x28\xf8\x85\xfa\xf8\x58\x73\x71\x21\x1b\xea\x92\x5f\x9e\x47\xd8\x58\x97\x20\xff\x00\xac\xe6\x5a\x03\x02\x00\x00\xff\xff\xe1\xe4\xef\x11\xa1\x00\x00\x00")

func migrations9_add_header_xdrSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations9_add_header_xdrSql,
		"migrations/9_add_header_xdr.sql",
	)
}

func migrations9_add_header_xdrSql() (*asset, error) {
	bytes, err := migrations9_add_header_xdrSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/9_add_header_xdr.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x44, 0xe5, 0x20, 0x47, 0xc8, 0x66, 0xd0, 0x16, 0xfa, 0xeb, 0xe, 0xba, 0x80, 0xbd, 0xc3, 0xa6, 0x0, 0x9e, 0xc, 0xb5, 0x45, 0xb9, 0x78, 0x26, 0x8, 0xef, 0x94, 0x23, 0xbe, 0x85, 0x2c, 0xe4}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/10_add_trades_price.sql":                                 migrations10_add_trades_priceSql,
	"migrations/11_add_trades_account_index.sql":                         migrations11_add_trades_account_indexSql,
	"migrations/12_asset_stats_amount_string.sql":                        migrations12_asset_stats_amount_stringSql,
	"migrations/13_trade_offer_ids.sql":                                  migrations13_trade_offer_idsSql,
	"migrations/14_fix_asset_toml_field.sql":                             migrations14_fix_asset_toml_fieldSql,
	"migrations/15_ledger_failed_txs.sql":                                migrations15_ledger_failed_txsSql,
	"migrations/16_ingest_failed_transactions.sql":                       migrations16_ingest_failed_transactionsSql,
	"migrations/17_transaction_fee_paid.sql":                             migrations17_transaction_fee_paidSql,
	"migrations/18_account_for_signers.sql":                              migrations18_account_for_signersSql,
	"migrations/19_offers.sql":                                           migrations19_offersSql,
	"migrations/1_initial_schema.sql":                                    migrations1_initial_schemaSql,
	"migrations/20_account_for_signer_index.sql":                         migrations20_account_for_signer_indexSql,
	"migrations/21_trades_remove_zero_amount_constraints.sql":            migrations21_trades_remove_zero_amount_constraintsSql,
	"migrations/22_trust_lines.sql":                                      migrations22_trust_linesSql,
	"migrations/23_exp_asset_stats.sql":                                  migrations23_exp_asset_statsSql,
	"migrations/24_accounts.sql":                                         migrations24_accountsSql,
	"migrations/25_expingest_rename_columns.sql":                         migrations25_expingest_rename_columnsSql,
	"migrations/26_exp_history_ledgers.sql":                              migrations26_exp_history_ledgersSql,
	"migrations/27_exp_history_transactions.sql":                         migrations27_exp_history_transactionsSql,
	"migrations/28_exp_history_operations.sql":                           migrations28_exp_history_operationsSql,
	"migrations/29_exp_history_assets.sql":                               migrations29_exp_history_assetsSql,
	"migrations/2_index_participants_by_toid.sql":                        migrations2_index_participants_by_toidSql,
	"migrations/30_exp_history_trades.sql":                               migrations30_exp_history_tradesSql,
	"migrations/31_exp_history_effects.sql":                              migrations31_exp_history_effectsSql,
	"migrations/32_drop_exp_history_tables.sql":                          migrations32_drop_exp_history_tablesSql,
	"migrations/33_remove_unused.sql":                                    migrations33_remove_unusedSql,
	"migrations/34_fee_bump_transactions.sql":                            migrations34_fee_bump_transactionsSql,
	"migrations/35_drop_participant_id.sql":                              migrations35_drop_participant_idSql,
	"migrations/36_deleted_offers.sql":                                   migrations36_deleted_offersSql,
	"migrations/37_add_tx_set_operation_count_to_ledgers.sql":            migrations37_add_tx_set_operation_count_to_ledgersSql,
	"migrations/38_add_constraints.sql":                                  migrations38_add_constraintsSql,
	"migrations/39_claimable_balances.sql":                               migrations39_claimable_balancesSql,
	"migrations/39_history_trades_indices.sql":                           migrations39_history_trades_indicesSql,
	"migrations/3_use_sequence_in_history_accounts.sql":                  migrations3_use_sequence_in_history_accountsSql,
	"migrations/40_fix_inner_tx_max_fee_constraint.sql":                  migrations40_fix_inner_tx_max_fee_constraintSql,
	"migrations/41_add_sponsor_to_state_tables.sql":                      migrations41_add_sponsor_to_state_tablesSql,
	"migrations/42_add_num_sponsored_and_num_sponsoring_to_accounts.sql": migrations42_add_num_sponsored_and_num_sponsoring_to_accountsSql,
	"migrations/43_add_claimable_balances_flags.sql":                     migrations43_add_claimable_balances_flagsSql,
	"migrations/44_asset_stat_accounts_and_balances.sql":                 migrations44_asset_stat_accounts_and_balancesSql,
	"migrations/45_add_claimable_balances_history.sql":                   migrations45_add_claimable_balances_historySql,
	"migrations/46_add_muxed_accounts.sql":                               migrations46_add_muxed_accountsSql,
	"migrations/47_precompute_trade_aggregations.sql":                    migrations47_precompute_trade_aggregationsSql,
	"migrations/48_rebuild_trade_aggregations.sql":                       migrations48_rebuild_trade_aggregationsSql,
	"migrations/49_add_brin_index_trade_aggregations.sql":                migrations49_add_brin_index_trade_aggregationsSql,
	"migrations/4_add_protocol_version.sql":                              migrations4_add_protocol_versionSql,
	"migrations/50_liquidity_pools.sql":                                  migrations50_liquidity_poolsSql,
	"migrations/51_remove_ht_unused_indexes.sql":                         migrations51_remove_ht_unused_indexesSql,
	"migrations/52_add_trade_type_index.sql":                             migrations52_add_trade_type_indexSql,
	"migrations/53_add_trades_rounding_slippage.sql":                     migrations53_add_trades_rounding_slippageSql,
	"migrations/54_tx_preconditions_and_account_fields.sql":              migrations54_tx_preconditions_and_account_fieldsSql,
	"migrations/55_filter_rules.sql":                                     migrations55_filter_rulesSql,
	"migrations/56_trade_aggregation_autovac.sql":                        migrations56_trade_aggregation_autovacSql,
	"migrations/5_create_trades_table.sql":                               migrations5_create_trades_tableSql,
	"migrations/6_create_assets_table.sql":                               migrations6_create_assets_tableSql,
	"migrations/7_modify_trades_table.sql":                               migrations7_modify_trades_tableSql,
	"migrations/8_add_aggregators.sql":                                   migrations8_add_aggregatorsSql,
	"migrations/8_create_asset_stats_table.sql":                          migrations8_create_asset_stats_tableSql,
	"migrations/9_add_header_xdr.sql":                                    migrations9_add_header_xdrSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"10_add_trades_price.sql":                                 &bintree{migrations10_add_trades_priceSql, map[string]*bintree{}},
		"11_add_trades_account_index.sql":                         &bintree{migrations11_add_trades_account_indexSql, map[string]*bintree{}},
		"12_asset_stats_amount_string.sql":                        &bintree{migrations12_asset_stats_amount_stringSql, map[string]*bintree{}},
		"13_trade_offer_ids.sql":                                  &bintree{migrations13_trade_offer_idsSql, map[string]*bintree{}},
		"14_fix_asset_toml_field.sql":                             &bintree{migrations14_fix_asset_toml_fieldSql, map[string]*bintree{}},
		"15_ledger_failed_txs.sql":                                &bintree{migrations15_ledger_failed_txsSql, map[string]*bintree{}},
		"16_ingest_failed_transactions.sql":                       &bintree{migrations16_ingest_failed_transactionsSql, map[string]*bintree{}},
		"17_transaction_fee_paid.sql":                             &bintree{migrations17_transaction_fee_paidSql, map[string]*bintree{}},
		"18_account_for_signers.sql":                              &bintree{migrations18_account_for_signersSql, map[string]*bintree{}},
		"19_offers.sql":                                           &bintree{migrations19_offersSql, map[string]*bintree{}},
		"1_initial_schema.sql":                                    &bintree{migrations1_initial_schemaSql, map[string]*bintree{}},
		"20_account_for_signer_index.sql":                         &bintree{migrations20_account_for_signer_indexSql, map[string]*bintree{}},
		"21_trades_remove_zero_amount_constraints.sql":            &bintree{migrations21_trades_remove_zero_amount_constraintsSql, map[string]*bintree{}},
		"22_trust_lines.sql":                                      &bintree{migrations22_trust_linesSql, map[string]*bintree{}},
		"23_exp_asset_stats.sql":                                  &bintree{migrations23_exp_asset_statsSql, map[string]*bintree{}},
		"24_accounts.sql":                                         &bintree{migrations24_accountsSql, map[string]*bintree{}},
		"25_expingest_rename_columns.sql":                         &bintree{migrations25_expingest_rename_columnsSql, map[string]*bintree{}},
		"26_exp_history_ledgers.sql":                              &bintree{migrations26_exp_history_ledgersSql, map[string]*bintree{}},
		"27_exp_history_transactions.sql":                         &bintree{migrations27_exp_history_transactionsSql, map[string]*bintree{}},
		"28_exp_history_operations.sql":                           &bintree{migrations28_exp_history_operationsSql, map[string]*bintree{}},
		"29_exp_history_assets.sql":                               &bintree{migrations29_exp_history_assetsSql, map[string]*bintree{}},
		"2_index_participants_by_toid.sql":                        &bintree{migrations2_index_participants_by_toidSql, map[string]*bintree{}},
		"30_exp_history_trades.sql":                               &bintree{migrations30_exp_history_tradesSql, map[string]*bintree{}},
		"31_exp_history_effects.sql":                              &bintree{migrations31_exp_history_effectsSql, map[string]*bintree{}},
		"32_drop_exp_history_tables.sql":                          &bintree{migrations32_drop_exp_history_tablesSql, map[string]*bintree{}},
		"33_remove_unused.sql":                                    &bintree{migrations33_remove_unusedSql, map[string]*bintree{}},
		"34_fee_bump_transactions.sql":                            &bintree{migrations34_fee_bump_transactionsSql, map[string]*bintree{}},
		"35_drop_participant_id.sql":                              &bintree{migrations35_drop_participant_idSql, map[string]*bintree{}},
		"36_deleted_offers.sql":                                   &bintree{migrations36_deleted_offersSql, map[string]*bintree{}},
		"37_add_tx_set_operation_count_to_ledgers.sql":            &bintree{migrations37_add_tx_set_operation_count_to_ledgersSql, map[string]*bintree{}},
		"38_add_constraints.sql":                                  &bintree{migrations38_add_constraintsSql, map[string]*bintree{}},
		"39_claimable_balances.sql":                               &bintree{migrations39_claimable_balancesSql, map[string]*bintree{}},
		"39_history_trades_indices.sql":                           &bintree{migrations39_history_trades_indicesSql, map[string]*bintree{}},
		"3_use_sequence_in_history_accounts.sql":                  &bintree{migrations3_use_sequence_in_history_accountsSql, map[string]*bintree{}},
		"40_fix_inner_tx_max_fee_constraint.sql":                  &bintree{migrations40_fix_inner_tx_max_fee_constraintSql, map[string]*bintree{}},
		"41_add_sponsor_to_state_tables.sql":                      &bintree{migrations41_add_sponsor_to_state_tablesSql, map[string]*bintree{}},
		"42_add_num_sponsored_and_num_sponsoring_to_accounts.sql": &bintree{migrations42_add_num_sponsored_and_num_sponsoring_to_accountsSql, map[string]*bintree{}},
		"43_add_claimable_balances_flags.sql":                     &bintree{migrations43_add_claimable_balances_flagsSql, map[string]*bintree{}},
		"44_asset_stat_accounts_and_balances.sql":                 &bintree{migrations44_asset_stat_accounts_and_balancesSql, map[string]*bintree{}},
		"45_add_claimable_balances_history.sql":                   &bintree{migrations45_add_claimable_balances_historySql, map[string]*bintree{}},
		"46_add_muxed_accounts.sql":                               &bintree{migrations46_add_muxed_accountsSql, map[string]*bintree{}},
		"47_precompute_trade_aggregations.sql":                    &bintree{migrations47_precompute_trade_aggregationsSql, map[string]*bintree{}},
		"48_rebuild_trade_aggregations.sql":                       &bintree{migrations48_rebuild_trade_aggregationsSql, map[string]*bintree{}},
		"49_add_brin_index_trade_aggregations.sql":                &bintree{migrations49_add_brin_index_trade_aggregationsSql, map[string]*bintree{}},
		"4_add_protocol_version.sql":                              &bintree{migrations4_add_protocol_versionSql, map[string]*bintree{}},
		"50_liquidity_pools.sql":                                  &bintree{migrations50_liquidity_poolsSql, map[string]*bintree{}},
		"51_remove_ht_unused_indexes.sql":                         &bintree{migrations51_remove_ht_unused_indexesSql, map[string]*bintree{}},
		"52_add_trade_type_index.sql":                             &bintree{migrations52_add_trade_type_indexSql, map[string]*bintree{}},
		"53_add_trades_rounding_slippage.sql":                     &bintree{migrations53_add_trades_rounding_slippageSql, map[string]*bintree{}},
		"54_tx_preconditions_and_account_fields.sql":              &bintree{migrations54_tx_preconditions_and_account_fieldsSql, map[string]*bintree{}},
		"55_filter_rules.sql":                                     &bintree{migrations55_filter_rulesSql, map[string]*bintree{}},
		"56_trade_aggregation_autovac.sql":                        &bintree{migrations56_trade_aggregation_autovacSql, map[string]*bintree{}},
		"5_create_trades_table.sql":                               &bintree{migrations5_create_trades_tableSql, map[string]*bintree{}},
		"6_create_assets_table.sql":                               &bintree{migrations6_create_assets_tableSql, map[string]*bintree{}},
		"7_modify_trades_table.sql":                               &bintree{migrations7_modify_trades_tableSql, map[string]*bintree{}},
		"8_add_aggregators.sql":                                   &bintree{migrations8_add_aggregatorsSql, map[string]*bintree{}},
		"8_create_asset_stats_table.sql":                          &bintree{migrations8_create_asset_stats_tableSql, map[string]*bintree{}},
		"9_add_header_xdr.sql":                                    &bintree{migrations9_add_header_xdrSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
