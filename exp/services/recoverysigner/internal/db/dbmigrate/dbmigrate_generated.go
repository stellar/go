// Code generated by go-bindata. DO NOT EDIT.
// sources:
// migrations/20200309000000-initial-1.sql (162B)
// migrations/20200309000001-initial-2.sql (162B)
// migrations/20200311000000-create-accounts.sql (324B)
// migrations/20200311000001-create-identities.sql (389B)
// migrations/20200311000002-create-auth-methods.sql (716B)
// migrations/20200320000000-create-accounts-audit.sql (1.23kB)
// migrations/20200320000001-create-identities-audit.sql (1.166kB)
// migrations/20200320000002-create-auth-methods-audit.sql (1.192kB)

package dbmigrate

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _migrations20200309000000Initial1Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\xd1\x0d\xc2\x30\x0c\x04\xd0\xff\x4c\x71\xff\x28\x4c\xc1\x08\x30\x80\x01\xa7\xb5\xd4\xda\x91\x6d\xa8\xb2\x3d\x8a\xf8\x40\x7c\xde\xdd\xd3\xd5\x8a\xeb\x2a\x81\x5d\x16\xa7\x14\x53\x34\xd9\x18\x12\x10\x4d\xd6\xd9\xd0\xb6\x0d\xf0\xde\x73\x80\xf4\x39\x27\x42\x13\x8f\x44\x24\x79\x8a\x2e\xe8\x26\x9a\x68\xe6\xa5\x56\xd8\xcb\x7f\x77\x81\x3b\x37\x73\xc6\xc1\x18\x9c\x58\xe9\xcd\x20\xc4\x63\xe5\x9d\xce\x65\xfa\xd3\x17\x33\x6e\xfd\x3f\x5f\xec\xd0\x52\x3e\x01\x00\x00\xff\xff\xd3\x79\x21\xda\xa2\x00\x00\x00")

func migrations20200309000000Initial1SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20200309000000Initial1Sql,
		"migrations/20200309000000-initial-1.sql",
	)
}

func migrations20200309000000Initial1Sql() (*asset, error) {
	bytes, err := migrations20200309000000Initial1SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20200309000000-initial-1.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xd1, 0x21, 0xe9, 0x6d, 0xe0, 0xfe, 0xb4, 0x8b, 0x78, 0x2, 0xae, 0x5c, 0xd5, 0x8b, 0x41, 0xb8, 0x4b, 0xaa, 0x3a, 0xea, 0x69, 0xf, 0xf3, 0x2f, 0x6c, 0xae, 0x38, 0x46, 0xb, 0x2, 0xfc}}
	return a, nil
}

var _migrations20200309000001Initial2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\xd1\x0d\xc2\x30\x0c\x04\xd0\xff\x4c\x71\xff\x28\x4c\xc1\x08\x30\x80\x01\xa7\xb5\xd4\xda\x91\x6d\xa8\xb2\x3d\x8a\xf8\x40\x7c\xde\xdd\xd3\xd5\x8a\xeb\x2a\x81\x5d\x16\xa7\x14\x53\x34\xd9\x18\x12\x10\x4d\xd6\xd9\xd0\xb6\x0d\xf0\xde\x73\x80\xf4\x39\x27\x42\x13\x8f\x44\x24\x79\x8a\x2e\xe8\x26\x9a\x68\xe6\xa5\x56\xd8\xcb\x7f\x77\x81\x3b\x37\x73\xc6\xc1\x18\x9c\x58\xe9\xcd\x20\xc4\x63\xe5\x9d\xce\x65\xfa\xd3\x17\x33\x6e\xfd\x3f\x5f\xec\xd0\x52\x3e\x01\x00\x00\xff\xff\xd3\x79\x21\xda\xa2\x00\x00\x00")

func migrations20200309000001Initial2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20200309000001Initial2Sql,
		"migrations/20200309000001-initial-2.sql",
	)
}

func migrations20200309000001Initial2Sql() (*asset, error) {
	bytes, err := migrations20200309000001Initial2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20200309000001-initial-2.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xd1, 0x21, 0xe9, 0x6d, 0xe0, 0xfe, 0xb4, 0x8b, 0x78, 0x2, 0xae, 0x5c, 0xd5, 0x8b, 0x41, 0xb8, 0x4b, 0xaa, 0x3a, 0xea, 0x69, 0xf, 0xf3, 0x2f, 0x6c, 0xae, 0x38, 0x46, 0xb, 0x2, 0xfc}}
	return a, nil
}

var _migrations20200311000000CreateAccountsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x4e\xc3\x30\x10\x44\xef\xfb\x15\x73\x4c\x44\xfb\x05\x3d\xb9\x78\x29\x16\x8e\x63\x9c\xb5\xd2\x70\x41\x56\x1c\xa1\x1e\x68\xab\x24\x15\xbf\x8f\x5a\x21\x1a\x71\xe1\xb8\x87\x99\xd9\xf7\xd6\x6b\x3c\x7c\x1e\x3e\xc6\x34\x0f\x88\x67\xa2\xc7\xc0\x4a\x18\xa2\xb6\x96\x91\xfa\xfe\x74\x39\xce\x13\x0a\x02\x0e\x19\x5b\xb3\x33\x4e\xe0\x6a\x81\x8b\xd6\xc2\x07\x53\xa9\xd0\xe1\x85\x3b\xec\xd8\x71\x50\xc2\x1a\xca\xb6\xaa\x6b\xa0\x1a\x18\xcd\x4e\x8c\x74\x2b\x22\xa0\x1f\x87\x34\x0f\xf9\x3d\xcd\x10\x53\x71\x23\xaa\xf2\x68\x8d\x3c\xdf\x4e\xbc\xd5\x8e\xef\xcd\x9a\x9f\x54\xb4\xd7\xa9\xb6\x28\x57\x04\x5c\xce\xf9\xbf\xf4\x6d\x25\xe5\x3c\x0e\xd3\x04\xe1\xfd\xfd\x51\x2a\x37\xbf\x64\xd1\x99\xd7\xc8\x30\x4e\xf3\x1e\xb5\x5b\x30\x46\xef\x39\x14\x3f\x05\xe5\x35\xb2\x94\xa3\x4f\x5f\x47\x22\x1d\x6a\xff\x47\xce\x86\xbe\x03\x00\x00\xff\xff\x35\x11\xef\x05\x44\x01\x00\x00")

func migrations20200311000000CreateAccountsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20200311000000CreateAccountsSql,
		"migrations/20200311000000-create-accounts.sql",
	)
}

func migrations20200311000000CreateAccountsSql() (*asset, error) {
	bytes, err := migrations20200311000000CreateAccountsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20200311000000-create-accounts.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0xd6, 0x9b, 0xfd, 0xbd, 0x53, 0x3b, 0xf0, 0x35, 0xd5, 0xf9, 0x9a, 0xde, 0x85, 0xe, 0xe3, 0xb4, 0x94, 0xa6, 0xe7, 0xf6, 0xaf, 0xf2, 0x54, 0xb2, 0x6f, 0xfd, 0xce, 0x61, 0xda, 0xb, 0x20}}
	return a, nil
}

var _migrations20200311000001CreateIdentitiesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x6a\x83\x40\x10\x86\xef\xfb\x14\xff\x51\x69\xf2\x04\x39\x6d\xdc\x49\xba\x74\x5d\x65\x1d\x31\xf6\x12\x44\x97\xb2\xd0\x6a\x30\x1b\xfa\xfa\xc5\x40\x6b\xa0\x85\x1e\x07\xfe\xf9\xbf\x99\x6f\xbb\xc5\xd3\x47\x78\x9b\xbb\xe8\x51\x5f\x84\xc8\x1c\x49\x26\xb0\xdc\x1b\x42\x18\xfc\x18\x43\x0c\xfe\x8a\x44\x00\x5d\xdf\x4f\xb7\x31\x9e\xc3\x80\xbd\x3e\x6a\xcb\xb0\x05\xc3\xd6\xc6\xc0\xd1\x81\x1c\xd9\x8c\xaa\xef\xd4\x15\x49\x18\x52\x14\x16\x8a\x0c\x31\x21\x93\x55\x26\x15\x6d\x04\xf0\x47\x41\xe9\x74\x2e\x5d\x8b\x17\x6a\x71\x24\x4b\x4e\x32\x29\x48\xd3\xc8\xb6\x82\xac\xa0\x15\x59\xd6\xdc\x6e\x84\x00\xfa\xd9\x77\xd1\x0f\xe7\x2e\x82\x75\x4e\x15\xcb\xbc\x44\xa3\xf9\xf9\x3e\xe2\xb5\xb0\xb4\x36\x2b\x3a\xc8\xda\x2c\xa8\x26\x49\x17\xfa\xed\x32\xfc\xb7\x7d\xa7\xcc\xd3\xbb\x07\xd3\x69\xbd\x52\xa4\xbb\x1f\x43\xda\x2a\x3a\x2d\xef\x3d\x4a\x5a\x0d\x2d\xc9\x47\xb7\x6a\xfa\x1c\x85\x50\xae\x28\x7f\xb9\xdd\x89\xaf\x00\x00\x00\xff\xff\xb1\x1a\x5c\x4b\x85\x01\x00\x00")

func migrations20200311000001CreateIdentitiesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20200311000001CreateIdentitiesSql,
		"migrations/20200311000001-create-identities.sql",
	)
}

func migrations20200311000001CreateIdentitiesSql() (*asset, error) {
	bytes, err := migrations20200311000001CreateIdentitiesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20200311000001-create-identities.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaa, 0xcb, 0x82, 0x87, 0xcb, 0xd7, 0x70, 0xb9, 0xd, 0x73, 0xfa, 0xbe, 0xc1, 0x8c, 0xc5, 0x4c, 0xa4, 0x3b, 0x72, 0xd8, 0x8e, 0x82, 0x13, 0xc2, 0x89, 0xfc, 0x9b, 0x48, 0x4a, 0x28, 0x34, 0x52}}
	return a, nil
}

var _migrations20200311000002CreateAuthMethodsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xcf\xce\x9b\x30\x10\xc4\xef\x7e\x8a\xbd\x25\xa8\xf9\x9e\x80\x93\x83\x37\xa9\x55\x30\x08\x8c\x52\x7a\x41\x6e\x6c\x35\x48\xfc\x13\x98\xb6\x79\xfb\xca\x24\x69\x12\x25\xfa\x38\xb2\x8c\x7f\xb3\xda\x99\x8f\x0f\xf8\xd2\x54\xbf\x06\x65\x0d\xe4\x3d\x21\x41\x8a\x54\x22\xc8\x22\x41\x50\x93\x3d\x95\x8d\xb1\xa7\x4e\x97\xf6\xdc\x1b\xa0\x19\xa0\xc8\x23\x58\x13\x80\xd5\x68\x4d\x5d\xab\xa1\x54\x5a\x0f\x66\x1c\x57\x1b\x37\xec\x4f\x5d\x6b\xca\x76\x6a\x7e\x9a\xe1\x32\x31\x8d\xaa\xea\x15\xf1\xfc\x3b\x9b\x6e\xc3\x27\xf8\x38\x03\xd5\xf1\xd8\x4d\xad\x2d\x2b\x0d\x5b\xbe\xe7\x42\x82\x88\x25\x88\x3c\x0c\x21\xc5\x1d\xa6\x28\x02\xcc\x6e\xaa\x11\xd6\x95\xf6\x20\x16\xc0\x30\x44\x89\x10\xd0\x2c\xa0\x0c\x9d\x65\xa5\x4d\x6b\x2b\x7b\x5e\x20\x5d\x65\x95\xf9\x9c\xf5\x82\x48\x52\x1e\xd1\xb4\x80\x6f\x58\xc0\x1e\x05\xa6\x54\x22\x03\x1a\x1e\x68\x91\xb9\x0b\x71\x86\x42\x72\x59\x6c\x08\x01\x38\x0e\x46\x59\xa3\x4b\x65\x41\xf2\x08\x33\x49\xa3\x04\x0e\x5c\x7e\x9d\x3f\xe1\x47\x2c\xf0\x4e\x66\xb8\xa3\x79\xe8\xac\x0e\x6b\xcf\xb9\x4f\xbd\x5e\x7a\x3d\xbb\xb8\x70\xca\xd7\xb8\x6e\x60\x87\xfa\xad\xea\xc9\x80\x35\x7f\xed\xff\xf1\x63\x26\x5c\x30\xfc\xee\x4e\xf0\x1c\xcb\x3d\x13\xcf\x5f\x90\x3e\x5c\x7d\x51\x3b\xef\xbb\xb9\xec\xe4\x96\x78\x2c\x21\xeb\xfe\xb4\x84\xb0\x34\x4e\xde\x14\xc5\xbf\xfe\x78\xd7\x4e\x9f\xfc\x0b\x00\x00\xff\xff\x81\xdc\x93\xfc\xcc\x02\x00\x00")

func migrations20200311000002CreateAuthMethodsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20200311000002CreateAuthMethodsSql,
		"migrations/20200311000002-create-auth-methods.sql",
	)
}

func migrations20200311000002CreateAuthMethodsSql() (*asset, error) {
	bytes, err := migrations20200311000002CreateAuthMethodsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20200311000002-create-auth-methods.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x14, 0x3a, 0x39, 0x59, 0xd, 0x9, 0x9d, 0x68, 0x45, 0xbc, 0x3a, 0xdf, 0xf5, 0x8c, 0x4, 0x29, 0x60, 0xda, 0x7, 0xf9, 0x8b, 0xfa, 0x57, 0x49, 0xfa, 0x41, 0xb3, 0xb0, 0x94, 0x6d, 0xdd, 0x1e}}
	return a, nil
}

var _migrations20200320000000CreateAccountsAuditSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\xd1\x6e\xda\x30\x14\x7d\xf7\x57\x9c\x87\x4a\x85\x8d\xee\x03\x1a\xed\xc1\xe0\x9b\x60\xd5\xd8\x91\x73\x3d\x9a\xbd\x20\x04\x11\x42\x6a\x81\x41\xd0\x7e\x7f\x0a\x0e\x0d\x2d\xac\x6f\x93\xf6\x76\x62\xdf\x1c\x9f\x73\xef\xb1\x1f\x1e\xf0\xf5\x75\xbd\xda\xcf\xeb\x0a\x61\x27\xc4\xc8\x93\x64\x02\x97\x39\x61\x7e\x5c\xae\xeb\xd9\x76\x07\x59\x80\x6c\x98\xa0\x27\x80\x7b\x6d\x0b\xf2\x7c\x3f\x68\x70\xc8\x95\x64\x8a\x58\x91\x21\xa6\x7b\xd1\x4f\x3a\x16\x39\x34\x84\xf9\x62\xb1\x3d\x6e\xea\xc3\xec\xc4\x77\x22\x89\xcc\xeb\x25\x86\x3a\xd3\x96\x61\x1d\xc3\x06\x63\x90\x7b\x3d\x91\xbe\xc4\x13\x95\xc8\xc8\x92\x97\x4c\x0a\xd2\x4c\x65\x59\x34\x32\xb4\x22\xcb\x9a\xcb\xc1\x1b\xc9\xbc\x06\xeb\x09\x15\x2c\x27\x39\xa6\x9a\xc7\xa7\x4f\xfc\x74\x96\x3a\x5a\x45\xa9\x0c\xa6\x39\x67\xda\xeb\x77\xff\x1e\x0f\xd5\x1e\x4c\xcf\x7c\x5d\x19\x0a\xf2\x5d\xe1\x76\xd7\x81\x73\x69\xb3\x6b\xf4\x53\xe7\xef\xe4\xfc\xb2\x9f\x45\x3d\xaf\xab\xd7\x6a\x53\x0f\xab\xd5\x7a\x73\x6e\x4a\x1a\xec\x88\xb5\xb3\xd8\x57\x8b\xed\x7e\x39\x7b\xdf\x9e\x5e\x1f\x9e\x38\x78\x5b\x80\xbd\xce\x32\xf2\x8d\xed\xbb\xa1\x53\xe5\x9d\x00\x86\x94\x69\x2b\x00\x40\xa7\xe8\x71\x36\x73\x39\xbe\xbf\xcd\xa4\x0f\x1e\x53\xdc\x06\xe2\x1a\xb4\x65\xf7\x71\x04\x3f\xa4\x09\x54\xa0\xd7\x9a\x1d\xe0\x1a\x9c\xa8\x1f\x1f\xcf\xae\x07\xb0\x34\xfd\xf6\xa5\x9f\xb4\xe4\x51\x63\xb3\x18\x57\xc8\x14\xef\x04\xb5\xc1\xf8\x7f\x04\xb5\xe9\xfc\x97\x82\x9c\x51\xd7\x82\x9c\x51\xad\x20\xab\xa0\xd3\x06\x93\x55\x89\x88\x13\x85\x91\x36\x0b\x32\x23\xec\x5e\x76\xab\xc3\xaf\x97\xe4\x76\x80\x68\xb3\xec\x2e\x55\x1b\x8b\x9b\xf1\x11\x32\x65\xf2\x67\x67\xce\x23\x0e\xa2\x41\xb1\x03\x70\xb6\x0b\x2c\x90\x3a\x0f\x92\xa3\x31\xbc\x9b\x82\x9e\x69\x14\x98\x90\x7b\x37\x22\x15\x3c\xfd\x2d\xa2\x1f\x72\xae\xb6\xbf\x37\x42\x28\xef\xf2\xcf\xc5\x5d\x9e\x9d\xc4\xfa\xcf\x2f\x43\x5b\x74\xeb\x19\x39\x6f\x5d\xbe\x53\x89\xf8\x13\x00\x00\xff\xff\x6f\x9b\x27\x54\xce\x04\x00\x00")

func migrations20200320000000CreateAccountsAuditSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20200320000000CreateAccountsAuditSql,
		"migrations/20200320000000-create-accounts-audit.sql",
	)
}

func migrations20200320000000CreateAccountsAuditSql() (*asset, error) {
	bytes, err := migrations20200320000000CreateAccountsAuditSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20200320000000-create-accounts-audit.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa5, 0x83, 0x86, 0xf3, 0xa3, 0x90, 0x12, 0x71, 0x8b, 0x6b, 0x30, 0x68, 0x8e, 0xe6, 0xfa, 0x36, 0xdd, 0x1e, 0xc9, 0x1a, 0xd1, 0xa0, 0x4, 0x61, 0x4e, 0xb6, 0xd2, 0x99, 0xfc, 0xa6, 0xcd, 0xf8}}
	return a, nil
}

var _migrations20200320000001CreateIdentitiesAuditSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\xc1\x6e\xdb\x3a\x10\xbc\xf3\x2b\xe6\x10\x20\xf6\x7b\x4e\x3f\x20\x42\x0f\xb4\xb9\x92\x89\xd0\xa4\x40\x2d\xab\xa8\x17\xc3\xa8\x04\x43\x40\x22\xbb\xb6\x82\xfe\x7e\x21\x4b\xae\x9c\x38\x41\x4e\x05\x7a\x1b\x2d\x97\xab\x99\xdd\x59\xde\xdd\xe1\xff\xe7\x7a\x7b\xd8\xb4\x15\xc2\x5e\x88\x85\x27\xc9\x04\x96\x73\x43\xa8\xcb\xaa\x69\xeb\xb6\xae\x8e\xeb\xcd\x4b\x59\xb7\x98\x08\xe0\x84\xd6\x75\x89\xb9\x4e\xb4\x65\x58\xc7\xb0\xc1\x18\xa4\x5e\xaf\xa4\x2f\xf0\x40\x05\x12\xb2\xe4\x25\x93\x82\x34\xb9\x2c\x32\xc8\x0c\x5a\x91\x65\xcd\xc5\xec\x4f\x91\x4d\x0b\xd6\x2b\xca\x58\xae\x52\xe4\x9a\x97\xa7\x4f\x7c\x77\x96\xc6\xb2\x8a\x62\x19\x4c\xf7\x9f\x7c\x32\x1d\xef\xbe\x1c\xab\x03\x98\x1e\xf9\x3a\x33\x64\xe4\xc7\xc4\xdd\x7e\x04\xe7\xd4\xee\xd4\xe8\x87\x4b\x85\x62\x1a\x09\x71\xd9\x8d\xac\xdd\xb4\xd5\x73\xd5\xb4\xf3\x6a\x5b\x37\xe7\xc6\xc4\xc1\x2e\x58\x3b\x8b\x43\xf5\x63\x77\x28\xd7\x6f\x5b\x34\x99\xc2\x13\x07\x6f\x33\xb0\xd7\x49\x42\xbe\x93\x7e\x33\x77\xaa\xb8\x11\xc0\x9c\x12\x6d\x05\x00\xe8\x18\x13\x4e\xd6\x2e\xc5\x57\xdc\x6a\x9b\x91\xe7\xdb\x29\x78\x49\xfd\x31\xd0\xc7\xa0\x2d\xbb\xeb\x41\x7c\x93\x26\x50\x86\xc9\x20\x79\x86\x6b\x70\x2a\x7e\x7f\x7f\xd6\x3e\x83\xa5\xfc\xcb\x7f\xd3\x68\x28\xdf\xb3\xec\x82\x7d\x84\x4c\xf6\x8a\x52\x48\x95\x64\xfa\xa7\x28\x29\x32\xf4\xd7\x29\x39\xa3\xae\x29\x39\xa3\x06\x4a\x56\x41\xc7\x1d\x26\xab\x22\xd1\xcf\x15\x46\xda\x24\xc8\x84\xb0\x7f\xda\x6f\x8f\x3f\x9f\xa2\xf7\x8d\x44\x4d\x39\x2e\xd8\x60\x8e\x0f\x6c\x24\x64\xcc\xe4\xcf\xea\x9c\x47\x3f\x8e\x0e\xf5\x5d\x80\xb3\x97\xe6\x05\x62\xe7\x41\x72\xb1\x84\x77\x39\xe8\x91\x16\x81\x09\xa9\x77\x0b\x52\xc1\xd3\xc7\x76\x7d\xe3\x7a\xb5\xfb\xd5\x08\xa1\xbc\x4b\x3f\xa3\xf8\x9a\x41\xd4\xdf\xf9\x6c\x3d\x86\xb4\xf7\x9f\x97\x48\xfc\x0e\x00\x00\xff\xff\x12\x39\xe3\xeb\x8e\x04\x00\x00")

func migrations20200320000001CreateIdentitiesAuditSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20200320000001CreateIdentitiesAuditSql,
		"migrations/20200320000001-create-identities-audit.sql",
	)
}

func migrations20200320000001CreateIdentitiesAuditSql() (*asset, error) {
	bytes, err := migrations20200320000001CreateIdentitiesAuditSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20200320000001-create-identities-audit.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf2, 0x4f, 0x36, 0x8f, 0xf0, 0x74, 0xca, 0x86, 0x60, 0x21, 0xda, 0xb8, 0x3, 0x5e, 0xd1, 0x21, 0x6e, 0x2, 0xfb, 0x89, 0x56, 0x62, 0x6e, 0xd0, 0xc, 0x88, 0x3a, 0x60, 0x62, 0x6a, 0x91, 0x8b}}
	return a, nil
}

var _migrations20200320000002CreateAuthMethodsAuditSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x54\xcb\x6e\xdb\x30\x10\xbc\xf3\x2b\xe6\x10\x20\x76\xeb\xf4\x03\x22\xf4\x40\x9b\x2b\x99\x08\x4d\x0a\xd4\xb2\x8e\x7b\x11\x84\x4a\x70\x0c\xc4\x8f\xda\x32\xfa\xfb\x85\x2c\xb9\xaa\xe3\xa4\xb9\x15\xb9\x8d\x96\xcb\xe5\xec\xec\xac\xee\xee\xf0\x79\xbd\x5a\xee\x8b\xba\x42\xd8\x09\x31\xf1\x24\x99\xc0\x72\x6c\x08\xc5\xb1\x7e\xca\xd7\x55\xfd\xb4\x2d\x0f\x79\x71\x2c\x57\x35\x06\x02\x38\xa1\x7c\x55\x62\xac\x13\x6d\x19\xd6\x31\x6c\x30\x06\xa9\xd7\x33\xe9\x17\x78\xa0\x05\x12\xb2\xe4\x25\x93\x82\x34\x73\xb9\xc8\x20\x33\x68\x45\x96\x35\x2f\x46\x7f\x8a\x14\x35\x58\xcf\x28\x63\x39\x4b\x31\xd7\x3c\x3d\x7d\xe2\xbb\xb3\xd4\x97\x55\x14\xcb\x60\x9a\x77\xe6\x83\x61\x7f\xf7\x78\xa8\xf6\x60\x7a\xe4\xeb\xcc\x90\x91\xef\x13\xb7\xbb\x1e\x9c\x53\x9b\x53\xa3\x1f\x2e\x7b\x14\xc3\x48\x88\xbf\x15\xc9\xea\xa2\xae\xd6\xd5\xa6\x1e\x57\xcb\xd5\xe6\x2c\x4e\x1c\xec\x84\xb5\xb3\xd8\x57\x3f\xb6\xfb\x32\xbf\x96\x69\x30\x84\x27\x0e\xde\x66\x60\xaf\x93\x84\x7c\xd3\xfe\xcd\xd8\xa9\xc5\x8d\x00\xc6\x94\x68\x2b\x00\x40\xc7\x18\x70\x92\xbb\x14\x5f\x71\xab\x6d\x46\x9e\x6f\x87\xe0\x29\xb5\xc7\x40\x1b\x83\xb6\xec\x5e\x1b\xc7\x37\x69\x02\x65\x18\x74\x8d\x8f\x70\x0d\x4e\xe5\xef\xef\xcf\x0a\x8c\x60\x69\xfe\xe5\xd3\x30\xea\x1e\x68\x79\x36\xc1\x36\x42\x26\xbb\x20\x15\x52\x25\x99\x3e\x18\x29\x45\x86\xfe\x03\x29\x67\xd4\x35\x29\x67\x54\x47\xca\x2a\xe8\xb8\xc1\x64\x55\x24\xda\xe9\xc2\x48\x9b\x04\x99\x10\x76\xcf\xbb\xe5\xe1\xe7\x73\xf4\xba\xa1\x68\x53\xf6\xcb\xd6\x59\xe4\x4d\x3b\x09\x19\x33\xf9\x73\x87\xce\xa3\x1d\x4a\x83\x5a\x25\xe0\xec\xa5\x91\x81\xd8\x79\x90\x9c\x4c\xe1\xdd\x1c\xf4\x48\x93\xc0\x84\xd4\xbb\x09\xa9\xe0\xe9\x5f\xd6\x7d\xb1\x03\x6a\xfb\x6b\x23\x84\xf2\x2e\x7d\x9f\xe8\x4b\x1e\x51\x7b\xef\xfd\x85\xe9\x12\xdf\xfa\xed\x44\xe2\x77\x00\x00\x00\xff\xff\x06\xf2\x9a\x1b\xa8\x04\x00\x00")

func migrations20200320000002CreateAuthMethodsAuditSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations20200320000002CreateAuthMethodsAuditSql,
		"migrations/20200320000002-create-auth-methods-audit.sql",
	)
}

func migrations20200320000002CreateAuthMethodsAuditSql() (*asset, error) {
	bytes, err := migrations20200320000002CreateAuthMethodsAuditSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/20200320000002-create-auth-methods-audit.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfc, 0xf6, 0x44, 0xea, 0x65, 0x85, 0x7, 0x17, 0x47, 0x8c, 0x51, 0x36, 0xe4, 0x32, 0x27, 0x95, 0xc5, 0xb2, 0x49, 0x74, 0xff, 0x3d, 0xc3, 0x7c, 0x51, 0x12, 0xa1, 0x6a, 0x42, 0x94, 0x19, 0x65}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"migrations/20200309000000-initial-1.sql":                 migrations20200309000000Initial1Sql,
	"migrations/20200309000001-initial-2.sql":                 migrations20200309000001Initial2Sql,
	"migrations/20200311000000-create-accounts.sql":           migrations20200311000000CreateAccountsSql,
	"migrations/20200311000001-create-identities.sql":         migrations20200311000001CreateIdentitiesSql,
	"migrations/20200311000002-create-auth-methods.sql":       migrations20200311000002CreateAuthMethodsSql,
	"migrations/20200320000000-create-accounts-audit.sql":     migrations20200320000000CreateAccountsAuditSql,
	"migrations/20200320000001-create-identities-audit.sql":   migrations20200320000001CreateIdentitiesAuditSql,
	"migrations/20200320000002-create-auth-methods-audit.sql": migrations20200320000002CreateAuthMethodsAuditSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"migrations": &bintree{nil, map[string]*bintree{
		"20200309000000-initial-1.sql":                 &bintree{migrations20200309000000Initial1Sql, map[string]*bintree{}},
		"20200309000001-initial-2.sql":                 &bintree{migrations20200309000001Initial2Sql, map[string]*bintree{}},
		"20200311000000-create-accounts.sql":           &bintree{migrations20200311000000CreateAccountsSql, map[string]*bintree{}},
		"20200311000001-create-identities.sql":         &bintree{migrations20200311000001CreateIdentitiesSql, map[string]*bintree{}},
		"20200311000002-create-auth-methods.sql":       &bintree{migrations20200311000002CreateAuthMethodsSql, map[string]*bintree{}},
		"20200320000000-create-accounts-audit.sql":     &bintree{migrations20200320000000CreateAccountsAuditSql, map[string]*bintree{}},
		"20200320000001-create-identities-audit.sql":   &bintree{migrations20200320000001CreateIdentitiesAuditSql, map[string]*bintree{}},
		"20200320000002-create-auth-methods-audit.sql": &bintree{migrations20200320000002CreateAuthMethodsAuditSql, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
