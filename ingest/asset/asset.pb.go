// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        v5.29.3
// source: ingest/asset/asset.proto

package asset

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IssuedAsset struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AssetCode     string                 `protobuf:"bytes,1,opt,name=asset_code,json=assetCode,proto3" json:"asset_code,omitempty"` // Asset code (e.g., USD, BTC)
	Issuer        string                 `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`                        // Issuer account address
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IssuedAsset) Reset() {
	*x = IssuedAsset{}
	mi := &file_ingest_asset_asset_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IssuedAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IssuedAsset) ProtoMessage() {}

func (x *IssuedAsset) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_asset_asset_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IssuedAsset.ProtoReflect.Descriptor instead.
func (*IssuedAsset) Descriptor() ([]byte, []int) {
	return file_ingest_asset_asset_proto_rawDescGZIP(), []int{0}
}

func (x *IssuedAsset) GetAssetCode() string {
	if x != nil {
		return x.AssetCode
	}
	return ""
}

func (x *IssuedAsset) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

// Asset message that can represent either a native asset or an issued asset
type Asset struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AssetType:
	//
	//	*Asset_Native
	//	*Asset_IssuedAsset
	AssetType     isAsset_AssetType `protobuf_oneof:"asset_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Asset) Reset() {
	*x = Asset{}
	mi := &file_ingest_asset_asset_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_ingest_asset_asset_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_ingest_asset_asset_proto_rawDescGZIP(), []int{1}
}

func (x *Asset) GetAssetType() isAsset_AssetType {
	if x != nil {
		return x.AssetType
	}
	return nil
}

func (x *Asset) GetNative() bool {
	if x != nil {
		if x, ok := x.AssetType.(*Asset_Native); ok {
			return x.Native
		}
	}
	return false
}

func (x *Asset) GetIssuedAsset() *IssuedAsset {
	if x != nil {
		if x, ok := x.AssetType.(*Asset_IssuedAsset); ok {
			return x.IssuedAsset
		}
	}
	return nil
}

type isAsset_AssetType interface {
	isAsset_AssetType()
}

type Asset_Native struct {
	Native bool `protobuf:"varint,1,opt,name=native,proto3,oneof"` // Native asset (XLM)
}

type Asset_IssuedAsset struct {
	IssuedAsset *IssuedAsset `protobuf:"bytes,2,opt,name=issued_asset,json=issuedAsset,proto3,oneof"` // Issued asset - via classic operations.
}

func (*Asset_Native) isAsset_AssetType() {}

func (*Asset_IssuedAsset) isAsset_AssetType() {}

var File_ingest_asset_asset_proto protoreflect.FileDescriptor

var file_ingest_asset_asset_proto_rawDesc = []byte{
	0x0a, 0x18, 0x69, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x22, 0x44, 0x0a, 0x0b, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x22, 0x68, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x06, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x37, 0x0a, 0x0c, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ingest_asset_asset_proto_rawDescOnce sync.Once
	file_ingest_asset_asset_proto_rawDescData = file_ingest_asset_asset_proto_rawDesc
)

func file_ingest_asset_asset_proto_rawDescGZIP() []byte {
	file_ingest_asset_asset_proto_rawDescOnce.Do(func() {
		file_ingest_asset_asset_proto_rawDescData = protoimpl.X.CompressGZIP(file_ingest_asset_asset_proto_rawDescData)
	})
	return file_ingest_asset_asset_proto_rawDescData
}

var file_ingest_asset_asset_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_ingest_asset_asset_proto_goTypes = []any{
	(*IssuedAsset)(nil), // 0: asset.IssuedAsset
	(*Asset)(nil),       // 1: asset.Asset
}
var file_ingest_asset_asset_proto_depIdxs = []int32{
	0, // 0: asset.Asset.issued_asset:type_name -> asset.IssuedAsset
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ingest_asset_asset_proto_init() }
func file_ingest_asset_asset_proto_init() {
	if File_ingest_asset_asset_proto != nil {
		return
	}
	file_ingest_asset_asset_proto_msgTypes[1].OneofWrappers = []any{
		(*Asset_Native)(nil),
		(*Asset_IssuedAsset)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ingest_asset_asset_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ingest_asset_asset_proto_goTypes,
		DependencyIndexes: file_ingest_asset_asset_proto_depIdxs,
		MessageInfos:      file_ingest_asset_asset_proto_msgTypes,
	}.Build()
	File_ingest_asset_asset_proto = out.File
	file_ingest_asset_asset_proto_rawDesc = nil
	file_ingest_asset_asset_proto_goTypes = nil
	file_ingest_asset_asset_proto_depIdxs = nil
}
